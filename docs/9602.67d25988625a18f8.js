"use strict";var Ur=Object.defineProperty,Hr=Object.defineProperties,Qr=Object.getOwnPropertyDescriptors,Tt=Object.getOwnPropertySymbols,Br=Object.prototype.hasOwnProperty,Gr=Object.prototype.propertyIsEnumerable,Dt=($,J,p)=>J in $?Ur($,J,{enumerable:!0,configurable:!0,writable:!0,value:p}):$[J]=p,b=($,J)=>{for(var p in J||(J={}))Br.call(J,p)&&Dt($,p,J[p]);if(Tt)for(var p of Tt(J))Gr.call(J,p)&&Dt($,p,J[p]);return $},U=($,J)=>Hr($,Qr(J));(self.webpackChunkexample_app=self.webpackChunkexample_app||[]).push([[9602],{49602:($,J,p)=>{p.r(J),p.d(J,{default:()=>zr});var _e,s=p(17626),fe=p(73281),v=p(62208),ve=p(99959),ce=p(10699),o=p(77712),A=(p(85931),p(8314),p(90912)),E=p(76898),P=p(99433),Nt=p(44917),F=p(15861),st=p(29132),Ot=p(88879),Me=p(90885),M=p(84792),B=p(26584),Ae=p(2076),L=p(58817),jt=p(63290),Mt=p(32917),At=p(21726),q=p(83960),_=p(68653),xe=p(13812),at=p(25982),G=p(86810),_t=p(55342);const Ie=new Set(["raster","raster2","dem","fillraster"]),we=new Set(["rasters"]),ot=n=>n&&n.rasterFunction?Q.fromJSON(n):n,Ve=n=>n&&n instanceof Q?n.toJSON():n,Je=n=>(null==n?void 0:n.functionName)&&!n.declaredClass,lt=n=>Je(n)?new Q(n):n;let Q=_e=class extends G.wq{constructor(n){super(n),this.functionName=null,this.outputPixelType="unknown",this.variableName=null,this.rasterFunctionDefinition=null}set functionArguments(n){if(n){const i=Object.keys(n);if(i.some(e=>Ie.has(e.toLowerCase())&&Je(n[e]))||i.some(e=>we.has(e.toLowerCase())&&Array.isArray(n[e])&&n[e].some(t=>Je(t)))){n=(0,L.d9)(n);for(const e of i)Ie.has(e.toLowerCase())?n[e]=lt(n[e]):we.has(e.toLowerCase())&&Array.isArray(n[e])&&(n[e]=n[e].map(t=>lt(t)))}}this._set("functionArguments",n)}readFunctionArguments(n){return(n=>{if(null==n)return null;n=(0,L.d9)(n);const i={};for(const e of Object.keys(n))i[e]=Ie.has(e.toLowerCase())?ot(n[e]):we.has(e.toLowerCase())&&Array.isArray(n[e])?n[e].map(ot):n[e];return i})(n)}writeFunctionArguments(n,i,e){const t={};for(const r of Object.keys(n))t[r]=Ie.has(r.toLowerCase())?Ve(n[r]):we.has(r.toLowerCase())&&Array.isArray(n[r])?n[r].map(Ve):Ve(n[r]);i[e]=t}readFunctionName(n,i){const e=i.rasterFunctionInfos;return i.name||(e&&e.length&&"None"!==e[0].name?e[0].name:i.rasterFunctionDefinition?i.rasterFunctionDefinition.name:i.rasterFunction)}clone(){return new _e({functionName:this.functionName,functionArguments:(0,L.d9)(this.functionArguments),outputPixelType:this.outputPixelType,variableName:this.variableName,rasterFunctionDefinition:(0,L.d9)(this.rasterFunctionDefinition)})}};(0,s._)([(0,o.Cb)({json:{type:Object,name:"rasterFunctionArguments"}})],Q.prototype,"functionArguments",null),(0,s._)([(0,_.r)("functionArguments")],Q.prototype,"readFunctionArguments",null),(0,s._)([(0,P.c)("functionArguments")],Q.prototype,"writeFunctionArguments",null),(0,s._)([(0,o.Cb)({json:{type:String,write:{target:"rasterFunction"}}})],Q.prototype,"functionName",void 0),(0,s._)([(0,_.r)("functionName",["rasterFunction","rasterFunctionInfos","rasterFunctionDefinition"])],Q.prototype,"readFunctionName",null),(0,s._)([(0,_t.J)({C128:"c128",C64:"c64",F32:"f32",F64:"f64",S16:"s16",S32:"s32",S8:"s8",U1:"u1",U16:"u16",U2:"u2",U32:"u32",U4:"u4",U8:"u8",UNKNOWN:"unknown"},{ignoreUnknown:!1}),(0,o.Cb)({json:{default:"unknown"}})],Q.prototype,"outputPixelType",void 0),(0,s._)([(0,o.Cb)({type:String,json:{read:!0,write:!0}})],Q.prototype,"variableName",void 0),(0,s._)([(0,o.Cb)({type:Object,json:{name:"rasterFunctionDefinition"}})],Q.prototype,"rasterFunctionDefinition",void 0),Q=_e=(0,s._)([(0,E.j)("esri.layers.support.RasterFunction")],Q);const I=Q,Jt={StretchFunction:{arguments:{ComputeGamma:{isDataset:!1,isPublic:!1,name:"ComputeGamma",type:"RasterFunctionVariable",value:!1},DRA:{isDataset:!1,isPublic:!1,name:"DRA",type:"RasterFunctionVariable",value:!1},EstimateStatsHistogram:{isDataset:!1,isPublic:!1,name:"EstimateStatsHistogram",type:"RasterFunctionVariable",value:!1},Gamma:{displayName:"Gamma",isDataset:!1,isPublic:!1,name:"Gamma",type:"RasterFunctionVariable"},Histograms:{isDataset:!1,isPublic:!1,name:"Histograms",type:"RasterFunctionVariable"},Max:{isDataset:!1,isPublic:!1,name:"Max",type:"RasterFunctionVariable",value:255},MaxPercent:{isDataset:!1,isPublic:!1,name:"MaxPercent",type:"RasterFunctionVariable",value:.5},Min:{isDataset:!1,isPublic:!1,name:"Min",type:"RasterFunctionVariable",value:0},MinPercent:{isDataset:!1,isPublic:!1,name:"MinPercent",type:"RasterFunctionVariable",value:.25},NumberOfStandardDeviations:{isDataset:!1,isPublic:!1,name:"NumberOfStandardDeviation",type:"RasterFunctionVariable",value:2},Raster:{isDataset:!0,isPublic:!1,name:"Raster",type:"RasterFunctionVariable"},SigmoidStrengthLevel:{isDataset:!1,isPublic:!1,name:"SigmoidStrengthLevel",type:"RasterFunctionVariable",value:2},Statistics:{isDataset:!1,isPublic:!1,name:"Statistics",type:"RasterFunctionVariable"},StretchType:{isDataset:!1,isPublic:!1,name:"StretchType",type:"RasterFunctionVariable",value:0},type:"StretchFunctionArguments",UseGamma:{isDataset:!1,isPublic:!1,name:"UseGamma",type:"RasterFunctionVariable",value:!1}},description:"Enhances an image by adjusting the range of values displayed. This does not alter the underlying pixel values. If a pixel has a value outside of the specified range, it will appear as either the minimum or maximum value.",function:{description:"Enhances an image by adjusting the range of values displayed. This does not alter the underlying pixel values. If a pixel has a value outside of the specified range, it will appear as either the minimum or maximum value.",name:"Stretch",pixelType:"UNKNOWN",type:"StretchFunction"},functionType:0,name:"Stretch",thumbnail:""},RemapFunction:{name:"Remap",description:"Changes pixel values by assigning new values to ranges of pixel values or using an external table.",function:{type:"RemapFunction",pixelType:"UNKNOWN",name:"Remap",description:"Changes pixel values by assigning new values to ranges of pixel values or using an external table."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},UseTable:{name:"UseTable",isPublic:!1,isDataset:!1,value:!1,type:"RasterFunctionVariable"},InputRanges:{name:"InputRanges",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable",displayName:"Input Ranges"},OutputValues:{name:"OutputValues",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable",displayName:"Output Values"},NoDataRanges:{name:"NoDataRanges",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable",displayName:"NoData Ranges"},Table:{name:"Table",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},InputField:{name:"InputField",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},OutputField:{name:"OutputField",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},InputMaxField:{name:"InputMaxField",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},RemapTableType:{name:"RemapTableType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},AllowUnmatched:{name:"AllowUnmatched",isPublic:!1,isDataset:!1,value:!0,type:"RasterFunctionVariable"},type:"RemapFunctionArguments"},functionType:0,thumbnail:""},ColormapFunction:{name:"Colormap",description:"Changes pixel values to display the raster data as either a grayscale or a red, green, blue (RGB) image, based on a colormap or a color ramp.",function:{type:"ColormapFunction",pixelType:"UNKNOWN",name:"Colormap",description:"Changes pixel values to display the raster data as either a grayscale or a red, green, blue (RGB) image, based on a colormap or a color ramp."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},ColorSchemeType:{name:"ColorSchemeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},Colormap:{name:"Colormap",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},ColormapName:{name:"ColormapName",isPublic:!1,isDataset:!1,value:"Gray",type:"RasterFunctionVariable"},ColorRamp:{name:"ColorRamp",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},type:"ColormapFunctionArguments"},functionType:0,thumbnail:""},ShadedReliefFunction:{name:"Shaded Relief",description:"Creates a multiband, color coded, 3D representation of the surface, with the sun's relative position taken into account for shading the image.",function:{type:"ShadedReliefFunction",pixelType:"UNKNOWN",name:"Shaded Relief",description:"Creates a multiband, color coded, 3D representation of the surface, with the sun's relative position taken into account for shading the image."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},ColorSchemeType:{name:"ColorSchemeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},ColorRamp:{name:"ColorRamp",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},HillshadeType:{name:"HillshadeType",isPublic:!1,isDataset:!1,value:0,type:"RasterFunctionVariable"},Colormap:{name:"Colormap",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},Azimuth:{name:"Azimuth",isPublic:!1,isDataset:!1,value:315,type:"RasterFunctionVariable"},Altitude:{name:"Altitude",isPublic:!1,isDataset:!1,value:45,type:"RasterFunctionVariable"},SlopeType:{name:"SlopeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},ZFactor:{name:"ZFactor",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},PSPower:{name:"PSPower",isPublic:!1,isDataset:!1,value:.664,type:"RasterFunctionVariable"},PSZFactor:{name:"PSZFactor",isPublic:!1,isDataset:!1,value:.024,type:"RasterFunctionVariable"},RemoveEdgeEffect:{name:"RemoveEdgeEffect",isPublic:!1,isDataset:!1,value:!1,type:"RasterFunctionVariable"},type:"ShadedReliefFunctionArguments"},functionType:0,thumbnail:""},HillshadeFunction:{name:"Hillshade",description:"Creates a 3D representation of the surface, with the sun's relative position taken into account for shading the image",function:{type:"HillshadeFunction",pixelType:"UNKNOWN",name:"Hillshade",description:"Creates a 3D representation of the surface, with the sun's relative position taken into account for shading the image"},arguments:{DEM:{name:"DEM",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},HillshadeType:{name:"HillshadeType",isPublic:!1,isDataset:!1,value:0,type:"RasterFunctionVariable"},Azimuth:{name:"Azimuth",isPublic:!1,isDataset:!1,value:315,type:"RasterFunctionVariable"},Altitude:{name:"Altitude",isPublic:!1,isDataset:!1,value:45,type:"RasterFunctionVariable"},SlopeType:{name:"SlopeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},ZFactor:{name:"ZFactor",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},PSPower:{name:"PSPower",isPublic:!1,isDataset:!1,value:.664,type:"RasterFunctionVariable"},PSZFactor:{name:"PSZFactor",isPublic:!1,isDataset:!1,value:.024,type:"RasterFunctionVariable"},RemoveEdgeEffect:{name:"RemoveEdgeEffect",isPublic:!1,isDataset:!1,value:!1,type:"RasterFunctionVariable"},type:"HillshadeFunctionArguments"},functionType:0,thumbnail:""},ResampleFunction:{name:"Resample",description:"Changes the cell size of a raster.",function:{type:"ResampleFunction",pixelType:"UNKNOWN",name:"Resample",description:"Changes the cell size of a raster."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},ResamplingType:{name:"ResamplingType",isPublic:!1,isDataset:!1,value:0,type:"RasterFunctionVariable"},InputCellSize:{name:"InputCellsize",isPublic:!1,isDataset:!1,value:{x:0,y:0},type:"RasterFunctionVariable"},OutputCellSize:{name:"OutputCellsize",isPublic:!1,isDataset:!1,value:{x:0,y:0},type:"RasterFunctionVariable"},type:"ResampleFunctionArguments"},functionType:0,thumbnail:""}};var ye=p(70208),Et=p(65468),Lt=p(69565);const Zt={u1:[0,1],u2:[0,3],u4:[0,15],u8:[0,255],s8:[-128,127],u16:[0,65535],s16:[-32768,32767]},zt={simple_scalar:"Simple Scalar",wind_barb:"Wind Barb",single_arrow:"Single Arrow",beaufort_kn:"Beaufort Wind (Knots)",beaufort_m:"Beaufort Wind (MetersPerSecond)",ocean_current_m:"Ocean Current (MetersPerSecond)",ocean_current_kn:"Ocean Current (Knots)"},Ut=new Set(["raster-stretch","unique-value","class-breaks","raster-shaded-relief","vector-field","raster-colormap"]);function ut(n){return Ut.has(n.type)}function pt(n,i){if(!n||!i)return(0,L.d9)(n||i);const e=(0,L.d9)(n);if(i.rasterFunctionDefinition){const t=i.rasterFunctionDefinition;(t.thumbnail||t.thumbnailEx)&&(t.thumbnail=t.thumbnailEx=null),ct(e.rasterFunctionDefinition.arguments,i)}else"none"!==i.functionName.toLowerCase()&&(mt(e.functionArguments).Raster=i);return e}function ct(n,i){for(const e in n)"raster"===e.toLowerCase()&&("RasterFunctionVariable"===n[e].type?(n[e]=i.rasterFunctionDefinition,n[e].type="RasterFunctionTemplate"):"RasterFunctionTemplate"===n[e].type&&ct(n[e].arguments,i))}function ee(n){const i=(0,L.d9)(Jt[n.functionName+"Function"]),e=n.functionArguments;for(const t in e)"raster"===t.toLowerCase()?(i.arguments[t]=ee(e[t]),i.arguments[t].type="RasterFunctionTemplate"):"colormap"===t.toLowerCase()?(i.arguments[t].value=Yt(e[t]),i.arguments.ColorSchemeType.value=0):i.arguments[t].value=e[t];return i}function mt(n){const i=n.Raster;return i&&"esri.layers.support.RasterFunction"===i.declaredClass?mt(i.functionArguments):n}const Re={none:0,standardDeviation:3,histogramEqualization:4,minMax:5,percentClip:6,sigmoid:9};function Fe(n,i){const e=Zt[String(i).toLowerCase()];return e&&n.push([Math.floor(e[0]-1),0,0,0],[Math.ceil(e[1]+1),0,0,0]),n}function dt(n){if(!n)return;const{fields:i}=n,e=i&&i.find(t=>t&&t.name&&"value"===t.name.toLowerCase());return e&&e.name}function Xt(n){const i=[];return n.forEach(e=>{const t=e;if(Array.isArray(t))i.push(t);else{if(null==t.min||null==t.max)return;i.push([t.min,t.max,t.avg||0,t.stddev||0])}}),i}function Yt(n){const i=[],e=[];return n.forEach(t=>{i.push(t[0]),e.push((0,ye.io)([...t.slice(1),255]))}),{type:"RasterColormap",values:i,colors:e}}var Ee,qt=p(66656),ie=p(49672);const be=(0,Ae.w)()({MT_FIRST:"first",MT_LAST:"last",MT_MIN:"min",MT_MAX:"max",MT_MEAN:"mean",MT_BLEND:"blend",MT_SUM:"sum"}),Le=(0,Ae.w)()({esriMosaicNone:"none",esriMosaicCenter:"center",esriMosaicNadir:"nadir",esriMosaicViewpoint:"viewpoint",esriMosaicAttribute:"attribute",esriMosaicLockRaster:"lock-raster",esriMosaicNorthwest:"northwest",esriMosaicSeamline:"seamline"});let Z=Ee=class extends G.wq{constructor(n){super(n),this.ascending=!0,this.itemRenderingRule=null,this.lockRasterIds=null,this.method=null,this.multidimensionalDefinition=null,this.objectIds=null,this.operation=null,this.sortField=null,this.sortValue=null,this.viewpoint=null,this.where=null}readAscending(n,i){return null!=i.ascending?i.ascending:null==i.sortAscending||i.sortAscending}readMethod(n,i){return function kt(n){let i;switch(n?n.toLowerCase().replace("esrimosaic",""):""){case"byattribute":case"attribute":i="esriMosaicAttribute";break;case"lockraster":i="esriMosaicLockRaster";break;case"center":i="esriMosaicCenter";break;case"northwest":i="esriMosaicNorthwest";break;case"nadir":i="esriMosaicNadir";break;case"viewpoint":i="esriMosaicViewpoint";break;case"seamline":i="esriMosaicSeamline";break;default:i="esriMosaicNone"}return Le.fromJSON(i)}(i.mosaicMethod||i.defaultMosaicMethod)}readOperation(n,i){const e=i.mosaicOperation,t=i.mosaicOperator&&i.mosaicOperator.toLowerCase(),r=e||(t?be.toJSON(t):null);return be.fromJSON(r)||"first"}castSortValue(n){return null==n||"string"==typeof n||"number"==typeof n?n:`${n}`}clone(){return new Ee({ascending:this.ascending,itemRenderingRule:(0,L.d9)(this.itemRenderingRule),lockRasterIds:(0,L.d9)(this.lockRasterIds),method:this.method,multidimensionalDefinition:(0,L.d9)(this.multidimensionalDefinition),objectIds:(0,L.d9)(this.objectIds),operation:this.operation,sortField:this.sortField,sortValue:this.sortValue,viewpoint:(0,L.d9)(this.viewpoint),where:this.where})}};(0,s._)([(0,o.Cb)({type:Boolean,json:{write:!0}})],Z.prototype,"ascending",void 0),(0,s._)([(0,_.r)("ascending",["ascending","sortAscending"])],Z.prototype,"readAscending",null),(0,s._)([(0,o.Cb)({type:I,json:{write:!0}})],Z.prototype,"itemRenderingRule",void 0),(0,s._)([(0,o.Cb)({type:[A.z8],json:{write:{overridePolicy(){return{enabled:"lock-raster"===this.method}}}}})],Z.prototype,"lockRasterIds",void 0),(0,s._)([(0,o.Cb)({type:String,json:{type:Le.jsonValues,write:{target:"mosaicMethod",writer:Le.write}}})],Z.prototype,"method",void 0),(0,s._)([(0,_.r)("method",["mosaicMethod","defaultMosaicMethod"])],Z.prototype,"readMethod",null),(0,s._)([(0,o.Cb)({type:[at.Z],json:{write:!0}})],Z.prototype,"multidimensionalDefinition",void 0),(0,s._)([(0,o.Cb)({type:[A.z8],json:{name:"fids",write:!0}})],Z.prototype,"objectIds",void 0),(0,s._)([(0,o.Cb)({json:{type:be.jsonValues,read:{reader:be.read},write:{target:"mosaicOperation",writer:be.write}}})],Z.prototype,"operation",void 0),(0,s._)([(0,_.r)("operation",["mosaicOperation","mosaicOperator"])],Z.prototype,"readOperation",null),(0,s._)([(0,o.Cb)({type:String,json:{write:{overridePolicy(){return{enabled:"attribute"===this.method}}}}})],Z.prototype,"sortField",void 0),(0,s._)([(0,o.Cb)({type:[String,Number],json:{write:{allowNull:!0,overridePolicy(){return{enabled:"attribute"===this.method,allowNull:!0}}}}})],Z.prototype,"sortValue",void 0),(0,s._)([(0,qt.p)("sortValue")],Z.prototype,"castSortValue",null),(0,s._)([(0,o.Cb)({type:ie.Z,json:{write:!0}})],Z.prototype,"viewpoint",void 0),(0,s._)([(0,o.Cb)({type:String,json:{write:!0}})],Z.prototype,"where",void 0),Z=Ee=(0,s._)([(0,E.j)("esri.layers.support.MosaicRule")],Z);const X=Z;var W=p(2939);let O=class extends G.wq{constructor(){super(...arguments),this.layer=null,this.adjustAspectRatio=void 0,this.bandIds=void 0,this.compression=void 0,this.compressionQuality=void 0,this.compressionTolerance=.01,this.interpolation=null,this.noData=null,this.noDataInterpretation=void 0,this.pixelType=void 0,this.lercVersion=2}writeAdjustAspectRatio(n,i,e){this.layer.version<10.3||(i[e]=n)}writeCompressionQuality(n,i,e){this.format&&this.format.toLowerCase().includes("jpg")&&null!=n&&(i[e]=n)}writeCompressionTolerance(n,i,e){"lerc"===this.format&&null!=n&&(i[e]=n)}get format(){var n;return"vector-field"===(null==(n=this.layer.renderer)?void 0:n.type)?"lerc":this.layer.format}writeLercVersion(n,i,e){"lerc"===this.format&&this.layer.version>=10.5&&(i[e]=n)}get version(){const n=this.layer;return n.commitProperty("bandIds"),n.commitProperty("format"),n.commitProperty("compressionQuality"),n.commitProperty("compressionTolerance"),n.commitProperty("interpolation"),n.commitProperty("noData"),n.commitProperty("noDataInterpretation"),n.commitProperty("mosaicRule"),n.commitProperty("renderingRule"),n.commitProperty("adjustAspectRatio"),n.commitProperty("pixelFilter"),n.commitProperty("renderer"),n.commitProperty("definitionExpression"),(this._get("version")||0)+1}set version(n){this._set("version",n)}get mosaicRule(){const n=this.layer;let i=n.mosaicRule;const e=n.definitionExpression;return i?e&&e!==i.where&&(i=i.clone(),i.where=e):e&&(i=new X({where:e})),i}get renderingRule(){var r;const n=this.layer;let i=n.renderingRule;const e=n.pixelFilter,t=!n.format||n.format.includes("jpg")||n.format.includes("png");return i=this._addResampleRasterFunction(i),t&&!e&&"vector-field"!==(null==(r=n.renderer)?void 0:r.type)&&(i=this.combineRendererWithRenderingRule()),i}combineRendererWithRenderingRule(){var r;const n=this.layer,{rasterInfo:i,renderingRule:e,renderer:t}=n;return t&&ut(t)?pt(function Ht(n,i){switch(i=i||{},n.type){case"raster-stretch":return function Gt(n,i){var u;const e=i.convertToRFT,t=new I;t.functionName="Stretch";const r=Re[Et.v.toJSON(n.stretchType)],a="u8",l={StretchType:r,Statistics:Xt(n.statistics),DRA:n.dynamicRangeAdjustment,UseGamma:n.useGamma,Gamma:n.gamma,ComputeGamma:n.computeGamma};if(null!=n.outputMin&&(l.Min=n.outputMin),null!=n.outputMax&&(l.Max=n.outputMax),r===Re.standardDeviation?(l.NumberOfStandardDeviations=n.numberOfStandardDeviations,t.outputPixelType=a):r===Re.percentClip?(l.MinPercent=n.minPercent,l.MaxPercent=n.maxPercent,t.outputPixelType=a):r===Re.minMax?t.outputPixelType=a:r===Re.sigmoid&&(l.SigmoidStrengthLevel=n.sigmoidStrengthLevel),t.functionArguments=l,t.variableName="Raster",n.colorRamp){const c=n.colorRamp,d=new I;if(e)d.functionArguments={ColorRamp:(0,ye.pM)(c)};else{const m=(0,ye.Uh)(c);if(m)d.functionArguments={colorRamp:m};else if(!i.convertColorRampToColormap||"algorithmic"!==c.type&&"multipart"!==c.type){const g=n.colorRamp.toJSON();"algorithmic"===g.type?g.algorithm=g.algorithm||"esriCIELabAlgorithm":"multipart"===g.type&&(null==(u=g.colorRamps)?void 0:u.length)&&g.colorRamps.forEach(R=>R.algorithm=R.algorithm||"esriCIELabAlgorithm"),d.functionArguments={colorRamp:g}}else d.functionArguments={Colormap:(0,ye.Jw)(c,256)}}return d.variableName="Raster",d.functionName="Colormap",d.functionArguments.Raster=t,e?new I({rasterFunctionDefinition:ee(d)}):d}return e?new I({rasterFunctionDefinition:ee(t)}):t}(n,i);case"class-breaks":return function Wt(n,i){const e=[],t=[],r=[],a=[],{pixelType:u,rasterAttributeTable:c}=i,d=c&&c.features,m=dt(c);if(d&&Array.isArray(d)&&n.classBreakInfos){n.classBreakInfos.forEach((f,w)=>{const T=f.symbol.color;let N;T.a&&d.forEach(z=>{N=z.attributes[n.field],(N>=f.minValue&&N<f.maxValue||w===n.classBreakInfos.length-1&&N>=f.minValue)&&a.push([z.attributes[m],T.r,T.g,T.b])})});const h=u?Fe(a,u):a,y=new I;return y.functionName="Colormap",y.functionArguments={},y.functionArguments.Colormap=h,y.variableName="Raster",i.convertToRFT?new I({rasterFunctionDefinition:ee(y)}):y}n.classBreakInfos.forEach((h,y)=>{const f=h.symbol&&h.symbol.color;f.a?(e.push(0===y?h.minValue:h.minValue+1e-6,h.maxValue+1e-6),t.push(y),a.push([y,f.r,f.g,f.b])):r.push(h.minValue,h.maxValue)});const g=u?Fe(a,u):a,R=new I;R.functionName="Remap",R.functionArguments={InputRanges:e,OutputValues:t,NoDataRanges:r},R.variableName="Raster";const S=new I;return S.functionName="Colormap",S.functionArguments={Colormap:g,Raster:R},i.convertToRFT?new I({rasterFunctionDefinition:ee(S)}):S}(n,i);case"unique-value":return function Kt(n,i){var g,R;const e=[],{pixelType:t,rasterAttributeTable:r}=i,a=r&&r.features,l=dt(r),u=null==(R=null==(g=n.defaultSymbol)?void 0:g.color)?void 0:R.toRgb(),c=n.uniqueValueInfos;if(c)if(a){const S=new Map;c.forEach(y=>{var T;const f=y.value,w=null==(T=y.symbol.color)?void 0:T.toRgb();null!=f&&w&&S.set(String(f),w)});const h=n.field;a.forEach(({attributes:y})=>{const f=String(y[h]),w=y[l];if(S.has(f)){const T=S.get(f);e.push([w,...T])}else u&&e.push([w,...u])})}else for(let S=0;S<c.length;S++){const h=c[S],y=h.symbol.color,f=+h.value;if(null!=y&&y.a){if(isNaN(f))return null;e.push([f,y.r,y.g,y.b])}}const d=t&&e.length>0?Fe(e,t):e,m=new I;return m.functionName="Colormap",m.functionArguments={},m.functionArguments.Colormap=d,m.variableName="Raster",i.convertToRFT?new I({rasterFunctionDefinition:ee(m)}):m}(n,i);case"raster-colormap":return function $t(n,i){const e=n.extractColormap();if(!e||0===e.length)return;const{pixelType:t}=i,r=t?Fe(e,t):e,a=new I;return a.functionName="Colormap",a.functionArguments={},a.functionArguments.Colormap=r,i.convertToRFT?new I({rasterFunctionDefinition:ee(a)}):a}(n,i);case"vector-field":return function Qt(n,i){const e=new I;e.functionName="VectorFieldRenderer";const{dataType:t,bandProperties:r}=i,a="vector-uv"===t;let l,u;r&&2===r.length&&(l=r.map(R=>R.BandName.toLowerCase()).indexOf("magnitude"),u=r.map(R=>R.BandName.toLowerCase()).indexOf("direction")),-1!==l&&null!==l||(l=0,u=1);const c="arithmetic"===n.rotationType?1:2,d="flow-from"===n.flowRepresentation?0:1,m=n.visualVariables?n.visualVariables.find(R=>"Magnitude"===R.field):new Lt.Z,g={magnitudeBandID:l,directionBandID:u,isUVComponents:a,referenceSystem:c,massFlowAngleRepresentation:d,symbolTileSize:50,symbolTileSizeUnits:100,calculationMethod:"Vector Average",symbologyName:zt[n.style.toLowerCase().replace("-","_")],minimumMagnitude:m.minDataValue,maximumMagnitude:m.maxDataValue,minimumSymbolSize:m.minSize,maximumSymbolSize:m.maxSize};return e.functionArguments=g,i.convertToRFT?new I({rasterFunctionDefinition:ee(e)}):e}(n,i);case"raster-shaded-relief":return function Bt(n,i){const e=i.convertToRFT;if("elevation"!==i.dataType)return new I;const t=new I;t.functionName="Hillshade";const r="traditional"===n.hillshadeType?0:1,a="none"===n.scalingType?1:3,l={HillshadeType:r,SlopeType:a,ZFactor:n.zFactor};return 0===r&&(l.Azimuth=n.azimuth,l.Altitude=n.altitude),3===a&&(l.PSPower=n.pixelSizePower,l.PSZFactor=n.pixelSizeFactor),t.functionArguments=l,t.variableName="Raster",n.colorRamp&&(t.functionName="ShadedRelief",e?l.ColorRamp=(0,ye.pM)(n.colorRamp):l.Colormap=(0,ye.Jw)(n.colorRamp,256)),e?new I({rasterFunctionDefinition:ee(t)}):t}(n,i);case"flow":throw new Error("Unsupported rendering rule.")}}(t,{rasterAttributeTable:i.attributeTable,pixelType:i.pixelType,dataType:i.dataType,bandProperties:null==(r=i.keyProperties)?void 0:r.BandProperties,convertColorRampToColormap:n.version<10.6,convertToRFT:!(null==e||!e.rasterFunctionDefinition)}),e):e}_addResampleRasterFunction(n){var t;if("vector-field"!==(null==(t=this.layer.renderer)?void 0:t.type)||"Resample"===(null==n?void 0:n.functionName))return n;let e=new I({functionName:"Resample",functionArguments:{ResamplingType:"esriImageServiceDataTypeVector-UV"===this.layer.serviceDataType?7:10,InputCellSize:{x:this.layer.pixelSizeX,y:this.layer.pixelSizeY}}});return e=null!=n&&n.rasterFunctionDefinition?new I({rasterFunctionDefinition:ee(e)}):e,pt(e,n)}};(0,s._)([(0,o.Cb)()],O.prototype,"layer",void 0),(0,s._)([(0,o.Cb)({json:{write:!0}})],O.prototype,"adjustAspectRatio",void 0),(0,s._)([(0,P.c)("adjustAspectRatio")],O.prototype,"writeAdjustAspectRatio",null),(0,s._)([(0,o.Cb)({json:{write:!0}}),(0,q.B)("layer.bandIds")],O.prototype,"bandIds",void 0),(0,s._)([(0,o.Cb)({json:{write:!0}})],O.prototype,"compression",void 0),(0,s._)([(0,o.Cb)({json:{write:!0}}),(0,q.B)("layer.compressionQuality")],O.prototype,"compressionQuality",void 0),(0,s._)([(0,P.c)("compressionQuality")],O.prototype,"writeCompressionQuality",null),(0,s._)([(0,o.Cb)({json:{write:!0}}),(0,q.B)("layer.compressionTolerance")],O.prototype,"compressionTolerance",void 0),(0,s._)([(0,P.c)("compressionTolerance")],O.prototype,"writeCompressionTolerance",null),(0,s._)([(0,o.Cb)({json:{write:!0}})],O.prototype,"format",null),(0,s._)([(0,o.Cb)({type:String,json:{read:{reader:W.c.read},write:{writer:W.c.write}}}),(0,q.B)("layer.interpolation")],O.prototype,"interpolation",void 0),(0,s._)([(0,o.Cb)({json:{write:!0}}),(0,q.B)("layer.noData")],O.prototype,"noData",void 0),(0,s._)([(0,o.Cb)({type:String,json:{read:{reader:W.k.read},write:{writer:W.k.write}}}),(0,q.B)("layer.noDataInterpretation")],O.prototype,"noDataInterpretation",void 0),(0,s._)([(0,o.Cb)({json:{write:!0}})],O.prototype,"pixelType",void 0),(0,s._)([(0,o.Cb)({json:{write:!0}})],O.prototype,"lercVersion",void 0),(0,s._)([(0,P.c)("lercVersion")],O.prototype,"writeLercVersion",null),(0,s._)([(0,o.Cb)({type:Number})],O.prototype,"version",null),(0,s._)([(0,o.Cb)({json:{write:!0}})],O.prototype,"mosaicRule",null),(0,s._)([(0,o.Cb)({json:{write:!0}})],O.prototype,"renderingRule",null),O=(0,s._)([(0,E.j)("esri.layers.mixins.ExportImageServiceParameters")],O);var le=p(36255),er=p(60466),tr=p(60295),yt=p(79645),rr=p(9548),ir=p(79781),Ze=p(8614),nr=p(30994),Pe=p(8341),sr=p(54805),ze=p(13924),V=p(2618),ue=p(65234);let he=class extends G.wq{constructor(){super(...arguments),this.north=null,this.up=null,this.spatialReference=null}};(0,s._)([(0,o.Cb)({type:Number,json:{write:!0}})],he.prototype,"north",void 0),(0,s._)([(0,o.Cb)({type:Number,json:{write:!0}})],he.prototype,"up",void 0),(0,s._)([(0,o.Cb)({type:ue.Z,json:{write:!0}})],he.prototype,"spatialReference",void 0),he=(0,s._)([(0,E.j)("esri.rest.support.ImageAngleResult")],he);const ar=he;var ht=p(17253);let k=class extends G.wq{constructor(){super(...arguments),this.catalogItemVisibilities=null,this.catalogItems=null,this.location=null,this.name=null,this.objectId=null,this.processedValues=null,this.properties=null,this.value=null}};(0,s._)([(0,o.Cb)({json:{write:!0}})],k.prototype,"catalogItemVisibilities",void 0),(0,s._)([(0,o.Cb)({type:ht.default,json:{write:!0}})],k.prototype,"catalogItems",void 0),(0,s._)([(0,o.Cb)({type:ie.Z,json:{write:!0}})],k.prototype,"location",void 0),(0,s._)([(0,o.Cb)({json:{write:!0}})],k.prototype,"name",void 0),(0,s._)([(0,o.Cb)({json:{write:!0}})],k.prototype,"objectId",void 0),(0,s._)([(0,o.Cb)({json:{write:!0}})],k.prototype,"processedValues",void 0),(0,s._)([(0,o.Cb)({json:{write:!0}})],k.prototype,"properties",void 0),(0,s._)([(0,o.Cb)({json:{write:!0}})],k.prototype,"value",void 0),k=(0,s._)([(0,E.j)("esri.rest.support.ImageIdentifyResult")],k);const or=k;let Te=class extends G.wq{constructor(){super(...arguments),this.geometries=null}};(0,s._)([(0,o.Cb)({json:{write:!0}})],Te.prototype,"geometries",void 0),Te=(0,s._)([(0,E.j)("esri.rest.support.ImagePixelLocationResult")],Te);const lr=Te;let ne=class extends G.wq{constructor(){super(...arguments),this.attributes=null,this.location=null,this.locationId=null,this.rasterId=null,this.resolution=null,this.pixelValue=null}};(0,s._)([(0,o.Cb)({json:{write:!0}})],ne.prototype,"attributes",void 0),(0,s._)([(0,o.Cb)({type:ie.Z,json:{write:!0}})],ne.prototype,"location",void 0),(0,s._)([(0,o.Cb)({json:{write:!0}})],ne.prototype,"locationId",void 0),(0,s._)([(0,o.Cb)({json:{write:!0}})],ne.prototype,"rasterId",void 0),(0,s._)([(0,o.Cb)({json:{write:!0}})],ne.prototype,"resolution",void 0),(0,s._)([(0,o.Cb)({json:{write:!0}})],ne.prototype,"pixelValue",void 0),ne=(0,s._)([(0,E.j)("esri.rest.support.ImageSample")],ne);const ur=ne;let De=class extends G.wq{constructor(){super(...arguments),this.samples=null}};(0,s._)([(0,o.Cb)({type:[ur],json:{write:!0}})],De.prototype,"samples",void 0),De=(0,s._)([(0,E.j)("esri.rest.support.ImageSampleResult")],De);const pr=De;function gt(n){const i=null==n?void 0:n.time;if(i&&(null!=i.start||null!=i.end)){const e=[];null!=i.start&&e.push(i.start),null==i.end||e.includes(i.end)||e.push(i.end),n.time=e.join(",")}}function ft(n,i,e){return Ue.apply(this,arguments)}function Ue(){return(Ue=(0,F.Z)(function*(n,i,e){const t=(0,V.en)(n),r=i.geometry?[i.geometry]:[],a=yield(0,ze.aX)(r),l=i.toJSON();gt(l);const u=a&&a[0];(0,v.pC)(u)&&(l.geometry=u.toJSON());const c=(0,V.cv)(b(U(b({},t.query),{f:"json"}),l));return(0,V.lA)(c,e)})).apply(this,arguments)}function He(){return(He=(0,F.Z)(function*(n,i,e){var c;const t=i.toJSON();(0,v.pC)(t.angleName)&&(t.angleName=t.angleName.join(",")),(0,v.pC)(i.point)&&(null==(c=i.point.spatialReference)?void 0:c.imageCoordinateSystem)&&(t.point.spatialReference=$e(i.point.spatialReference)),(0,v.pC)(i.spatialReference)&&i.spatialReference.imageCoordinateSystem&&(t.spatialReference=Rt(i.spatialReference));const r=(0,V.en)(n),a=(0,V.cv)(b(U(b({},r.query),{f:"json"}),t)),l=(0,V.lA)(a,e),{data:u}=yield(0,M.default)(`${r.path}/computeAngles`,l);return u.spatialReference=u.spatialReference?null!=u.spatialReference.geodataXform?new ue.Z({wkid:0,imageCoordinateSystem:u.spatialReference}):ue.Z.fromJSON(u.spatialReference):null,"NaN"===u.north&&(u.north=null),"NaN"===u.up&&(u.up=null),new ar(u)})).apply(this,arguments)}function Qe(){return(Qe=(0,F.Z)(function*(n,i,e){var d;const t=i.toJSON(),{geometries:r}=i;for(let m=0;m<r.length;m++)null!=(d=r[m].spatialReference)&&d.imageCoordinateSystem&&(t.geometries.geometries[m].spatialReference=$e(r[m].spatialReference));const a=(0,V.en)(n),l=(0,V.cv)(b(U(b({},a.query),{f:"json"}),t)),u=(0,V.lA)(l,e),{data:c}=yield(0,M.default)(`${a.path}/computePixelLocation`,u);return lr.fromJSON(c)})).apply(this,arguments)}function Be(){return(Be=(0,F.Z)(function*(n,i,e){const t=yield ft(n,i,e),r=(0,V.en)(n),{data:a}=yield(0,M.default)(`${r.path}/computeStatisticsHistograms`,t),{statistics:l}=a;return null!=l&&l.length&&l.forEach(u=>{u.avg=u.mean,u.stddev=u.standardDeviation}),{statistics:l,histograms:a.histograms}})).apply(this,arguments)}function Ge(){return(Ge=(0,F.Z)(function*(n,i,e){const t=yield ft(n,i,e),r=(0,V.en)(n),{data:a}=yield(0,M.default)(`${r.path}/computeHistograms`,t);return{histograms:a.histograms}})).apply(this,arguments)}function We(){return(We=(0,F.Z)(function*(n,i,e){var m,g,R;const t=i.toJSON();gt(t),null!=(m=t.outFields)&&m.length&&(t.outFields=t.outFields.join(","));const r=null==(g=yield(0,ze.aX)(i.geometry))?void 0:g[0];(0,v.pC)(r)&&(t.geometry=r.toJSON());const a=(0,V.en)(n),l=(0,V.cv)(b(U(b({},a.query),{f:"json"}),t)),u=(0,V.lA)(l,e),{data:c}=yield(0,M.default)(`${a.path}/getSamples`,u),d=null==(R=null==c?void 0:c.samples)?void 0:R.map(S=>{const h="NaN"===S.value||""===S.value?null:S.value.split(" ").map(y=>Number(y));return U(b({},S),{pixelValue:h})});return pr.fromJSON({samples:d})})).apply(this,arguments)}function vt(n,i,e){return Ke.apply(this,arguments)}function Ke(){return(Ke=(0,F.Z)(function*(n,i,e){const t=(0,V.en)(n);return(0,ze.aX)(i.geometry?[i.geometry]:[]).then(a=>{const l=i.toJSON(),u=a&&a[0];(0,v.pC)(u)&&(l.geometry=JSON.stringify(u.toJSON()));const c=(0,V.cv)(b(U(b({},t.query),{f:"json"}),l)),d=(0,V.lA)(c,e);return(0,M.default)(t.path+"/identify",d)}).then(a=>or.fromJSON(a.data))})).apply(this,arguments)}function $e(n){const{imageCoordinateSystem:i}=n;if(i){const{id:e,referenceServiceName:t}=i;return null!=e?t?{icsid:e,icsns:t}:{icsid:e}:{ics:i}}return n.toJSON()}function Rt(n,i){const e=$e(n),{icsid:t,icsns:r,wkid:a}=e;return null!=t?null==r||(null==i?void 0:i.toLowerCase().includes("/"+r.toLowerCase()+"/"))?`0:${t}`:JSON.stringify(e):a?a.toString():JSON.stringify(e)}p(15283);var qe,gr=p(2865),Ne=(p(16730),p(37053),p(82054),p(2004)),fr=(p(21674),p(72854)),vr=p(37118),Xe=(p(55214),p(24192),p(84952)),Rr=(p(24263),p(87183),p(67736),p(90463)),br=p(24865),bt=(p(67010),p(6871),p(99208)),Sr=p(27497);function Ye(){return(Ye=(0,F.Z)(function*(n,i,e){var z,D;const t=(0,V.en)(n),r=(0,V.cv)(U(b({},t.query),{f:"json"})),a=(0,V.lA)(r,e),l=`${t.path}/${i}/info`,u=(0,M.default)(`${l}`,a),c=(0,M.default)(`${l}/keyProperties`,a),d=yield Promise.allSettled([u,c]),m="fulfilled"===d[0].status?d[0].value.data:null,g="fulfilled"===d[1].status?d[1].value.data:null;let R=null;null!=(z=m.statistics)&&z.length&&(R=m.statistics.map(C=>({min:C[0],max:C[1],avg:C[2],stddev:C[3]})));const S=Ne.Z.fromJSON(m.extent),h=Math.ceil(S.width/m.pixelSizeX-.1),y=Math.ceil(S.height/m.pixelSizeY-.1),f=S.spatialReference,w=new ie.Z({x:m.pixelSizeX,y:m.pixelSizeY,spatialReference:f}),T=null!=(D=m.histograms)&&D.length?m.histograms:null,N=new Sr.Z({origin:m.origin,blockWidth:m.blockWidth,blockHeight:m.blockHeight,firstPyramidLevel:m.firstPyramidLevel,maximumPyramidLevel:m.maxPyramidLevel});return new yt.Z({width:h,height:y,bandCount:m.bandCount,extent:S,spatialReference:f,pixelSize:w,pixelType:m.pixelType.toLowerCase(),statistics:R,histograms:T,keyProperties:g,storageInfo:N})})).apply(this,arguments)}let pe=qe=class extends G.wq{constructor(){super(...arguments),this.angleNames=null,this.point=null,this.spatialReference=null,this.rasterId=null}clone(){return new qe((0,L.d9)({angleNames:this.angleNames,point:this.point,spatialReference:this.spatialReference,rasterId:this.rasterId}))}};(0,s._)([(0,o.Cb)({type:[String],json:{name:"angleName",write:!0}})],pe.prototype,"angleNames",void 0),(0,s._)([(0,o.Cb)({type:ie.Z,json:{write:!0}})],pe.prototype,"point",void 0),(0,s._)([(0,o.Cb)({type:ue.Z,json:{write:!0}})],pe.prototype,"spatialReference",void 0),(0,s._)([(0,o.Cb)({type:A.z8,json:{write:!0}})],pe.prototype,"rasterId",void 0),pe=qe=(0,s._)([(0,E.j)("esri.rest.support.ImageAngleParameters")],pe);const xr=pe;var et,ke=p(97478),Se=p(91179);let te=et=class extends G.wq{constructor(){super(...arguments),this.geometry=null,this.mosaicRule=null,this.renderingRule=null,this.pixelSize=null,this.raster=void 0,this.timeExtent=null}writeGeometry(n,i,e){null!=n&&(i.geometryType=(0,Se.Ji)(n),i[e]=n.toJSON())}clone(){return new et((0,L.d9)({geometry:this.geometry,mosaicRule:this.mosaicRule,renderingRule:this.renderingRule,pixelSize:this.pixelSize,raster:this.raster,timeExtent:this.timeExtent}))}};(0,s._)([(0,o.Cb)({types:st.qM,json:{read:Se.im}})],te.prototype,"geometry",void 0),(0,s._)([(0,P.c)("geometry")],te.prototype,"writeGeometry",null),(0,s._)([(0,o.Cb)({type:X,json:{write:!0}})],te.prototype,"mosaicRule",void 0),(0,s._)([(0,o.Cb)({type:I,json:{write:!0}})],te.prototype,"renderingRule",void 0),(0,s._)([(0,o.Cb)({type:ie.Z,json:{write:!0}})],te.prototype,"pixelSize",void 0),(0,s._)([(0,o.Cb)({json:{write:!0}})],te.prototype,"raster",void 0),(0,s._)([(0,o.Cb)({type:ke.Z,json:{read:{source:"time"},write:{target:"time"}}})],te.prototype,"timeExtent",void 0),te=et=(0,s._)([(0,E.j)("esri.rest.support.ImageHistogramParameters")],te);const St=te;var tt;let j=tt=class extends G.wq{constructor(){super(...arguments),this.geometry=null,this.renderingRules=null,this.pixelSize=null,this.returnGeometry=!0,this.returnCatalogItems=!0,this.returnPixelValues=!0,this.maxItemCount=null,this.timeExtent=null,this.raster=void 0,this.viewId=void 0,this.processAsMultidimensional=!1}writeGeometry(n,i,e){null!=n&&(i.geometryType=(0,Se.Ji)(n),i[e]=JSON.stringify(n.toJSON()))}set mosaicRule(n){let i=n;i&&i.mosaicMethod&&(i=X.fromJSON(U(b({},i.toJSON()),{mosaicMethod:i.mosaicMethod,mosaicOperation:i.mosaicOperation}))),this._set("mosaicRule",i)}writeMosaicRule(n,i,e){null!=n&&(i[e]=JSON.stringify(n.toJSON()))}set renderingRule(n){let i=n;i&&i.rasterFunction&&(i=I.fromJSON(U(b({},i.toJSON()),{rasterFunction:i.rasterFunction,rasterFunctionArguments:i.rasterFunctionArguments}))),this._set("renderingRule",i)}writeRenderingRule(n,i,e){null!=n&&(i[e]=JSON.stringify(n.toJSON())),n.rasterFunctionDefinition&&(i[e]=JSON.stringify(n.rasterFunctionDefinition))}writeRenderingRules(n,i,e){null!=n&&(i[e]=JSON.stringify(n.map(t=>t.rasterFunctionDefinition||t.toJSON())))}writePixelSize(n,i,e){null!=n&&(i[e]=JSON.stringify(n))}writeTimeExtent(n,i,e){if(null!=n){const t=(0,v.pC)(n.start)?n.start.getTime():null,r=(0,v.pC)(n.end)?n.end.getTime():null;i[e]=null!=t?null!=r?`${t},${r}`:`${t}`:null}}clone(){return new tt((0,L.d9)({geometry:this.geometry,mosaicRule:this.mosaicRule,renderingRule:this.renderingRule,pixelSize:this.pixelSize,returnGeometry:this.returnGeometry,returnCatalogItems:this.returnCatalogItems,returnPixelValues:this.returnPixelValues,maxItemCount:this.maxItemCount,processAsMultidimensional:this.processAsMultidimensional,raster:this.raster,viewId:this.viewId,timeExtent:this.timeExtent}))}};(0,s._)([(0,o.Cb)({json:{write:!0}})],j.prototype,"geometry",void 0),(0,s._)([(0,P.c)("geometry")],j.prototype,"writeGeometry",null),(0,s._)([(0,o.Cb)({type:X,json:{write:!0}})],j.prototype,"mosaicRule",null),(0,s._)([(0,P.c)("mosaicRule")],j.prototype,"writeMosaicRule",null),(0,s._)([(0,o.Cb)({type:I,json:{write:!0}})],j.prototype,"renderingRule",null),(0,s._)([(0,P.c)("renderingRule")],j.prototype,"writeRenderingRule",null),(0,s._)([(0,o.Cb)({type:[I],json:{write:!0}})],j.prototype,"renderingRules",void 0),(0,s._)([(0,P.c)("renderingRules")],j.prototype,"writeRenderingRules",null),(0,s._)([(0,o.Cb)({type:ie.Z,json:{write:!0}})],j.prototype,"pixelSize",void 0),(0,s._)([(0,P.c)("pixelSize")],j.prototype,"writePixelSize",null),(0,s._)([(0,o.Cb)({type:Boolean,json:{write:!0}})],j.prototype,"returnGeometry",void 0),(0,s._)([(0,o.Cb)({type:Boolean,json:{write:!0}})],j.prototype,"returnCatalogItems",void 0),(0,s._)([(0,o.Cb)({type:Boolean,json:{write:!0}})],j.prototype,"returnPixelValues",void 0),(0,s._)([(0,o.Cb)({type:Number,json:{write:!0}})],j.prototype,"maxItemCount",void 0),(0,s._)([(0,o.Cb)({type:ke.Z,json:{write:{target:"time"}}})],j.prototype,"timeExtent",void 0),(0,s._)([(0,P.c)("timeExtent")],j.prototype,"writeTimeExtent",null),(0,s._)([(0,o.Cb)({json:{write:!0}})],j.prototype,"raster",void 0),(0,s._)([(0,o.Cb)({json:{write:!0}})],j.prototype,"viewId",void 0),(0,s._)([(0,o.Cb)({type:Boolean,json:{write:!0}})],j.prototype,"processAsMultidimensional",void 0),j=tt=(0,s._)([(0,E.j)("esri.rest.support.ImageIdentifyParameters")],j);const Ct=j;var rt;let ge=rt=class extends G.wq{constructor(){super(...arguments),this.geometries=null,this.rasterId=null}writeGeometry(n,i,e){i.geometries={geometryType:"esriGeometryPoint",geometries:n.map(t=>t.toJSON())}}clone(){return new rt({geometries:this.geometries.map(n=>n.clone()),rasterId:this.rasterId})}};(0,s._)([(0,o.Cb)({type:[ie.Z],json:{write:!0}})],ge.prototype,"geometries",void 0),(0,s._)([(0,P.c)("geometries")],ge.prototype,"writeGeometry",null),(0,s._)([(0,o.Cb)({type:A.z8,json:{write:!0}})],ge.prototype,"rasterId",void 0),ge=rt=(0,s._)([(0,E.j)("esri.rest.support.ImagePixelLocationParameters")],ge);const Ir=ge;var it;let H=it=class extends G.wq{constructor(){super(...arguments),this.geometry=null,this.interpolation="nearest",this.mosaicRule=null,this.outFields=null,this.pixelSize=null,this.returnFirstValueOnly=!0,this.sampleDistance=null,this.sampleCount=null,this.sliceId=null,this.timeExtent=null}writeGeometry(n,i,e){null!=n&&(i.geometryType=(0,Se.Ji)(n),i[e]=n.toJSON())}set locations(n){if(null!=n&&n.length){const i=new fr.Z({spatialReference:n[0].spatialReference});i.points=n.map(e=>[e.x,e.y]),this._set("locations",n),this.geometry=i}}clone(){return new it((0,L.d9)({geometry:this.geometry,locations:this.locations,interpolation:this.interpolation,mosaicRule:this.mosaicRule,outFields:this.outFields,raster:this.raster,returnFirstValueOnly:this.returnFirstValueOnly,sampleDistance:this.sampleDistance,sampleCount:this.sampleCount,sliceId:this.sliceId,pixelSize:this.pixelSize,timeExtent:this.timeExtent}))}};(0,s._)([(0,o.Cb)({types:st.qM,json:{read:Se.im}})],H.prototype,"geometry",void 0),(0,s._)([(0,P.c)("geometry")],H.prototype,"writeGeometry",null),(0,s._)([(0,o.Cb)()],H.prototype,"locations",null),(0,s._)([(0,o.Cb)({type:String,json:{type:W.c.jsonValues,read:W.c.read,write:W.c.write}})],H.prototype,"interpolation",void 0),(0,s._)([(0,o.Cb)({type:X,json:{write:!0}})],H.prototype,"mosaicRule",void 0),(0,s._)([(0,o.Cb)({type:[String],json:{write:!0}})],H.prototype,"outFields",void 0),(0,s._)([(0,o.Cb)({type:ie.Z,json:{write:!0}})],H.prototype,"pixelSize",void 0),(0,s._)([(0,o.Cb)({type:String,json:{write:!0}})],H.prototype,"raster",void 0),(0,s._)([(0,o.Cb)({type:Boolean,json:{write:!0}})],H.prototype,"returnFirstValueOnly",void 0),(0,s._)([(0,o.Cb)({type:Number,json:{write:!0}})],H.prototype,"sampleDistance",void 0),(0,s._)([(0,o.Cb)({type:Number,json:{write:!0}})],H.prototype,"sampleCount",void 0),(0,s._)([(0,o.Cb)({type:Number,json:{write:!0}})],H.prototype,"sliceId",void 0),(0,s._)([(0,o.Cb)({type:ke.Z,json:{read:{source:"time"},write:{target:"time"}}})],H.prototype,"timeExtent",void 0),H=it=(0,s._)([(0,E.j)("esri.rest.support.ImageSampleParameters")],H);const wr=H;var Fr=p(37084);const xt=jt.Z.getLogger("esri.layers.mixins.ArcGISImageService"),nt=(0,Ae.w)()({U1:"u1",U2:"u2",U4:"u4",U8:"u8",S8:"s8",U16:"u16",S16:"s16",U32:"u32",S32:"s32",F32:"f32",F64:"f64",C64:"c64",C128:"c128",UNKNOWN:"unknown"}),Pr=new Set(["png","png8","png24","png32","jpg","bmp","gif","jpgpng","lerc","tiff"]),Tr=(0,o.Eg)(A.q9,{min:0,max:255}),Nr=n=>{let i=class extends n{constructor(){super(...arguments),this._functionRasterInfos={},this._rasterJobHandler={instance:null,refCount:0,connectionPromise:null},this._defaultServiceMosaicRule=null,this._serviceSourceType=null,this._serviceSupportsMosaicRule=null,this.rasterAttributeTableFieldPrefix="Raster.",this.adjustAspectRatio=null,this.bandCount=null,this.bandIds=void 0,this.capabilities=null,this.compressionQuality=void 0,this.compressionTolerance=.01,this.copyright=null,this.definitionExpression=null,this.exportImageServiceParameters=null,this.rasterInfo=null,this.fields=null,this.fullExtent=null,this.hasMultidimensions=!1,this.imageMaxHeight=4100,this.imageMaxWidth=4100,this.interpolation=void 0,this.minScale=0,this.maxScale=0,this.multidimensionalInfo=null,this.noData=null,this.noDataInterpretation=void 0,this.objectIdField=null,this.geometryType="polygon",this.typeIdField=null,this.types=[],this.pixelSizeX=null,this.pixelSizeY=null,this.pixelFilter=null,this.raster=void 0,this.viewId=void 0,this.symbolizer=null,this.rasterAttributeTable=null,this.rasterFunctionInfos=null,this.serviceDataType=null,this.spatialReference=null,this.pixelType=null,this.serviceRasterInfo=null,this.sourceJSON=null,this.url=null,this.version=void 0}initialize(){this._set("exportImageServiceParameters",new O({layer:this}))}readDefaultServiceMosaicRule(e,t){return this._serviceSupportsMosaicRule?X.fromJSON(t):null}readServiceSourceType(e,t){return this._isMosaicDataset(t)?"mosaic-dataset":"raster-dataset"}readServiceSupportsMosaicRule(e,t){return this._isMosaicRuleSupported(t)}get rasterFunctionNamesIndex(){const e=new Map;return!this.rasterFunctionInfos||(0,v.pC)(this.rasterFunctionInfos)&&this.rasterFunctionInfos.length<1||(0,v.pC)(this.rasterFunctionInfos)&&this.rasterFunctionInfos.forEach(t=>{e.set(t.name.toLowerCase().replace(/ /gi,"_"),t.name)}),e}readBandIds(e,t){if(Array.isArray(e)&&e.length>0&&e.every(r=>"number"==typeof r))return e}readCapabilities(e,t){return this._readCapabilities(t)}writeCompressionQuality(e,t,r){null!=e&&"lerc"!==this.format&&(t[r]=e)}writeCompressionTolerance(e,t,r){"lerc"===this.format&&null!=e&&(t[r]=e)}get fieldsIndex(){return this.fields?new er.Z(this.fields):null}set format(e){e&&Pr.has(e.toLowerCase())&&this._set("format",e.toLowerCase())}readFormat(e,t){return"esriImageServiceDataTypeVector-UV"===t.serviceDataType||"esriImageServiceDataTypeVector-MagDir"===t.serviceDataType||null!=this.pixelFilter?"lerc":"jpgpng"}readMinScale(e,t){return null!=t.minLOD&&null!=t.maxLOD?e:0}readMaxScale(e,t){return null!=t.minLOD&&null!=t.maxLOD?e:0}set mosaicRule(e){let t=e;t&&t.mosaicMethod&&(t=X.fromJSON(U(b({},t.toJSON()),{mosaicMethod:t.mosaicMethod,mosaicOperation:t.mosaicOperation}))),this._set("mosaicRule",t)}readMosaicRule(e,t){const r=e||t.mosaicRule;return r?X.fromJSON(r):this._isMosaicRuleSupported(t)?X.fromJSON(t):null}writeMosaicRule(e,t,r){let a=this.mosaicRule;const l=this.definitionExpression;a?l&&l!==a.where&&(a=a.clone(),a.where=l):l&&(a=new X({where:l})),this._isValidCustomizedMosaicRule(a)&&(t[r]=a.toJSON())}writeNoData(e,t,r){null!=e&&"number"==typeof e&&(t[r]=Tr(e))}readObjectIdField(e,t){if(!e){const r=t.fields.filter(a=>"esriFieldTypeOID"===a.type||"oid"===a.type);e=r&&r[0]&&r[0].name}return e}get parsedUrl(){return this.url?(0,At.mN)(this.url):null}set renderer(e){this.loaded&&(e=this._configRenderer(e)),this._set("renderer",e)}readRenderer(e,t,r){var u,c;const a=null==(c=null==(u=null==t?void 0:t.layerDefinition)?void 0:u.drawingInfo)?void 0:c.renderer,l=(0,Me.ij)(a,r);return null==l?null:("vector-field"===l.type&&t.symbolTileSize&&!a.symbolTileSize&&(l.symbolTileSize=t.symbolTileSize),ut(l)||xt.warn("ArcGISImageService","Imagery layer doesn't support given renderer type."),l)}writeRenderer(e,t,r){t.layerDefinition=t.layerDefinition||{},t.layerDefinition.drawingInfo=t.layerDefinition.drawingInfo||{},t.layerDefinition.drawingInfo.renderer=e.toJSON(),"vector-field"===e.type&&(t.symbolTileSize=e.symbolTileSize)}get rasterFields(){const e=this.rasterAttributeTableFieldPrefix||"Raster.",t=new le.Z({name:"Raster.ItemPixelValue",alias:"Item Pixel Value",domain:null,editable:!1,length:50,type:"string"}),r=new le.Z({name:"Raster.ServicePixelValue",alias:"Service Pixel Value",domain:null,editable:!1,length:50,type:"string"}),a=new le.Z({name:"Raster.ServicePixelValue.Raw",alias:"Raw Service Pixel Value",domain:null,editable:!1,length:50,type:"string"});let l=this.fields?(0,L.d9)(this.fields):[];l.push(r),this.capabilities.operations.supportsQuery&&this.fields&&this.fields.length>0&&l.push(t),this.version>=10.4&&(0,v.pC)(this.rasterFunctionInfos)&&this.rasterFunctionInfos.some(c=>"none"===c.name.toLowerCase())&&l.push(a),(0,v.pC)(this.rasterFunctionInfos)&&this.rasterFunctionInfos.filter(c=>"none"!==c.name.toLowerCase()).forEach(c=>{l.push(new le.Z({name:"Raster.ServicePixelValue."+c.name,alias:c.name,domain:null,editable:!1,length:50,type:"string"}))}),this._isVectorDataSet()&&(l.push(new le.Z({name:"Raster.Magnitude",alias:"Magnitude",domain:null,editable:!1,type:"double"})),l.push(new le.Z({name:"Raster.Direction",alias:"Direction",domain:null,editable:!1,type:"double"})));const u=this.rasterInfo.attributeTable&&this.rasterInfo.attributeTable.fields||null;if(u&&u.length>0){const c=u.filter(d=>"esriFieldTypeOID"!==d.type&&"value"!==d.name.toLowerCase()).map(d=>{const m=(0,L.d9)(d);return m.name=e+d.name,m});l=l.concat(c)}return l}set renderingRule(e){let t=e;t&&t.rasterFunction&&(t=I.fromJSON(U(b({},t.toJSON()),{rasterFunction:t.rasterFunction,rasterFunctionArguments:t.rasterFunctionArguments}))),this._set("renderingRule",t)}readRenderingRule(e,t){const r=t.rasterFunctionInfos;return t.renderingRule||r&&r.length&&"None"!==r[0].name?this._isRFTJson(t.renderingRule)?I.fromJSON({rasterFunctionDefinition:t.renderingRule}):I.fromJSON(t.renderingRule||{rasterFunctionInfos:t.rasterFunctionInfos}):null}writeRenderingRule(e,t,r){const a=e.toJSON();t[r]=a.rasterFunctionDefinition?a.rasterFunctionDefinition:a}readSpatialReference(e,t){const r=e||t.extent.spatialReference;return r?ue.Z.fromJSON(r):null}readPixelType(e){return nt.fromJSON(e)||e}writePixelType(e,t,r){((0,v.Wi)(this.serviceRasterInfo)||this.pixelType!==this.serviceRasterInfo.pixelType)&&(t[r]=nt.toJSON(e))}readVersion(e,t){let r=t.currentVersion;return r||(r=t.hasOwnProperty("fields")||t.hasOwnProperty("timeInfo")?10:9.3),r}applyFilter(e){let t=e;return this.pixelFilter&&(t=this._clonePixelData(e),this.pixelFilter(t)),t}applyRenderer(e,t){var r=this;return(0,F.Z)(function*(){let a=e;if(!r._isPicture()&&r.renderer&&r.symbolizer&&!r.pixelFilter){const l=JSON.stringify(r._cachedRendererJson)!==JSON.stringify(r.renderer.toJSON()),u=r._rasterJobHandler.instance,{bandIds:c}=r;if(u){l&&(r.symbolizer.bind(),yield u.updateSymbolizer(r.symbolizer,t),r._cachedRendererJson=r.renderer.toJSON());const d=yield u.symbolize(b({bandIds:c},e),t);a={extent:e.extent,pixelBlock:d}}else a={extent:e.extent,pixelBlock:r.symbolizer.symbolize(b({bandIds:c},e))}}return a})()}destroy(){this._shutdownJobHandler()}increaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount++}decreaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount--,this._rasterJobHandler.refCount<=0&&this._shutdownJobHandler()}computeAngles(e,t){var r=this;return(0,F.Z)(function*(){if(yield r._fetchCapabilities(null==t?void 0:t.signal),!r.capabilities.operations.supportsComputeAngles)throw new B.Z("imagery-layer:compute-angles","this operation is not supported on the input image service");return e=(0,A.TJ)(xr,e).clone(),function cr(n,i,e){return He.apply(this,arguments)}(r.url,e,r._getRequestOptions(t))})()}computePixelSpaceLocations(e,t){var r=this;return(0,F.Z)(function*(){if(yield r._fetchCapabilities(null==t?void 0:t.signal),!r.capabilities.operations.supportsComputePixelLocation)throw new B.Z("imagery-layer:compute-pixel-space-locations","this operation is not supported on the input image service");return e=(0,A.TJ)(Ir,e).clone(),function mr(n,i,e){return Qe.apply(this,arguments)}(r.url,e,r._getRequestOptions(t))})()}computeHistograms(e,t){var r=this;return(0,F.Z)(function*(){if(yield r._fetchCapabilities(null==t?void 0:t.signal),!r.capabilities.operations.supportsComputeHistograms)throw new B.Z("imagery-layer:compute-histograms","this operation is not supported on the input image service");e=(0,A.TJ)(St,e).clone();const{raster:a,mosaicRule:l,renderingRule:u}=r;return u&&null==e.renderingRule&&(e.renderingRule=u),l&&null==e.mosaicRule&&(e.mosaicRule=l),a&&null==e.raster&&(e.raster=a),function yr(n,i,e){return Ge.apply(this,arguments)}(r.url,e,r._getRequestOptions(t))})()}computeStatisticsHistograms(e,t){var r=this;return(0,F.Z)(function*(){if(yield r._fetchCapabilities(null==t?void 0:t.signal),!r.capabilities.operations.supportsComputeStatisticsHistograms)throw new B.Z("imagery-layer:compute-statistics-histograms","this operation is not supported on the input image service");e=(0,A.TJ)(St,e).clone();const{raster:a,mosaicRule:l,renderingRule:u}=r;return u&&null==e.renderingRule&&(e.renderingRule=u),l&&null==e.mosaicRule&&(e.mosaicRule=l),a&&null==e.raster&&(e.raster=a),function dr(n,i,e){return Be.apply(this,arguments)}(r.url,e,r._getRequestOptions(t))})()}getField(e){const{fieldsIndex:t}=this;return(0,v.pC)(t)?t.get(e):void 0}getFieldDomain(e,t){const r=this.getField(e);return r?r.domain:null}fetchImage(e,t,r,a={}){if(null==e||null==t||null==r)return Promise.reject(new B.Z("imagery-layer:fetch-image","Insufficient parameters for requesting an image. A valid extent, width and height values are required."));const l=this.renderer||this.symbolizer?this.generateRasterInfo(this.renderingRule,{signal:a.signal}):null;return(0,ce.gx)(l).then(u=>{u&&(this.rasterInfo=u);const c={imageServiceParameters:this.getExportImageServiceParameters(e,t,r,a.timeExtent),imageProps:{extent:e,width:t,height:r,format:this.format},requestAsImageElement:a.requestAsImageElement&&!this.pixelFilter||!1,signal:a.signal};return this._requestArrayBuffer(c)})}fetchKeyProperties(e){return(0,M.default)(this.parsedUrl.path+"/keyProperties",{query:this._getQueryParams({renderingRule:this.version>=10.3?null==e?void 0:e.renderingRule:null})}).then(t=>t.data)}fetchRasterAttributeTable(e){return this.version<10.1?Promise.reject(new B.Z("#fetchRasterAttributeTable()","Failed to get rasterAttributeTable")):(0,M.default)(this.parsedUrl.path+"/rasterAttributeTable",{query:this._getQueryParams({renderingRule:this.version>=10.3?null==e?void 0:e.renderingRule:null})}).then(t=>ht.default.fromJSON(t.data))}getCatalogItemRasterInfo(e,t){const r=U(b({},t),{query:this._getQueryParams()});return function Cr(n,i,e){return Ye.apply(this,arguments)}(this.parsedUrl.path,e,r)}getCatalogItemICSInfo(e,t){var r=this;return(0,F.Z)(function*(){var wt,Ft,Pt;const{data:a}=yield(0,M.default)(r.parsedUrl.path+"/"+e+"/info/ics",b({query:r._getQueryParams()},t)),l=a&&a.ics;if(!l)return;let u=null;try{u=(yield(0,M.default)(r.parsedUrl.path+"/"+e+"/info",b({query:r._getQueryParams()},t))).data.extent}catch(x){}if(!u||!u.spatialReference)return{ics:l,icsToPixelTransform:null,icsExtent:null,northDirection:null};const c=r.version>=10.7?(0,M.default)(r.parsedUrl.path+"/"+e+"/info/icstopixel",b({query:r._getQueryParams()},t)).then(x=>x.data).catch(()=>({})):{},d=u.spatialReference,m={geometries:JSON.stringify({geometryType:"esriGeometryEnvelope",geometries:[u]}),inSR:d.wkid||JSON.stringify(d),outSR:"0:"+e},g=(0,M.default)(r.parsedUrl.path+"/project",b({query:r._getQueryParams(m)},t)).then(x=>x.data).catch(()=>({})),S=(u.xmin+u.xmax)/2,h=(u.ymax-u.ymin)/6,y=u.ymin+h,f=[];for(let x=0;x<5;x++)f.push({x:S,y:y+h*x});const w={geometries:JSON.stringify({geometryType:"esriGeometryPoint",geometries:f}),inSR:d.wkid||JSON.stringify(d),outSR:"0:"+e},T=(0,M.default)(r.parsedUrl.path+"/project",b({query:r._getQueryParams(w)},t)).then(x=>x.data).catch(()=>({})),N=yield Promise.all([c,g,T]);let z=N[0].ipxf;if(null==z){const x=null==(wt=l.geodataXform)?void 0:wt.xf_0;"topup"===(null==(Ft=null==x?void 0:x.name)?void 0:Ft.toLowerCase())&&6===(null==(Pt=null==x?void 0:x.coefficients)?void 0:Pt.length)&&(z={affine:{name:"ics [sensor: Frame] to pixel (column, row) transformation",coefficients:x.coefficients,cellsizeRatio:0,type:"GeometricXform"}})}const D=Ne.Z.fromJSON(N[1]&&N[1].geometries&&N[1].geometries[0]);D&&(D.spatialReference=new ue.Z({wkid:0,imageCoordinateSystem:l}));const C=N[2].geometries?N[2].geometries.filter(x=>null!=x&&null!=x.x&&null!=x.y&&"NaN"!==x.x&&"NaN"!==x.y):[],se=C.length;if(se<3)return{ics:l,icsToPixelTransform:z,icsExtent:D,northDirection:null};let ae=0,Ce=0,Oe=0,je=0;for(let x=0;x<se;x++)ae+=C[x].x,Ce+=C[x].y,Oe+=C[x].x*C[x].x,je+=C[x].x*C[x].y;const K=(se*je-ae*Ce)/(se*Oe-ae*ae);let re=0;const oe=C[4].x>C[0].x,It=C[4].y>C[0].y;return K===1/0?re=It?90:270:0===K?re=oe?0:180:K>0?re=oe?180*Math.atan(K)/Math.PI:180*Math.atan(K)/Math.PI+180:K<0&&(re=It?180+180*Math.atan(K)/Math.PI:360+180*Math.atan(K)/Math.PI),{ics:l,icsToPixelTransform:z,icsExtent:D,northDirection:re}})()}generateRasterInfo(e,t){var r=this;return(0,F.Z)(function*(){var u;if((!e||"none"===(null==(u=null==e?void 0:e.functionName)?void 0:u.toLowerCase())||r._isVectorFieldResampleFunction(e))&&(0,v.pC)(r.serviceRasterInfo))return r.serviceRasterInfo;const a=function Dr(n){var e;if(!n)return null;const i=null==(e=JSON.stringify(n).match(/"rasterFunction":"(.*?")/gi))?void 0:e.map(t=>t.replace('"rasterFunction":"',"").replace('"',""));return i?i.join("/"):null}(e);if(r._functionRasterInfos[a])return r._functionRasterInfos[a];const l=r._generateRasterInfo(e,t);r._functionRasterInfos[a]=l;try{return yield l}catch(c){return r._functionRasterInfos[a]=null,null}})()}getExportImageServiceParameters(e,t,r,a){var y;const l=Rt((e=e.clone().shiftCentralMeridian()).spatialReference,this.parsedUrl.path);(0,v.pC)(this.serviceRasterInfo)&&this.pixelType!==this.serviceRasterInfo.pixelType&&(this.exportImageServiceParameters.pixelType=this.pixelType);const u=this.exportImageServiceParameters.toJSON(),{bandIds:c,noData:d}=u;let{renderingRule:m}=u;const g=null==(y=this.renderingRule)?void 0:y.rasterFunctionDefinition,R=!this.renderer||"raster-stretch"===this.renderer.type;if((null==c?void 0:c.length)&&this._hasRenderingRule(this.renderingRule)&&!g&&R){const f={rasterFunction:"ExtractBand",rasterFunctionArguments:{BandIds:c}};if("Stretch"===m.rasterFunction)f.rasterFunctionArguments.Raster=m.rasterFunctionArguments.Raster,m.rasterFunctionArguments.Raster=f;else if("Colormap"===m.rasterFunction){const w=m.rasterFunctionArguments.Raster;"Stretch"===(null==w?void 0:w.rasterFunction)?(f.rasterFunctionArguments.Raster=w.rasterFunctionArguments.Raster,w.rasterFunctionArguments.Raster=f):(f.rasterFunctionArguments.Raster=w,m.rasterFunctionArguments.Raster=f)}else f.rasterFunctionArguments.Raster=m,m=f;u.bandIds=void 0}else u.bandIds=null==c?void 0:c.join(",");d instanceof Array&&d.length>0&&(u.noData=d.join(","));const S=this._serviceSupportsMosaicRule?this._combineMosaicRuleWithTimeExtent(this.exportImageServiceParameters.mosaicRule,a):null;u.mosaicRule=S&&JSON.stringify(S),u.renderingRule=this._getRenderingRuleString(I.fromJSON(m));const h={};if(a){const{start:f,end:w}=a.toJSON();f&&w&&f===w?h.time=""+f:null==f&&null==w||(h.time=`${null==f?"null":f},${null==w?"null":w}`)}return b(b({bbox:e.xmin+","+e.ymin+","+e.xmax+","+e.ymax,bboxSR:l,imageSR:l,size:t+","+r},u),h)}getSamples(e,t){var r=this;return(0,F.Z)(function*(){if(yield r._fetchCapabilities(null==t?void 0:t.signal),!r.capabilities.operations.supportsGetSamples)throw new B.Z("imagery-layer:get-samples","getSamples operation is not supported on the input image service");e=(0,A.TJ)(wr,e).clone();const{raster:a}=r;return a&&null==e.raster&&(e.raster=a),function hr(n,i,e){return We.apply(this,arguments)}(r.url,e,r._getRequestOptions(t))})()}identify(e,t){var r=this;return(0,F.Z)(function*(){if(yield r._fetchCapabilities(null==t?void 0:t.signal),!r.capabilities.operations.supportsIdentify)throw new B.Z("imagery-layer:query-rasters","query operation is not supported on the input image service");e=(0,A.TJ)(Ct,e).clone();const{raster:a,mosaicRule:l,renderingRule:u}=r;if(u&&null==e.renderingRule&&(e.renderingRule=u),l&&null==e.mosaicRule){const c=r._combineMosaicRuleWithTimeExtent(l,e.timeExtent);e.mosaicRule=(0,v.Wg)(c)}return a&&null==e.raster&&(e.raster=a),vt(r.url,e,r._getRequestOptions(t))})()}createQuery(){const e=new Xe.Z;return e.outFields=["*"],e.returnGeometry=!0,e.where=this.definitionExpression||"1=1",e}queryRasters(e,t){var r=this;return(0,F.Z)(function*(){return({query:e,requestOptions:t}=yield r._prepareForQuery(e,t)),(0,gr.e)(r.url,e,t)})()}queryObjectIds(e,t){var r=this;return(0,F.Z)(function*(){return({query:e,requestOptions:t}=yield r._prepareForQuery(e,t)),(0,br.G)(r.url,e,t)})()}queryRasterCount(e,t){var r=this;return(0,F.Z)(function*(){return({query:e,requestOptions:t}=yield r._prepareForQuery(e,t)),(0,Rr.P)(r.url,e,t)})()}queryVisibleRasters(e,t){var r=this;return(0,F.Z)(function*(){var N,z;if(!e)throw new B.Z("imagery-layer: query-visible-rasters","missing query parameter");const{pixelSize:a,returnDomainValues:l,returnTopmostRaster:u,showNoDataRecords:c}=t||{pixelSize:null,returnDomainValues:!1,returnTopmostRaster:!1,showNoDataRecords:!1};let d=!1,m=null,g=null;const R="raster.servicepixelvalue",S=r.rasterFunctionNamesIndex;if((0,v.pC)(e.outFields)&&(d=e.outFields.some(D=>!D.toLowerCase().includes(R)),r.version>=10.4)){const D=e.outFields.filter(C=>C.toLowerCase().includes(R)&&C.length>R.length).map(C=>{const se=C.slice(R.length+1);return[r._updateRenderingRulesFunctionName(se,S),se]});m=D.map(C=>new I({functionName:C[0]})),g=D.map(C=>C[1]),0===m.length?r.renderingRule?(m.push(r.renderingRule),g.push(r.renderingRule.functionName)):m=null:r.renderingRule&&!m.some(C=>C.functionName===r.renderingRule.functionName)&&(m.push(r.renderingRule),g.push(r.renderingRule.functionName))}const h=(0,v.Wi)(e.outSpatialReference)||e.outSpatialReference.equals(r.spatialReference),y=e.timeExtent||r.timeExtent,f=r._combineMosaicRuleWithTimeExtent(r.exportImageServiceParameters.mosaicRule,y),w=r._getQueryParams({geometry:e.geometry,timeExtent:y,mosaicRule:f,renderingRule:r.version<10.4?r.renderingRule:null,renderingRules:m,pixelSize:a,returnCatalogItems:d,returnGeometry:h,raster:r.raster,maxItemCount:u?1:null});delete w.f;const T=new Ct(w);try{yield r.generateRasterInfo(r.renderingRule);const D=yield vt(r.url,T,{signal:null==t?void 0:t.signal,query:b({},r.customParameters)}),C=e.outFields,se=D.value.toLowerCase().includes("nodata");if(!d||h||!(null==(N=null==D?void 0:D.catalogItems)?void 0:N.features.length)||!c&&se)return r._processVisibleRastersResponse(D,{returnDomainValues:l,templateRRFunctionNames:g,showNoDataRecords:c,templateFields:C});const ae=r.objectIdField||"ObjectId",Ce=D.catalogItems.features,Oe=Ce.map(re=>{var oe;return null==(oe=re.attributes)?void 0:oe[ae]}),je=new Xe.Z({objectIds:Oe,returnGeometry:!0,outSpatialReference:e.outSpatialReference,outFields:[ae]}),K=yield r.queryRasters(je);return null!=(z=null==K?void 0:K.features)&&z.length&&K.features.forEach(re=>{Ce.forEach(oe=>{oe.attributes[ae]===re.attributes[ae]&&(oe.geometry=new vr.Z(re.geometry),(0,v.pC)(e.outSpatialReference)&&(oe.geometry.spatialReference=e.outSpatialReference))})}),r._processVisibleRastersResponse(D,{returnDomainValues:l,templateRRFunctionNames:g,showNoDataRecords:c,templateFields:C})}catch(D){throw new B.Z("imagery-layer:query-visible-rasters","encountered error when querying visible rasters")}})()}fetchVariableStatisticsHistograms(e,t){var r=this;return(0,F.Z)(function*(){const a=(0,M.default)(r.parsedUrl.path+"/statistics",{query:r._getQueryParams({variable:e}),signal:t}).then(c=>{var d;return null==(d=c.data)?void 0:d.statistics}),l=(0,M.default)(r.parsedUrl.path+"/histograms",{query:r._getQueryParams({variable:e}),signal:t}).then(c=>{var d;return null==(d=c.data)?void 0:d.histograms}),u=yield Promise.all([a,l]);return u[0]&&u[0].forEach(c=>{c.avg=c.mean,c.stddev=c.standardDeviation}),{statistics:u[0]||null,histograms:u[1]||null}})()}createFlowMesh(e,t){var r=this;return(0,F.Z)(function*(){const a=r._rasterJobHandler.instance;return a?a.createFlowMesh(e,t):(0,Fr.GE)(e.meshType,e.simulationSettings,e.flowData,(0,v.pC)(t.signal)?t.signal:(new AbortController).signal)})()}_fetchService(e){var t=this;return(0,F.Z)(function*(){yield t._fetchServiceInfo(e),(0,v.pC)(t.serviceRasterInfo)&&!t.rasterInfo&&(t.rasterInfo=t.serviceRasterInfo);const r=t.sourceJSON,a=(0,v.pC)(t.serviceRasterInfo)?Promise.resolve(t.serviceRasterInfo):(0,bt.g)(t.parsedUrl.path,r,{signal:e,query:t._getQueryParams()}).then(c=>(t._set("serviceRasterInfo",c),c)),l=t._hasRenderingRule(t.renderingRule)?t.generateRasterInfo(t.renderingRule,{signal:e}):null,u=t._getRasterFunctionInfos();return Promise.all([a,l,u]).then(c=>{t._set("rasterInfo",c[1]?c[1]:c[0]),c[2]&&t._set("rasterFunctionInfos",c[2]),t.renderer&&!t._isSupportedRenderer(t.renderer)&&(t._set("renderer",null),xt.warn("ArcGISImageService","Switching to the default renderer. Renderer applied is not valid for this Imagery Layer")),t._set("renderer",t._configRenderer(t.renderer)),t.own((0,Mt.YP)(()=>t.renderingRule,m=>{(t.renderer||t.symbolizer||t.popupEnabled&&t.popupTemplate)&&t.generateRasterInfo(m).then(g=>{g&&(t.rasterInfo=g)})}));const{serviceRasterInfo:d}=t;(0,v.pC)(d)&&d.multidimensionalInfo&&t._updateMultidimensionalDefinition(d)})})()}_combineMosaicRuleWithTimeExtent(e,t){var S;const r=this.timeInfo;if((0,v.Wi)(e)||(0,v.Wi)(this.multidimensionalInfo)||(0,v.Wi)(t)||(0,v.Wi)(null==r?void 0:r.startField))return e;const{startField:a}=r,l=this.multidimensionalInfo.variables.some(h=>h.dimensions.some(y=>y.name===a))?a:"StdTime";if(e=e.clone(),"mosaic-dataset"===this._serviceSourceType)return e.multidimensionalDefinition=null==(S=e.multidimensionalDefinition)?void 0:S.filter(h=>h.dimensionName!==l),this._cleanupMultidimensionalDefinition(e);e.multidimensionalDefinition=e.multidimensionalDefinition||[];const u=e.multidimensionalDefinition.filter(h=>h.dimensionName===l),c=(0,v.pC)(t.start)?t.start.getTime():null,d=(0,v.pC)(t.end)?t.end.getTime():null,m=null==c||null==d||c===d,g=m?[c||d]:[[c,d]],R=this.version>=10.8;if(u.length)u.forEach(h=>{h.dimensionName===l&&(R?(h.dimensionName=null,h.isSlice=null,h.values=null):(h.isSlice=m,h.values=g))});else if(!R){const h=e.multidimensionalDefinition.filter(y=>null!=y.variableName&&null==y.dimensionName);h.length?h.forEach(y=>{y.dimensionName=l,y.isSlice=m,y.values=g}):e.multidimensionalDefinition.push(new at.Z({variableName:"",dimensionName:l,isSlice:m,values:g}))}return this._cleanupMultidimensionalDefinition(e)}_cleanupMultidimensionalDefinition(e){return(0,v.Wi)(e)?null:(e.multidimensionalDefinition&&(e.multidimensionalDefinition=e.multidimensionalDefinition.filter(t=>!(!t.variableName&&!t.dimensionName)),0===e.multidimensionalDefinition.length&&(e.multidimensionalDefinition=null)),"mosaic-dataset"!==this._serviceSourceType&&null==e.multidimensionalDefinition?null:e)}_prepareForQuery(e,t){var r=this;return(0,F.Z)(function*(){if(yield r._fetchCapabilities(null==t?void 0:t.signal),!r.capabilities.operations.supportsQuery)throw new B.Z("imagery-layer:query-rasters","query operation is not supported on the input image service");return e=(0,v.pC)(e)?(0,A.TJ)(Xe.Z,e):r.createQuery(),t=r._getRequestOptions(t),r.raster&&(t.query=U(b({},t.query),{raster:r.raster})),{query:e,requestOptions:t}})()}_initJobHandler(){var e=this;return(0,F.Z)(function*(){if(null!=e._rasterJobHandler.connectionPromise)return e._rasterJobHandler.connectionPromise;const t=new rr.Z;e._rasterJobHandler.connectionPromise=t.initialize().then(()=>{e._rasterJobHandler.instance=t},()=>null),yield e._rasterJobHandler.connectionPromise})()}_shutdownJobHandler(){this._rasterJobHandler.instance&&this._rasterJobHandler.instance.destroy(),this._rasterJobHandler.instance=null,this._rasterJobHandler.connectionPromise=null,this._rasterJobHandler.refCount=0,this._cachedRendererJson=null}_isSupportedRenderer(e){const{rasterInfo:t,renderingRule:r}=this;return"unique-value"===e.type&&this._hasRenderingRule(r)&&1===t.bandCount&&["u8","s8"].includes(t.pixelType)||(0,Pe.U0)(this.rasterInfo).includes(this.renderer.type)}_fetchCapabilities(e){var t=this;return(0,F.Z)(function*(){return t.capabilities||(yield t._fetchServiceInfo(e)),t.capabilities})()}_fetchServiceInfo(e){var t=this;return(0,F.Z)(function*(){var a;let r=t.sourceJSON;if(!r){const{data:l,ssl:u}=yield(0,M.default)(t.parsedUrl.path,{query:t._getQueryParams(),signal:e});r=l,t.sourceJSON=r,u&&(t.url=t.url.replace(/^http:/i,"https:"))}if((null==(a=r.capabilities)?void 0:a.toLowerCase().split(",").map(l=>l.trim()).indexOf("tilesonly"))>-1)throw new B.Z("imagery-layer:fetch-service-info","use ImageryTileLayer to open tiles-only image services");t.read(r,{origin:"service",url:t.parsedUrl})})()}_isMosaicDataset(e){var t;return e.serviceSourceType?"esriImageServiceSourceTypeMosaicDataset"===e.serviceSourceType:(null==(t=e.fields)?void 0:t.length)>0}_isMosaicRuleSupported(e){var a;if(!e)return!1;const t=this._isMosaicDataset(e),r=e.currentVersion>=10.71&&e.hasMultidimensions&&e.timeInfo&&!(e.objectIdField&&(null==(a=e.fields)?void 0:a.length)>1);return t||r}_isVectorFieldResampleFunction(e){if((0,v.Wi)(e))return!1;const{functionName:t,functionArguments:r}=e,a="resample"===(null==t?void 0:t.toLowerCase()),l=(null==r?void 0:r.ResampleType)||(null==r?void 0:r.resampleType);return a&&(7===l||10===l)}_isPicture(){return!this.format||this.format.includes("jpg")||this.format.includes("png")}_configRenderer(e){var t,r;if(!this._isPicture()&&!this.pixelFilter||this._isVectorDataSet()){if(!this.bandIds&&this.rasterInfo.bandCount>=3){const l=(0,Pe.YD)(this.rasterInfo);!l||3===this.rasterInfo.bandCount&&0===l[0]&&1===l[1]&&2===l[2]||(this.bandIds=l)}e||(e=(0,Pe.Ob)(this.rasterInfo,{bandIds:this.bandIds,variableName:this.renderingRule?null:null==(r=null==(t=this.mosaicRule)?void 0:t.multidimensionalDefinition)?void 0:r[0].variableName}));const a=(0,Pe.ol)(e.toJSON());this.symbolizer?(this.symbolizer.rendererJSON=a,this.symbolizer.rasterInfo=this.rasterInfo):this.symbolizer=new sr.Z({rendererJSON:a,rasterInfo:this.rasterInfo}),this.symbolizer.bind().success||(this.symbolizer=null)}return e}_clonePixelData(e){return null==e?e:{extent:e.extent&&e.extent.clone(),pixelBlock:(0,v.pC)(e.pixelBlock)&&e.pixelBlock.clone()}}_getQueryParams(e){(0,v.pC)(null==e?void 0:e.renderingRule)&&"string"!=typeof e.renderingRule&&(e.renderingRule=this._getRenderingRuleString(e.renderingRule));const{raster:t,viewId:r}=this;return b(b({raster:t,viewId:r,f:"json"},e),this.customParameters)}_getRequestOptions(e){return U(b({},e),{query:b(b({},null==e?void 0:e.query),this.customParameters)})}_decodePixelBlock(e,t,r){return this._rasterJobHandler.instance?this._rasterJobHandler.instance.decode({data:e,options:t}):(0,Ze.J)(e,t,r)}_getRasterFunctionInfos(e){var t=this;return(0,F.Z)(function*(){var a;const r=t.sourceJSON.rasterFunctionInfos;return t.serviceRasterInfo?r:r&&t.version>=10.3?1===r.length&&"none"===r[0].name.toLowerCase()?r:null==(a=(yield(0,M.default)(t.parsedUrl.path+"/rasterFunctionInfos",{query:t._getQueryParams(),signal:e})).data)?void 0:a.rasterFunctionInfos:null})()}_requestArrayBuffer(e){var t=this;return(0,F.Z)(function*(){var h;const{imageProps:r,requestAsImageElement:a,signal:l}=e;if(a&&!t.pixelFilter&&(null==(h=r.format)?void 0:h.indexOf("png"))>-1)return{imageElement:(yield(0,M.default)(t.parsedUrl.path+"/exportImage",{responseType:"image",query:t._getQueryParams(b({f:"image"},e.imageServiceParameters)),signal:l})).data,params:r};const u=t._initJobHandler(),c=(0,M.default)(t.parsedUrl.path+"/exportImage",{responseType:"array-buffer",query:t._getQueryParams(b({f:"image"},e.imageServiceParameters)),signal:l}),d=(yield Promise.all([c,u]))[0].data,m=r.format||"jpgpng";let g=m;if("bsq"!==g&&"bip"!==g&&(g=(0,Ze.y)(d)),!g)throw new B.Z("imagery-layer:fetch-image","unsupported format signature "+String.fromCharCode.apply(null,new Uint8Array(d)));const R={signal:l};return{pixelData:{pixelBlock:yield"gif"===m||"bmp"===m||m.includes("png")&&("png"===g||"jpg"===g)?(0,Ze.J)(d,b({useCanvas:!0},r),R):t._decodePixelBlock(d,{width:r.width,height:r.height,planes:null,pixelType:null,noDataValue:null,format:m},R),extent:r.extent},params:r}})()}_generateRasterInfo(e,t){const r=U(b({},t),{query:this._getQueryParams()});return(0,bt.N)(this.parsedUrl.path,e,r)}_isValidCustomizedMosaicRule(e){var t;return e&&JSON.stringify(e.toJSON())!==JSON.stringify(null==(t=this._defaultServiceMosaicRule)?void 0:t.toJSON())}_updateMultidimensionalDefinition(e){if(this._isValidCustomizedMosaicRule(this.mosaicRule))return;const t=(0,ir.Tj)(e);if((0,v.pC)(t)&&t.length>0){this.mosaicRule=this.mosaicRule||new X;const r=this.mosaicRule.multidimensionalDefinition;(!r||r&&r.length<=0)&&(this.mosaicRule.multidimensionalDefinition=t)}}_processVisibleRastersResponse(e,t){t=t||{};const r=e.value,{templateRRFunctionNames:a,showNoDataRecords:l,returnDomainValues:u,templateFields:c}=t,d=e.processedValues;let m=e.catalogItems&&e.catalogItems.features,g=e.properties&&e.properties.Values&&e.properties.Values.map(T=>T.replace(/ /gi,", "))||[];const R=this.objectIdField||"ObjectId",S="string"==typeof r&&r.toLowerCase().includes("nodata"),h=[];if(r&&!m&&!S){const T={};T[R]=0,g=[r],m=[new Ot.Z(this.fullExtent,null,T)]}if(!m)return[];let y,f,w;this._updateResponseFieldNames(m,c),S&&!l&&(m=[]);for(let T=0;T<m.length;T++){if(y=m[T],null!=r){if(f=g[T],w=this.renderingRule&&d&&d.length>0&&a&&a.length>0&&a.includes(this.renderingRule.functionName)?d[a.indexOf(this.renderingRule.functionName)]:r,"nodata"===f.toLowerCase()&&!l)continue;const z="Raster.ServicePixelValue";y.attributes["Raster.ItemPixelValue"]=f,y.attributes[z]=w,this._updateFeatureWithMagDirValues(y,f);const D=this.fields&&this.fields.length>0;let C=this.renderingRule&&(0,v.pC)(this.serviceRasterInfo)&&this.serviceRasterInfo.attributeTable?D?f:r:w;this.renderingRule||(C=D?f:r),this._updateFeatureWithRasterAttributeTableValues(y,C)}if(y.sourceLayer=y.layer=this,u&&this._updateFeatureWithDomainValues(y),a&&d&&a.length===d.length)for(let N=0;N<a.length;N++)y.attributes["Raster.ServicePixelValue."+a[N]]=d[N];h.push(m[T])}return h}_updateFeatureWithRasterAttributeTableValues(e,t){const r=this.rasterInfo&&this.rasterInfo.attributeTable||(0,v.pC)(this.serviceRasterInfo)&&this.serviceRasterInfo.attributeTable,a=r&&r.features;if(!a)return;const l=r.fields,u=l.map(m=>m.name).filter(m=>"value"===m.toLowerCase()),c=u&&u[0];if(!c)return;const d=a.filter(m=>m.attributes[c]===(null!=t?parseInt(t,10):null));d&&d[0]&&l.forEach(m=>{e.attributes[this.rasterAttributeTableFieldPrefix+m.name]=d[0].attributes[m.name]})}_updateFeatureWithMagDirValues(e,t){if(!this._isVectorDataSet())return;const r=t.split(/,\s*/).map(d=>parseFloat(d)),a=r.map(d=>[d]),l=r.map(d=>({minValue:d,maxValue:d,noDataValue:null})),u=new tr.Z({height:1,width:1,pixelType:"f32",pixels:a,statistics:l});null!=this.pixelFilter&&this.pixelFilter({pixelBlock:u,extent:new Ne.Z(0,0,0,0,this.spatialReference)});const c="esriImageServiceDataTypeVector-MagDir"===this.serviceDataType?[u.pixels[0][0],u.pixels[1][0]]:(0,nr.Tg)([u.pixels[0][0],u.pixels[1][0]]);e.attributes["Raster.Magnitude"]=c[0],e.attributes["Raster.Direction"]=c[1]}_updateFeatureWithDomainValues(e){const t=this.fields&&this.fields.filter(r=>r.domain&&"coded-value"===r.domain.type);null!=t&&t.forEach(r=>{const a=e.attributes[r.name];if(null!=a){const l=r.domain.codedValues.find(u=>u.code===a);l&&(e.attributes[r.name]=l.name)}})}_updateResponseFieldNames(e,t){if(!t||t.length<1)return;const r=this.fieldsIndex;(0,v.Wi)(r)||e.forEach(a=>{if(a&&a.attributes)for(const l of t)if(r.has(l)){const u=r.get(l).name;u!==l&&(a.attributes[l]=a.attributes[u],delete a.attributes[u])}})}_getRenderingRuleString(e){var t;if(this._hasRenderingRule(e)){let r=e.toJSON();return r=null!=(t=r.rasterFunctionDefinition)?t:r,(r.thumbnail||r.thumbnailEx)&&(r.thumbnail=r.thumbnailEx=null),JSON.stringify(r)}return null}_hasRenderingRule(e){return e&&e.functionName&&"none"!==e.functionName.toLowerCase()}_updateRenderingRulesFunctionName(e,t){if(!e||e.length<1)return;if("Raw"===e)return e.replace("Raw","None");const r=e.toLowerCase().replace(/ /gi,"_");return t.has(r)?t.get(r):e}_isRFTJson(e){return e&&e.name&&e.arguments&&e.function&&e.hasOwnProperty("functionType")}_isVectorDataSet(){return"esriImageServiceDataTypeVector-UV"===this.serviceDataType||"esriImageServiceDataTypeVector-MagDir"===this.serviceDataType}_readCapabilities(e){const t=e.capabilities?e.capabilities.toLowerCase().split(",").map(g=>g.trim()):["image","catalog"],{currentVersion:r,advancedQueryCapabilities:a,maxRecordCount:l}=e,u=t.includes("image"),c="esriImageServiceDataTypeElevation"===e.serviceDataType,d=!!(e.spatialReference||e.extent&&e.extent.spatialReference),m=t.includes("edit");return{data:{supportsAttachment:!1},operations:{supportsComputeHistograms:u,supportsExportImage:u,supportsIdentify:u,supportsMeasure:t.includes("mensuration")&&d,supportsDownload:t.includes("download"),supportsQuery:t.includes("catalog")&&e.fields&&e.fields.length>0,supportsGetSamples:r>=10.2&&u,supportsProject:r>=10.3&&u,supportsComputeStatisticsHistograms:r>=10.4&&u,supportsQueryBoundary:r>=10.6&&u,supportsCalculateVolume:r>=10.7&&c,supportsComputePixelLocation:r>=10.7&&t.includes("catalog"),supportsComputeAngles:r>=10.91,supportsAdd:m,supportsDelete:m,supportsEditing:m,supportsUpdate:m,supportsCalculate:!1,supportsTruncate:!1,supportsValidateSql:!1,supportsChangeTracking:!1,supportsQueryAttachments:!1,supportsResizeAttachments:!1,supportsSync:!1,supportsExceedsLimitStatistics:!1,supportsQueryAnalytics:!1,supportsQueryTopFeatures:!1},query:{maxRecordCount:l,maxRecordCountFactor:void 0,supportsStatistics:!(null==a||!a.supportsStatistics),supportsOrderBy:!(null==a||!a.supportsOrderBy),supportsDistinct:!(null==a||!a.supportsDistinct),supportsPagination:!(null==a||!a.supportsPagination),supportsStandardizedQueriesOnly:!(null==a||!a.useStandardizedQueries),supportsPercentileStatistics:!(null==a||!a.supportsPercentileStatistics),supportsCentroid:!(null==a||!a.supportsReturningGeometryCentroid),supportsDistance:!(null==a||!a.supportsQueryWithDistance),supportsExtent:!(null==a||!a.supportsReturningQueryExtent),supportsGeometryProperties:!(null==a||!a.supportsReturningGeometryProperties),supportsHavingClause:!(null==a||!a.supportsHavingClause),supportsQuantization:!1,supportsQuantizationEditMode:!1,supportsQueryGeometry:!1,supportsResultType:!1,supportsMaxRecordCountFactor:!1,supportsSqlExpression:!1,supportsTopFeaturesQuery:!1,supportsQueryByOthers:!1,supportsHistoricMoment:!1,supportsFormatPBF:!1,supportsDisjointSpatialRelationship:!1,supportsCacheHint:!1,supportsSpatialAggregationStatistics:!1,supportedSpatialAggregationStatistics:{envelope:!1,centroid:!1,convexHull:!1},supportsDefaultSpatialReference:!(null==a||!a.supportsDefaultSR),supportsCompactGeometry:!1,standardMaxRecordCount:void 0,tileMaxRecordCount:void 0}}}};return(0,s._)([(0,o.Cb)()],i.prototype,"_functionRasterInfos",void 0),(0,s._)([(0,o.Cb)()],i.prototype,"_rasterJobHandler",void 0),(0,s._)([(0,o.Cb)({dependsOn:["_serviceSupportsMosaicRule"]})],i.prototype,"_defaultServiceMosaicRule",void 0),(0,s._)([(0,_.r)("_defaultServiceMosaicRule",["defaultMosaicMethod"])],i.prototype,"readDefaultServiceMosaicRule",null),(0,s._)([(0,o.Cb)()],i.prototype,"_cachedRendererJson",void 0),(0,s._)([(0,o.Cb)({readOnly:!0})],i.prototype,"_serviceSourceType",void 0),(0,s._)([(0,_.r)("_serviceSourceType",["serviceSourceType","fields"])],i.prototype,"readServiceSourceType",null),(0,s._)([(0,o.Cb)({readOnly:!0})],i.prototype,"_serviceSupportsMosaicRule",void 0),(0,s._)([(0,_.r)("_serviceSupportsMosaicRule",["currentVersion","fields"])],i.prototype,"readServiceSupportsMosaicRule",null),(0,s._)([(0,o.Cb)()],i.prototype,"rasterAttributeTableFieldPrefix",void 0),(0,s._)([(0,o.Cb)({readOnly:!0})],i.prototype,"rasterFunctionNamesIndex",null),(0,s._)([(0,o.Cb)()],i.prototype,"adjustAspectRatio",void 0),(0,s._)([(0,o.Cb)({readOnly:!0}),(0,q.B)("serviceRasterInfo.bandCount")],i.prototype,"bandCount",void 0),(0,s._)([(0,o.Cb)({type:[A.z8],json:{write:!0}})],i.prototype,"bandIds",void 0),(0,s._)([(0,_.r)("bandIds")],i.prototype,"readBandIds",null),(0,s._)([(0,o.Cb)({readOnly:!0,json:{read:!1}})],i.prototype,"capabilities",void 0),(0,s._)([(0,_.r)("service","capabilities",["capabilities","currentVersion","serviceDataType"])],i.prototype,"readCapabilities",null),(0,s._)([(0,o.Cb)({type:Number})],i.prototype,"compressionQuality",void 0),(0,s._)([(0,P.c)("compressionQuality")],i.prototype,"writeCompressionQuality",null),(0,s._)([(0,o.Cb)({type:Number})],i.prototype,"compressionTolerance",void 0),(0,s._)([(0,P.c)("compressionTolerance")],i.prototype,"writeCompressionTolerance",null),(0,s._)([(0,o.Cb)({json:{read:{source:"copyrightText"}}})],i.prototype,"copyright",void 0),(0,s._)([(0,o.Cb)({type:String,json:{name:"layerDefinition.definitionExpression",write:{enabled:!0,allowNull:!0}}})],i.prototype,"definitionExpression",void 0),(0,s._)([(0,o.Cb)({readOnly:!0,constructOnly:!0})],i.prototype,"exportImageServiceParameters",void 0),(0,s._)([(0,o.Cb)()],i.prototype,"rasterInfo",void 0),(0,s._)([(0,o.Cb)({readOnly:!0,type:[le.Z]})],i.prototype,"fields",void 0),(0,s._)([(0,o.Cb)({readOnly:!0})],i.prototype,"fieldsIndex",null),(0,s._)([(0,o.Cb)({type:["png","png8","png24","png32","jpg","bmp","gif","jpgpng","lerc","tiff"],json:{write:!0}})],i.prototype,"format",null),(0,s._)([(0,_.r)("service","format",["serviceDataType"])],i.prototype,"readFormat",null),(0,s._)([(0,o.Cb)({type:Ne.Z})],i.prototype,"fullExtent",void 0),(0,s._)([(0,o.Cb)({readOnly:!0})],i.prototype,"hasMultidimensions",void 0),(0,s._)([(0,o.Cb)({json:{read:{source:"maxImageHeight"}}})],i.prototype,"imageMaxHeight",void 0),(0,s._)([(0,o.Cb)({json:{read:{source:"maxImageWidth"}}})],i.prototype,"imageMaxWidth",void 0),(0,s._)([(0,o.Cb)({type:String,json:{type:W.c.jsonValues,read:W.c.read,write:W.c.write}})],i.prototype,"interpolation",void 0),(0,s._)([(0,o.Cb)()],i.prototype,"minScale",void 0),(0,s._)([(0,_.r)("service","minScale")],i.prototype,"readMinScale",null),(0,s._)([(0,o.Cb)()],i.prototype,"maxScale",void 0),(0,s._)([(0,_.r)("service","maxScale")],i.prototype,"readMaxScale",null),(0,s._)([(0,o.Cb)({type:X})],i.prototype,"mosaicRule",null),(0,s._)([(0,_.r)("mosaicRule",["mosaicRule","defaultMosaicMethod"])],i.prototype,"readMosaicRule",null),(0,s._)([(0,P.c)("mosaicRule")],i.prototype,"writeMosaicRule",null),(0,s._)([(0,o.Cb)({readOnly:!0}),(0,q.B)("serviceRasterInfo.multidimensionalInfo")],i.prototype,"multidimensionalInfo",void 0),(0,s._)([(0,o.Cb)({json:{type:A.z8}})],i.prototype,"noData",void 0),(0,s._)([(0,P.c)("noData")],i.prototype,"writeNoData",null),(0,s._)([(0,o.Cb)({type:String,json:{type:W.k.jsonValues,read:W.k.read,write:W.k.write}})],i.prototype,"noDataInterpretation",void 0),(0,s._)([(0,o.Cb)({type:String,readOnly:!0,json:{read:{source:["fields"]}}})],i.prototype,"objectIdField",void 0),(0,s._)([(0,_.r)("objectIdField")],i.prototype,"readObjectIdField",null),(0,s._)([(0,o.Cb)({})],i.prototype,"geometryType",void 0),(0,s._)([(0,o.Cb)({})],i.prototype,"typeIdField",void 0),(0,s._)([(0,o.Cb)({})],i.prototype,"types",void 0),(0,s._)([(0,o.Cb)({readOnly:!0})],i.prototype,"parsedUrl",null),(0,s._)([(0,o.Cb)({readOnly:!0}),(0,q.B)("serviceRasterInfo.pixelSize.x")],i.prototype,"pixelSizeX",void 0),(0,s._)([(0,o.Cb)({readOnly:!0}),(0,q.B)("serviceRasterInfo.pixelSize.y")],i.prototype,"pixelSizeY",void 0),(0,s._)([(0,o.Cb)({type:Function})],i.prototype,"pixelFilter",void 0),(0,s._)([(0,o.Cb)()],i.prototype,"raster",void 0),(0,s._)([(0,o.Cb)()],i.prototype,"viewId",void 0),(0,s._)([(0,o.Cb)({types:Me.dr,json:{name:"layerDefinition.drawingInfo.renderer",origins:{"web-scene":{types:Me.FK,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:e=>({enabled:e&&"vector-field"!==e.type&&"flow"!==e.type})}}}}})],i.prototype,"renderer",null),(0,s._)([(0,_.r)("renderer")],i.prototype,"readRenderer",null),(0,s._)([(0,P.c)("renderer")],i.prototype,"writeRenderer",null),(0,s._)([(0,o.Cb)()],i.prototype,"symbolizer",void 0),(0,s._)([(0,o.Cb)(xe.Oh)],i.prototype,"opacity",void 0),(0,s._)([(0,o.Cb)({readOnly:!0}),(0,q.B)("serviceRasterInfo.attributeTable")],i.prototype,"rasterAttributeTable",void 0),(0,s._)([(0,o.Cb)({readOnly:!0})],i.prototype,"rasterFields",null),(0,s._)([(0,o.Cb)({constructOnly:!0})],i.prototype,"rasterFunctionInfos",void 0),(0,s._)([(0,o.Cb)({type:I})],i.prototype,"renderingRule",null),(0,s._)([(0,_.r)("renderingRule",["renderingRule","rasterFunctionInfos"])],i.prototype,"readRenderingRule",null),(0,s._)([(0,P.c)("renderingRule")],i.prototype,"writeRenderingRule",null),(0,s._)([(0,o.Cb)()],i.prototype,"serviceDataType",void 0),(0,s._)([(0,o.Cb)({readOnly:!0,type:ue.Z})],i.prototype,"spatialReference",void 0),(0,s._)([(0,_.r)("spatialReference",["spatialReference","extent"])],i.prototype,"readSpatialReference",null),(0,s._)([(0,o.Cb)({json:{type:nt.jsonValues}})],i.prototype,"pixelType",void 0),(0,s._)([(0,_.r)("pixelType")],i.prototype,"readPixelType",null),(0,s._)([(0,P.c)("pixelType")],i.prototype,"writePixelType",null),(0,s._)([(0,o.Cb)({constructOnly:!0,type:yt.Z})],i.prototype,"serviceRasterInfo",void 0),(0,s._)([(0,o.Cb)()],i.prototype,"sourceJSON",void 0),(0,s._)([(0,o.Cb)(xe.HQ)],i.prototype,"url",void 0),(0,s._)([(0,o.Cb)({readOnly:!0})],i.prototype,"version",void 0),(0,s._)([(0,_.r)("version",["currentVersion","fields","timeInfo"])],i.prototype,"readVersion",null),i=(0,s._)([(0,E.j)("esri.layers.mixins.ArcGISImageService")],i),i};var Or=p(65088),jr=p(552),Mr=p(50107),Ar=p(49286),_r=p(6647),Vr=p(30346),Jr=p(99555),Er=p(97941),Lr=p(5676),Zr=p(49430);let Y=class extends((0,jr.h)((0,Er.n)((0,Vr.Q)((0,Jr.M)((0,Ar.q)((0,_r.I)(Nr((0,Mr.N)((0,Or.Y)((0,ve.R)(Nt.Z))))))))))){constructor(...n){super(...n),this.legendEnabled=!0,this.isReference=null,this.operationalLayerType="ArcGISImageServiceLayer",this.popupEnabled=!0,this.popupTemplate=null,this.type="imagery"}normalizeCtorArgs(n,i){return"string"==typeof n?b({url:n},i):n}load(n){const i=(0,v.pC)(n)?n.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"]},n).catch(ce.r9).then(()=>this._fetchService(i))),Promise.resolve(this)}writeOperationalLayerType(n,i,e){var r;const t="vector-field"===(null==(r=this.renderer)?void 0:r.type);i[e]=t?"ArcGISImageServiceVectorLayer":"ArcGISImageServiceLayer"}get defaultPopupTemplate(){return this.createPopupTemplate()}createPopupTemplate(n){const i=this.rasterFields,e=this.title,t=new Set;let r=!1,a=!1;this.capabilities&&(r=this.capabilities.operations.supportsQuery&&this.fields&&this.fields.length>0,a="esriImageServiceDataTypeVector-UV"===this.serviceDataType||"esriImageServiceDataTypeVector-MagDir"===this.serviceDataType);const l=new Set;r&&l.add("raster.itempixelvalue");for(const u of i){const c=u.name.toLowerCase();l.has(c)||c.includes("raster.servicepixelvalue.")||t.add(u.name)}return a&&t.add("raster.magnitude").add("raster.direction"),(0,Zr.eZ)({fields:i,title:e},U(b({},n),{visibleFieldNames:t}))}queryFeatures(n,i){return this.queryRasters(n,i).then(e=>{if(null!=e&&e.features)for(const t of e.features)t.layer=t.sourceLayer=this;return e})}queryFeatureCount(n,i){return this.queryRasterCount(n,i)}redraw(){this.emit("redraw")}serviceSupportsSpatialReference(n){return(0,Lr.D)(this,n)}};(0,s._)([(0,o.Cb)(xe.rn)],Y.prototype,"legendEnabled",void 0),(0,s._)([(0,o.Cb)({type:["show","hide"]})],Y.prototype,"listMode",void 0),(0,s._)([(0,o.Cb)({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],Y.prototype,"isReference",void 0),(0,s._)([(0,o.Cb)({type:["ArcGISImageServiceLayer"],json:{origins:{"web-map":{type:["ArcGISImageServiceLayer","ArcGISImageServiceVectorLayer"],read:!1,write:{target:"layerType",ignoreOrigin:!0}}}}})],Y.prototype,"operationalLayerType",void 0),(0,s._)([(0,P.c)("web-map","operationalLayerType")],Y.prototype,"writeOperationalLayerType",null),(0,s._)([(0,o.Cb)(xe.C_)],Y.prototype,"popupEnabled",void 0),(0,s._)([(0,o.Cb)({type:fe.Z,json:{read:{source:"popupInfo"},write:{target:"popupInfo"}}})],Y.prototype,"popupTemplate",void 0),(0,s._)([(0,o.Cb)({readOnly:!0})],Y.prototype,"defaultPopupTemplate",null),(0,s._)([(0,o.Cb)({readOnly:!0,json:{read:!1}})],Y.prototype,"type",void 0),Y=(0,s._)([(0,E.j)("esri.layers.ImageryLayer")],Y);const zr=Y},90463:($,J,p)=>{p.d(J,{P:()=>ce});var s=p(15861),fe=p(2618),v=p(20477),ve=p(84952);function ce(me,de,A){return o.apply(this,arguments)}function o(){return(o=(0,s.Z)(function*(me,de,A){const E=(0,fe.en)(me);return(0,v.executeQueryForCount)(E,ve.Z.from(de),b({},A)).then(P=>P.data.count)})).apply(this,arguments)}},24865:($,J,p)=>{p.d(J,{G:()=>ce});var s=p(15861),fe=p(2618),v=p(20477),ve=p(84952);function ce(me,de,A){return o.apply(this,arguments)}function o(){return(o=(0,s.Z)(function*(me,de,A){const E=(0,fe.en)(me);return(0,v.executeQueryForIds)(E,ve.Z.from(de),b({},A)).then(P=>P.data.objectIds)})).apply(this,arguments)}}}]);