"use strict";var zt=Object.defineProperty,xt=Object.defineProperties,Wt=Object.getOwnPropertyDescriptors,Xe=Object.getOwnPropertySymbols,jt=Object.prototype.hasOwnProperty,Bt=Object.prototype.propertyIsEnumerable,$e=(T,_,i)=>_ in T?zt(T,_,{enumerable:!0,configurable:!0,writable:!0,value:i}):T[_]=i,me=(T,_)=>{for(var i in _||(_={}))jt.call(_,i)&&$e(T,i,_[i]);if(Xe)for(var i of Xe(_))Bt.call(_,i)&&$e(T,i,_[i]);return T},ve=(T,_)=>xt(T,Wt(_));(self.webpackChunkexample_app=self.webpackChunkexample_app||[]).push([[496],{8549:(T,_,i)=>{i.d(_,{C:()=>R,b:()=>N});var l=i(10109),w=i(33726),h=i(2166),c=i(95285),I=i(69960),x=i(17625),K=i(22355),H=i(44835),ie=i(16396);function N(m){const P=new K.kG;P.extensions.add("GL_OES_standard_derivatives");const{vertex:J,fragment:A}=P;return(0,h.Sv)(J,m),P.attributes.add(ie.T.POSITION,"vec3"),P.attributes.add(ie.T.UV0,"vec2"),P.varyings.add("vUV","vec2"),m.hasMultipassTerrain&&P.varyings.add("depth","float"),J.code.add(x.H`
    void main(void) {
      vUV = uv0;
      ${m.hasMultipassTerrain?"depth = (view * vec4(position, 1.0)).z;":""}
      gl_Position = proj * view * vec4(position, 1.0);
    }
  `),P.include(l.l,m),A.uniforms.add(new c.A("size",V=>V.size)),A.uniforms.add(new I.N("color1",V=>V.color1)),A.uniforms.add(new I.N("color2",V=>V.color2)),A.include(w.Y),A.code.add(x.H`
    void main() {
      ${m.hasMultipassTerrain?"terrainDepthTest(gl_FragCoord, depth);":""}
      vec2 uvScaled = vUV / (2.0 * size);

      vec2 uv = fract(uvScaled - 0.25);
      vec2 ab = clamp((abs(uv - 0.5) - 0.25) / fwidth(uvScaled), -0.5, 0.5);
      float fade = smoothstep(0.25, 0.5, max(fwidth(uvScaled.x), fwidth(uvScaled.y)));
      float t = mix(abs(ab.x + ab.y), 0.5, fade);

      gl_FragColor = mix(color2, color1, t);
      ${m.transparencyPassType===H.A.Color?"gl_FragColor = premultiplyAlpha(gl_FragColor);":""}
    }
  `),P}const R=Object.freeze(Object.defineProperty({__proto__:null,build:N},Symbol.toStringTag,{value:"Module"}))},60496:(T,_,i)=>{i.r(_),i.d(_,{default:()=>It});var l=i(17626),w=i(14517),h=i(62208),c=i(77712),K=(i(90912),i(85931),i(76898)),H=i(39691),ie=i(1437),N=i(74554),R=i(32917),m=i(55915),P=i(81863),J=i(21286),A=i(15572),V=i(67831),k=i(99770),g=i(84161),d=i(28093),E=i(4794),Z=i(92383),Y=i(65234),q=i(78172),fe=i(11519),ye=i(11544),ne=i(44766),b=i(37118),M=i(10049),ee=i(98943);function Qe(t,e,s){const n=new M._q;return(0,M.cA)(n,[t[0],t[1]],[e[0],e[1]],s),n.distance}function Je(t,e,s,n){const r=qe;return(0,m.ke)(t,n,X)&&(0,m.ke)(e,n,$)&&(0,m.ke)(s,n,be)?(r.setPoint(0,0,X),r.setPoint(0,1,$),r.setPoint(0,2,be),Math.abs((0,ne.geodesicArea)(r,"square-meters"))):0}const X=(0,d.c)(),$=(0,d.c)(),be=(0,d.c)(),qe=new b.Z({rings:[[X,$,be]],spatialReference:Y.Z.WGS84}),G=(0,d.c)();var Ge=i(495),et=i(53929),Ie=i(37187),ze=i(40686);class tt{constructor(e,s){this.positionsWorldCoords=[],this.positionsRenderCoords=[],this.positionsProjectedWorldCoords=[],this.positionsFittedRenderCoords=[],this.positionsGeographic=[],this.positionsSpherical=[],this.positionsStereographic=[],this.pathSegmentLengths=[],this.geodesicPathSegmentLengths=[],this.perimeterSegmentLengths=[],this.intersectingSegments=new Set,this.geodesicIntersectingSegments=new Set,this.triangleIndices=null,this.geodesicTriangleIndices=null,this.areaCentroidWorldCoords=(0,d.c)(),this.areaCentroidRenderCoords=(0,d.c)(),this.geodesicAreaCentroidRenderCoords=(0,d.c)(),this.area=null,this.geodesicArea=null,this.pathLength=null,this.geodesicPathLength=null,this.perimeterLength=null,this._length=0,this._centroidRenderCoords=(0,d.c)(),this._planeWorldCoords=(0,E.c)(),this._worldUp=(0,d.c)(),this._worldTangent=(0,d.c)(),this._frame=[(0,d.c)(),(0,d.c)(),(0,d.c)()],this._pathVersion=-1,this._validMeasurement=!1,this._hasCursorPoint=!1,this._mode=null,this._tempU=(0,d.c)(),this._tempV=(0,d.c)(),this._tempVec3=(0,d.c)(),this._tempSphere={center:(0,d.c)(),radius:0},this._sceneView=e,this.unitNormalizer=s}update(e,s,n,r,o,a,u){const p=this.unitNormalizer,f=this._sceneView.renderSpatialReference,v=this.unitNormalizer.spatialReference,L=(0,h.pC)(s);if(this._pathVersion===e.version&&this._validMeasurement===r&&!u&&this._hasCursorPoint===L&&this._mode===a)return!e.isValidPolygon&&(this._updateCursorSegmentLength(e,s),!0);this._pathVersion=e.version,this._validMeasurement=r,this._hasCursorPoint=L,this._resize(e.numVertices);const O=(0,P.rS)(n.spatialReference),j=(0,m.Up)(n.spatialReference,O)&&(0,m.jF)(n.spatialReference),{positionsGeographic:B,positionsWorldCoords:Re,positionsRenderCoords:F,positionsSpherical:de}=this;e.forEachVertexPosition((D,z)=>{(function st(t,e){e.hasZ||(e.z=(0,h.Pt)((0,et.KO)(t,e,"ground"),0))})(n.elevationProvider,D),(0,m.KC)(D,Re[z],v),(0,m.KC)(D,F[z],f),j&&((0,m.UY)(D,B[z]),(0,m.KC)(D,de[z],O),(0,g.n)(de[z],de[z]))});const Ve=this._updatePathLengths(r);if(this.pathLength=this._length>1?(0,A.yG)(p.normalizeDistance(Ve),"meters"):null,j){const D=this._updateGeodesicPathLengths(r,v);this.geodesicPathLength=this._length>1?(0,A.yG)(D,"meters"):null}else this.geodesicPathLength=null;return this._updateCursorSegmentLength(e,s),this._updateMode(e,a),r?(this._updateArea(n,p,f,v,o),j&&this._updateGeodesicArea(n),!0):(this.area=null,this.geodesicArea=null,this.perimeterLength=null,this.triangleIndices=null,this.geodesicTriangleIndices=null,this.intersectingSegments.clear(),this.geodesicIntersectingSegments.clear(),!0)}getData(){return{positionsWorldCoords:this.positionsWorldCoords,positionsRenderCoords:this.positionsRenderCoords,positionsProjectedWorldCoords:this.positionsProjectedWorldCoords,positionsFittedRenderCoords:this.positionsFittedRenderCoords,positionsGeographic:this.positionsGeographic,positionsSpherical:this.positionsSpherical,positionsStereographic:this.positionsStereographic,pathSegmentLengths:this.pathSegmentLengths,geodesicPathSegmentLengths:this.geodesicPathSegmentLengths,perimeterSegmentLengths:this.perimeterSegmentLengths,intersectingSegments:this.intersectingSegments,geodesicIntersectingSegments:this.geodesicIntersectingSegments,triangleIndices:this.triangleIndices,geodesicTriangleIndices:this.geodesicTriangleIndices,areaCentroidWorldCoords:this.areaCentroidWorldCoords,areaCentroidRenderCoords:this.areaCentroidRenderCoords,geodesicAreaCentroidRenderCoords:this.geodesicAreaCentroidRenderCoords,fittingMode:this.fittingMode,area:this.area,geodesicArea:this.geodesicArea,pathLength:this.pathLength,geodesicPathLength:this.geodesicPathLength,perimeterLength:this.perimeterLength,cursorSegmentLength:this.cursorSegmentLength,geodesicCursorSegmentLength:this.geodesicCursorSegmentLength,unitNormalizer:this.unitNormalizer,actualMeasurementMode:this.actualMeasurementMode}}_resize(e){for(e<this._length&&(this.positionsWorldCoords.length=e,this.positionsRenderCoords.length=e,this.positionsProjectedWorldCoords.length=e,this.positionsFittedRenderCoords.length=e,this.positionsGeographic.length=e,this.positionsSpherical.length=e,this.positionsStereographic.length=e,this.pathSegmentLengths.length=e,this.geodesicPathSegmentLengths.length=e,this.perimeterSegmentLengths.length=e,this._length=e);this._length<e;)this.positionsWorldCoords.push((0,d.c)()),this.positionsRenderCoords.push((0,d.c)()),this.positionsProjectedWorldCoords.push((0,k.a)()),this.positionsFittedRenderCoords.push((0,d.c)()),this.positionsGeographic.push((0,d.c)()),this.positionsSpherical.push((0,d.c)()),this.positionsStereographic.push((0,k.a)()),this.pathSegmentLengths.push(0),this.geodesicPathSegmentLengths.push(0),this.perimeterSegmentLengths.push(0),++this._length}_updatePathLengths(e){const s=this.positionsWorldCoords,n=this.pathSegmentLengths;let r=0;for(let o=0;o<this._length;++o){const a=n[o]=(0,g.i)(s[o],s[(o+1)%this._length]);(o<this._length-1||e)&&(r+=a)}return r}_updateGeodesicPathLengths(e,s){const n=this.positionsGeographic,r=this.geodesicPathSegmentLengths;let o=0;for(let a=0;a<this._length;++a){const u=r[a]=Qe(n[a],n[(a+1)%this._length],null!=s?s:void 0);(a<this._length-1||e)&&(o+=u)}return o}_updateArea(e,s,n,r,o){const a=e.renderCoordsHelper,u=this.positionsWorldCoords,p=this.positionsRenderCoords,f=this.positionsProjectedWorldCoords,v=this.positionsFittedRenderCoords,L=this._planeWorldCoords,y=this._centroidRenderCoords;(0,Ge.H)(p,y),a.worldUpAtPosition(y,this._worldUp),a.worldBasisAtPosition(y,q.R.X,this._worldTangent),(0,m.Qr)(y,this._worldUp,n,this._worldUp,r),(0,m.Qr)(y,this._worldTangent,n,this._worldTangent,r),u.length>2&&function Te(t,e){if(t.length<3)throw new Error("need at least 3 points to fit a plane");(0,ee.pG)(t[0],t[1],t[2],e)}(u,L),this.fittingMode=this._selectFittingMode(L,u,this._worldUp,o);let O=0;if("horizontal"===this.fittingMode){let D=-1/0;p.forEach((z,Oe)=>{const Ye=a.getAltitude(p[Oe]);Ye>D&&(D=Ye,O=Oe)})}const j=u[O];let B=L,Re=this._worldTangent;"horizontal"===this.fittingMode?B=this._worldUp:"vertical"===this.fittingMode&&(B=this._tempVec3,Re=this._worldUp,(0,ee.T)(L,this._worldUp,B)),(0,g.c)(this._frame[2],B),(0,ee.T)(Re,B,this._frame[0]),(0,g.f)(this._frame[1],this._frame[0],this._frame[2]),(0,g.o)(this._frame[1],this._frame[1]);const F=this._tempVec3,de=this._tempU,Ve=this._tempV;for(let D=0;D<this._length;++D){const z=f[D],Oe=v[D];(0,g.b)(F,u[D],j),(0,V.s)(z,(0,g.e)(this._frame[0],F),(0,g.e)(this._frame[1],F)),(0,g.g)(de,this._frame[0],z[0]),(0,g.g)(Ve,this._frame[1],z[1]),(0,g.a)(F,de,Ve),(0,g.a)(F,F,j),(0,m.SH)(F,r,Oe,n)}this.perimeterLength=this._length>0?(0,A.yG)(s.normalizeDistance(this._updatePerimeterLengths()),"meters"):null,(0,Ge.H)(v,this.areaCentroidRenderCoords),(0,m.SH)(this.areaCentroidRenderCoords,n,this.areaCentroidWorldCoords,r),this._updateIntersectingSegments(),this.area=0===this.intersectingSegments.size?(0,A.ne)(s.normalizeArea(this._computeArea()),"square-meters"):null}_updateGeodesicArea(e){const{renderCoordsHelper:s,spatialReference:n}=e,{positionsSpherical:r,positionsStereographic:o}=this,a=this._tempVec3,u=function ke(t,e=null,s=!0){const r=(o,a)=>{if(0===a[0]&&0===a[1]&&0===a[2])return!1;for(let u=0;u<o.length;++u)if((0,g.e)(a,o[u])<-1e-6)return!1;return!0};if(0===t.length)return!1;if(1===t.length)return e&&(0,g.c)(e,t[0]),!0;(0,g.s)(G,0,0,0);for(let o=0;o<t.length;++o)(0,g.a)(G,G,t[o]);if((0,g.n)(G,G),r(t,G))return e&&(0,g.c)(e,G),!0;if(!s)return!1;for(let o=0;o<t.length;++o)for(let a=0;a<t.length;++a)if(o!==a&&((0,g.f)(G,t[o],t[a]),(0,g.n)(G,G),r(t,G)))return e&&(0,g.c)(e,G),!0;return!1}(r,a);if(!u)return void(this.geodesicArea=null);const p=this._tempU,f=this._tempV;(0,ee._F)(a,p,f);for(let v=0;v<this._length;++v){const L=(0,g.e)(r[v],p),y=(0,g.e)(r[v],f),O=(0,g.e)(r[v],a);(0,V.s)(o[v],L/O,y/O)}(0,g.g)(a,a,(0,Z.Iu)(n).radius),s.toRenderCoords(a,(0,P.rS)(n),this.geodesicAreaCentroidRenderCoords),this._updateGeodesicIntersectingSegments(),this.geodesicArea=u&&0===this.geodesicIntersectingSegments.size?(0,A.ne)(this._computeGeodesicArea(),"square-meters"):null}_updatePerimeterLengths(){const e=this.positionsProjectedWorldCoords,s=this.perimeterSegmentLengths;let n=0;for(let r=0;r<this._length;++r)n+=s[r]=(0,V.d)(e[r],e[(r+1)%this._length]);return n}_updateIntersectingSegments(){const e=this.positionsProjectedWorldCoords,s=this.intersectingSegments;s.clear();for(let n=0;n<this._length;++n)for(let r=n+2;r<this._length;++r)(r+1)%this._length!==n&&(0,fe.UT)(e[n],e[(n+1)%this._length],e[r],e[(r+1)%this._length])&&(s.add(n),s.add(r))}_computeArea(){const e=this.positionsProjectedWorldCoords,s=this.triangleIndices=(0,Ie.mi)((0,ze.bT)(e));let n=0;for(let r=0;r<s.length;r+=3)n+=(0,ye.wu)(e[s[r]],e[s[r+1]],e[s[r+2]]);return n}_updateGeodesicIntersectingSegments(){const e=this.positionsStereographic,s=this.geodesicIntersectingSegments;s.clear();for(let n=0;n<this._length;++n)for(let r=n+2;r<this._length;++r)(r+1)%this._length!==n&&(0,fe.UT)(e[n],e[(n+1)%this._length],e[r],e[(r+1)%this._length])&&(s.add(n),s.add(r))}_computeGeodesicArea(){const e=this.positionsGeographic,n=this.geodesicTriangleIndices=(0,Ie.mi)((0,ze.bT)(this.positionsStereographic));let r=0;for(let o=0;o<n.length;o+=3)r+=Je(e[n[o]],e[n[o+1]],e[n[o+2]],Y.Z.WGS84);return r}_selectFittingMode(e,s,n,r){const o=s.map(v=>Math.abs(function Le(t,e){return(0,g.e)(t,e)+t[3]}(e,v))).reduce((v,L)=>Math.max(v,L),0);!function re(t,e){const s=e.center;(0,g.s)(s,0,0,0);for(let r=0;r<t.length;++r)(0,g.a)(s,s,t[r]);(0,g.g)(s,s,1/t.length);let n=0;for(let r=0;r<t.length;++r)n=Math.max(n,(0,g.d)(s,t[r]));e.radius=Math.sqrt(n)}(s,this._tempSphere);const a=o/(2*this._tempSphere.radius);let f="horizontal";return a<r.maxRelativeErrorCoplanar?f="oblique":a<r.maxRelativeErrorAlmostCoplanar&&(f=Math.abs((0,g.e)(n,e))>Math.cos((0,J.Vl)(r.verticalAngleThreshold))?"horizontal":"vertical"),f}_updateCursorSegmentLength(e,s){const n=e.lastPoint;!e.isValidPolygon&&(0,h.pC)(n)&&(0,h.pC)(s)?(this.geodesicCursorSegmentLength=(0,A.yG)(function C(t,e){if(!(0,m.UY)(t,X)||!(0,m.UY)(e,$))return 0;const s=new M._q;return(0,M.cA)(s,[X[0],X[1]],[$[0],$[1]]),s.distance}(n,s),"meters"),this.cursorSegmentLength=(0,A.yG)(this.unitNormalizer.normalizeDistance(function oe(t,e,s){return(0,m.KC)(t,X,s)&&(0,m.KC)(e,$,s)?(0,g.i)(X,$):0}(n,s,this.unitNormalizer.spatialReference)),"meters")):(this.geodesicCursorSegmentLength=null,this.cursorSegmentLength=null)}_updateMode(e,s){if(s===N.e.Auto){this.actualMeasurementMode="euclidean";let n=0;null!=this.geodesicPathLength&&(n+=this.geodesicPathLength.value),!e.isValidPolygon&&(0,h.pC)(this.geodesicCursorSegmentLength)&&(n+=this.geodesicCursorSegmentLength.value),n>it&&(this.actualMeasurementMode="geodesic")}else this.actualMeasurementMode=s===N.e.Euclidean?"euclidean":"geodesic";null==this.geodesicPathLength&&(this.actualMeasurementMode="euclidean"),this._mode=s}}const it=1e5;var nt=i(68);let ae=class extends w.Z{constructor(t){super(t)}initialize(){const t=this.view.spatialReference,e=(0,P.rS)(t),s=e===P.GG?P.wY:e,n=!t||(0,m.Up)(t,s)?s:t,r=new nt.D(n);this._measurementDataManager=new tt(this.view,r),this.addHandles([this.analysisViewData.path.on("change",()=>this._update()),(0,R.YP)(()=>this.analysisViewData.cursorPoint,()=>this._update(),R.Z_),(0,R.YP)(()=>this.analysisViewData.mode,()=>this._update(),R.Z_)]),this._update()}_update(t=!1){const{analysisViewData:e,view:s}=this;this._measurementDataManager.update(e.path,e.cursorPoint,s,e.validMeasurement,{maxRelativeErrorCoplanar:.005,maxRelativeErrorAlmostCoplanar:.01,verticalAngleThreshold:80},e.mode,t)&&(e.measurementData=this._measurementDataManager.getData())}};(0,l._)([(0,c.Cb)({constructOnly:!0})],ae.prototype,"view",void 0),(0,l._)([(0,c.Cb)({constructOnly:!0})],ae.prototype,"analysis",void 0),(0,l._)([(0,c.Cb)({constructOnly:!0})],ae.prototype,"analysisViewData",void 0),ae=(0,l._)([(0,K.j)("esri.views.3d.analysis.AreaMeasurement.support.AreaMeasurementController")],ae);var rt=i(61885),xe=i(72392),ot=i(63290),at=i(72642),Ue=i(65401),ht=i(54865),lt=i(50017),We=i(466),je=i(26777);const Be="esri.views.3d.analysis.AreaMeasurement.support.AreaMeasurement3DPathHelper",dt=ot.Z.getLogger(Be);let W=class extends rt.Z.EventedAccessor{constructor(t={}){super(t),this._handles=new xe.Z,this._version=0,this._internalGeometryChange=!1,this._extent=(0,Ue.cS)()}destroy(){this._handles=(0,h.SC)(this._handles)}set areaMeasurement(t){this._set("areaMeasurement",t),(0,h.pC)(t)&&(0,h.pC)(this.view)&&this._initialize(t,this.view)}set view(t){this._set("view",t),(0,h.pC)(t)&&(0,h.pC)(this.areaMeasurement)&&this._initialize(this.areaMeasurement,t)}get constructed(){return(0,h.pC)(this.areaMeasurement)&&(0,h.pC)(this.view)}get version(){return this._version}get isValidPolygon(){return this.constructed&&this._editGeometry.components.length>0&&this._editGeometry.components[0].isClosed()}get extent(){if(this.constructed&&this._editGeometry.components.length>0&&this._editGeometry.components[0].vertices.length>0){const t=(0,Ue.cS)(this._extent);return this.forEachVertex(e=>{(0,Ue.Ho)(t,e.pos)}),t}return null}get spatialReference(){return this.constructed?this._editGeometry.coordinateHelper.spatialReference:null}_initialize(t,e){this._handles.removeAll(),this._handles.add((0,R.YP)(()=>t.geometry,()=>{this._updateEditGeometryFromModelGeometry(t,e)},R.tX)),this._makeDirty(!0)}_makeDirty(t=!1){this.notifyChange("isValidPolygon"),this.notifyChange("initialized"),this.notifyChange("extent"),t&&this.notifyChange("numVertices")}_updateEditGeometryFromModelGeometry(t,e){if(this._version++,this._internalGeometryChange)return;this._handles.remove("EditGeometry");let s=t.geometry;if((0,h.pC)(s)){const n=(0,m.fM)(s,e.spatialReference);(0,h.Wi)(n)&&(0,ht.e)(t,s.spatialReference,dt),s=n}this._editGeometryOperations=(0,h.pC)(s)?je.c.fromGeometry(s,e.state.viewingMode):new je.c(new We.XE("polygon",(0,lt.Y6)(!0,!1,e.spatialReference))),this._makeDirty(!0),this.emit("change"),this._handles.add(this._editGeometry.on("change",n=>{this._makeDirty(null!=n.addedVertices||null!=n.removedVertices),this._internalGeometryChange=!0,t.geometry=this.numVertices>0?this._editGeometry.geometry:null,this._internalGeometryChange=!1}),"EditGeometry")}get _editGeometry(){return this._editGeometryOperations.data}get vertices(){const t=[];return this.forEachVertex(e=>{t.push(e)}),t}get numVertices(){return this.constructed&&this._editGeometry.components.length>0?this._editGeometry.components[0].vertices.length:0}get lastPoint(){if(this.constructed&&this._editGeometry.components.length>0){const t=this._editGeometry.components[0].getLastVertex();if((0,h.pC)(t))return this._editGeometry.coordinateHelper.vectorToPoint(t.pos)}return null}getVertex(t){if(!this.constructed||0===this._editGeometry.components.length||0===this._editGeometry.components[0].vertices.length)return null;const e=this._editGeometry.components[0].vertices[0];let s=e;do{if(s.index===t)return s;s=s.rightEdge.rightVertex}while(s!==e&&null!=s);return null}getVertexPositionAsPoint(t){return this._editGeometry.coordinateHelper.vectorToPoint(t.pos)}getVertexPositionAsPointFromIndex(t){return this._editGeometry.coordinateHelper.vectorToPoint(this.getVertex(t).pos)}forEachVertex(t){this.constructed&&this._editGeometry.components.length>0&&this._editGeometry.components[0].iterateVertices(t)}forEachVertexPosition(t){const e=this._editGeometry.coordinateHelper;this.forEachVertex((s,n)=>{e.vectorToPoint(s.pos,Fe),t(Fe,n)})}clear(){(0,h.pC)(this.areaMeasurement)&&(this.areaMeasurement.geometry=null)}add(t){if(!this.constructed)return null;if(0===this._editGeometry.components.length){const s=(0,h.Wg)(this.view);this._editGeometry.components.push(new We.wA(s.spatialReference,s.state.viewingMode))}const e=this._editGeometryOperations.appendVertex(this._editGeometry.coordinateHelper.pointToVector(t));return this.emit("change"),e}close(){if(!this.constructed||0===this._editGeometry.components.length)return null;const t=this._editGeometryOperations.closeComponent(this._editGeometry.components[0]);return this.emit("change"),t}ensureContains(t,e=""){let s=!1;if(this._editGeometry.components.forEach(n=>{n.iterateVertices(r=>{r===t&&(s=!0)})}),!s)throw new Error(`vertex doesnt exist ${e}`);return s}setVertexPosition(t,e){if(!this.constructed)return null;const s=this._editGeometryOperations.setVertexPosition(t,this._editGeometry.coordinateHelper.pointToVector(e));return this.emit("change"),s}equals(t){if(this.numVertices!==t.numVertices)return!1;let e=!0;return this.forEachVertexPosition((s,n)=>{const r=t.getVertexPositionAsPointFromIndex(n);s.equals(r)||(e=!1)}),!!e}};(0,l._)([(0,c.Cb)({value:null})],W.prototype,"areaMeasurement",null),(0,l._)([(0,c.Cb)({value:null})],W.prototype,"view",null),(0,l._)([(0,c.Cb)()],W.prototype,"isValidPolygon",null),(0,l._)([(0,c.Cb)()],W.prototype,"extent",null),(0,l._)([(0,c.Cb)()],W.prototype,"spatialReference",null),(0,l._)([(0,c.Cb)()],W.prototype,"numVertices",null),W=(0,l._)([(0,K.j)(Be)],W);const Fe=new at.Z;var ce=i(91558),te=(i(52515),i(51819)),Ke=(i(8314),i(84600)),ge=i(16730),He=i(28347),ct=i(43703),_e=i(67214),ue=i(87469),Ce=i(993),gt=i(53928),Ne=i(94255),ut=i(41120),Q=i(40723),Se=i(16396),Ze=i(13934),pt=i(60881),Pe=i(5894),mt=i(2770),vt=i(66131),ft=i(15842),yt=i(651),Lt=i(91056),_t=i(39114),we=i(88569),Ct=i(12407),Me=i(44835),St=i(8549),Ae=i(67969),De=i(2078);class Ee extends Lt.A{initializeProgram(e){return new Ct.$(e.rctx,Ee.shader.get().build(this.configuration),_t.i)}_setPipelineState(e){const s=this.configuration,n=e===Me.A.NONE,r=e===Me.A.FrontFace;return(0,De.sm)({blending:s.transparent?n?Mt:(0,we.j7)(e):null,depthTest:{func:(0,we.Bh)(e)},depthWrite:n?s.writeDepth?De.LZ:null:(0,we.K5)(e),colorWrite:De.BK,polygonOffset:n||r?s.polygonOffset?Pt:null:{factor:-1,units:-25}})}initializePipeline(){return this._setPipelineState(this.configuration.transparencyPassType)}}Ee.shader=new yt.J(St.C,()=>i.e(2558).then(i.bind(i,2558)));const Pt={factor:0,units:-25},Mt=(0,De.wK)(Ae.zi.SRC_ALPHA,Ae.zi.ONE,Ae.zi.ONE_MINUS_SRC_ALPHA,Ae.zi.ONE_MINUS_SRC_ALPHA);var he=i(87601),At=i(41528);class se extends At.W{constructor(){super(...arguments),this.transparencyPassType=Me.A.NONE,this.transparent=!1,this.writeDepth=!0,this.polygonOffset=!1,this.hasMultipassTerrain=!1,this.cullAboveGround=!1}}(0,l._)([(0,he.o)({count:Me.A.COUNT})],se.prototype,"transparencyPassType",void 0),(0,l._)([(0,he.o)()],se.prototype,"transparent",void 0),(0,l._)([(0,he.o)()],se.prototype,"writeDepth",void 0),(0,l._)([(0,he.o)()],se.prototype,"polygonOffset",void 0),(0,l._)([(0,he.o)()],se.prototype,"hasMultipassTerrain",void 0),(0,l._)([(0,he.o)()],se.prototype,"cullAboveGround",void 0);class Dt extends ft.c{constructor(e){super(e,new Rt),this._configuration=new se}dispose(){}getConfiguration(e,s){return this._configuration.transparent=this.parameters.transparent,this._configuration.writeDepth=this.parameters.writeDepth,this._configuration.polygonOffset=this.parameters.polygonOffset,this._configuration.transparencyPassType=s.transparencyPassType,this._configuration.hasMultipassTerrain=s.multipassTerrain.enabled,this._configuration.cullAboveGround=s.multipassTerrain.cullAboveGround,this._configuration}requiresSlot(e,s){return!(s!==Ze.H.Color&&s!==Ze.H.Alpha||e!==(this.parameters.transparent?this.parameters.writeDepth?Pe.r.TRANSPARENT_MATERIAL:Pe.r.TRANSPARENT_DEPTH_WRITE_DISABLED_MATERIAL:Pe.r.OPAQUE_MATERIAL)&&e!==Pe.r.DRAPED_MATERIAL)}createGLMaterial(e){return new Et(e)}createBufferWriter(){return new mt.G(vt.W1)}}class Et extends pt.Z{beginSlot(e){return this.ensureTechnique(Ee,e)}}class Rt extends Q.Mt{constructor(){super(...arguments),this.size=(0,k.f)(1,1),this.color1=(0,E.f)(.75,.75,.75,1),this.color2=(0,E.f)(.5,.5,.5,1),this.transparent=!1,this.writeDepth=!0,this.polygonOffset=!1}}class Vt extends gt._{constructor(e){super(e),this._checkerBoardMaterial=null,this._renderOccluded=Q.yD.OccludeAndTransparent,this._geometry=null,this._size=(0,k.f)(1,1),this._color1=(0,E.f)(1,.5,0,.5),this._color2=(0,E.f)(1,1,1,.5),this.applyProps(e)}get renderOccluded(){return this._renderOccluded}set renderOccluded(e){e!==this._renderOccluded&&(this._renderOccluded=e,this._updateMaterial())}get geometry(){return this._geometry}set geometry(e){this._geometry=e,this._geometryChanged()}get size(){return this._size}set size(e){(0,V.c)(this._size,e),this._updateMaterial()}get color1(){return this._color1}set color1(e){(0,Ce.g)(e,this._color1)||((0,Ce.c)(this._color1,e),this._updateMaterial())}get color2(){return this._color2}set color2(e){(0,Ce.g)(e,this._color2)||((0,Ce.c)(this._color2,e),this._updateMaterial())}_updateMaterial(){(0,h.pC)(this._checkerBoardMaterial)&&this._checkerBoardMaterial.setParameters({size:this._size,color1:this._color1,color2:this._color2,renderOccluded:this._renderOccluded})}createExternalResources(){this._checkerBoardMaterial=new Dt({size:this._size,color1:this._color1,color2:this._color2,transparent:!0,writeDepth:!1,polygonOffset:!0,renderOccluded:Q.yD.OccludeAndTransparent})}destroyExternalResources(){this._checkerBoardMaterial=null}forEachExternalMaterial(e){(0,h.pC)(this._checkerBoardMaterial)&&e(this._checkerBoardMaterial)}createGeometries(e){if((0,h.Wi)(this._geometry)||(0,h.Wi)(this._checkerBoardMaterial))return;const s=Ot;(0,He.D)(s,this.transform);const n=this._geometry,r=[],o=(0,d.c)();n.position.forEach(p=>{(0,g.b)(o,p,s),r.push(o[0],o[1],o[2])});const a=[];n.uv.forEach(p=>{a.push(p[0],p[1])});const u=new ut.Z(this._checkerBoardMaterial,[[Se.T.POSITION,new Ne.a(r,3,!0)],[Se.T.UV0,new Ne.a(a,2,!0)]],[[Se.T.POSITION,n.triangleIndices],[Se.T.UV0,n.triangleIndices]]);e.addGeometry(u)}_geometryChanged(){this.recreateGeometry()}}const Ot=(0,d.c)();var pe=i(64770),Tt=i(54889),bt=i(56683),Gt=i(41840);let U=class extends w.Z{get visible(){return this.analysisViewData.visible}get testData(){return{labels:{area:this._areaLabel,pathLength:this._pathLengthLabel,cursorSegmentLength:this._cursorSegmentLengthLabel,perimeterLength:this._perimeterLengthLabel}}}constructor(t){super(t),this._handles=new xe.Z,this._params={pathLineColor:ce.Z.toUnitRGBA((0,te.e9)()),pathLineWidth:3,intersectingLineColor:[1,.2,0,1],perimeterLineColor:ce.Z.toUnitRGBA((0,te.e9)()),perimeterLineWidth:2,projectionLineColor:ce.Z.toUnitRGBA((0,te.e9)()),projectionLineWidth:2,projectionLineStippleSize:5,areaColor1:ce.Z.toUnitRGBA((0,te.e9)(.5)),areaColor2:ce.Z.toUnitRGBA((0,te.RN)(.5)),labelDistance:25},this._path=null,this._intersectedPath=null,this._perimeter=null,this._intersectedPerimeter=null,this._projectionLines=null,this._measurementArea=null,this._areaLabel=null,this._pathLengthLabel=null,this._cursorSegmentLengthLabel=null,this._perimeterLengthLabel=null,this._pathSegments=[],this._perimeterSegments=[],this._cursorSegment=null,this._origin=(0,d.c)(),this._originTransform=(0,ct.c)(),this._cursorPositionRenderSpace=(0,d.c)(),this.messages=null,this.viewData=Ut,this.areaLabel=null,this.perimeterLengthLabel=null,this.loadingMessages=!0}initialize(){const{analysisViewData:t,_params:e,view:s}=this;this._path=new ue.r({view:s,attached:!0,width:e.pathLineWidth,color:e.pathLineColor,polygonOffset:!0,renderOccluded:Q.yD.OccludeAndTransparent}),this._intersectedPath=new ue.r({view:s,attached:!0,width:e.pathLineWidth,color:e.intersectingLineColor,polygonOffset:!0,renderOccluded:Q.yD.OccludeAndTransparent}),this._perimeter=new ue.r({view:s,attached:!0,width:e.perimeterLineWidth,color:e.perimeterLineColor,polygonOffset:!0,renderOccluded:Q.yD.OccludeAndTransparent}),this._intersectedPerimeter=new ue.r({view:s,attached:!0,width:e.perimeterLineWidth,color:e.intersectingLineColor,polygonOffset:!0,renderOccluded:Q.yD.OccludeAndTransparent}),this._projectionLines=new ue.r({view:s,attached:!0,width:e.projectionLineWidth,color:e.projectionLineColor,stipplePattern:(0,Tt.z5)(e.projectionLineStippleSize),polygonOffset:!0,renderOccluded:Q.yD.OccludeAndTransparent}),this._measurementArea=new Vt({view:s,attached:!0,color1:e.areaColor1,color2:e.areaColor2});const n={attached:!0,backgroundColor:(0,te.hU)(.6),textColor:(0,te.uu)(),view:s};this._areaLabel=new _e.Kc(ve(me({},n),{fontSize:le.Large})),this._pathLengthLabel=new _e.Kc(ve(me({},n),{fontSize:le.Small})),this._cursorSegmentLengthLabel=new _e.Kc(ve(me({},n),{fontSize:le.Small})),this._perimeterLengthLabel=new _e.Kc(ve(me({},n),{fontSize:le.Small})),this._handles.add([(0,R.YP)(()=>[t.mode,this.visible,t.unit,t.measurementData,t.cursorPoint],()=>this._update(),R.tX),(0,R.YP)(()=>{var r;return null==(r=s.state)?void 0:r.camera},()=>this._updateLabels(),R.tX),(0,bt.qe)(()=>this._updateMessageBundle())]),this._updateMessageBundle()}destroy(){this._measurementArea=(0,h.SC)(this._measurementArea),this._path=(0,h.SC)(this._path),this._intersectedPath=(0,h.SC)(this._intersectedPath),this._perimeter=(0,h.SC)(this._perimeter),this._intersectedPerimeter=(0,h.SC)(this._intersectedPerimeter),this._areaLabel=(0,h.SC)(this._areaLabel),this._pathLengthLabel=(0,h.SC)(this._pathLengthLabel),this._cursorSegmentLengthLabel=(0,h.SC)(this._cursorSegmentLengthLabel),this._perimeterLengthLabel=(0,h.SC)(this._perimeterLengthLabel),this._projectionLines=(0,h.SC)(this._projectionLines),this._handles=(0,h.SC)(this._handles),this.set("view",null)}_update(){if(this.destroyed||!this.view.ready||!this.view.renderCoordsHelper)return;const{analysisViewData:{measurementData:t},analysisViewData:e}=this;(0,h.Wi)(t)||(this._updateViewData(t,e.path,e.cursorPoint),this._updateOrigin(),this._updatePathSegments(),this._updatePerimeterSegments(),this._updateArea(),this._updateProjectionLines(),this._updateLabels())}_updateViewData(t,e,s){const n=e.isValidPolygon,r="geodesic"===t.actualMeasurementMode,o=r?t.geodesicArea:t.area;let a=1;if(o){const p=this._toPreferredAreaUnit(o,this.analysisViewData.unit);a=(0,J.sk)(Math.sqrt(p.value)/Math.sqrt(300)),a*=Math.sqrt((0,ge.En)(1,p.unit,"square-meters")),a/=t.unitNormalizer.normalizeDistance(1)}this._set("viewData",{validMeasurement:n,path:e,pathVersion:e.version,cursorPoint:s,measurementData:t,mode:t.actualMeasurementMode,positionsGeographic:t.positionsGeographic,positionsRenderCoords:t.positionsRenderCoords,positionsProjected:t.positionsProjectedWorldCoords,positionsFittedRenderCoords:t.positionsFittedRenderCoords,intersectingSegments:r?t.geodesicIntersectingSegments:t.intersectingSegments,triangleIndices:r?t.geodesicTriangleIndices:t.triangleIndices,fittingMode:t.fittingMode,areaCentroid:r?t.geodesicAreaCentroidRenderCoords:t.areaCentroidRenderCoords,pathLengthLabelSegmentIndex:n?0:e.numVertices-2,perimeterLengthLabelSegmentIndex:0,checkerSize:a})}_updateOrigin(){(0,Ge.H)(this.viewData.positionsRenderCoords,this._origin),(0,He.f)(this._originTransform,this._origin),this._measurementArea.transform=this._originTransform,this._projectionLines.transform=this._originTransform}_createSegments(t){const e=this.viewData,s=e.path,n=this.view.renderCoordsHelper.spatialReference,r=e.mode,o=[],a=[],u=[],p=e.validMeasurement?s.numVertices:s.numVertices-1;for(let f=0;f<p;++f){const v=e[t][f],L=e[t][(f+1)%s.numVertices];let y=null;switch(r){case"euclidean":y=new pe.y(v,L);break;case"geodesic":y=new pe.u(v,L,n)}e.intersectingSegments.has(f)?u.push(y):a.push(y),o.push(y)}return{all:o,nonIntersecting:a,intersecting:u}}_updatePathSegments(){const{view:{renderCoordsHelper:t},viewData:e,visible:s}=this,n=this._createSegments("positionsRenderCoords"),{cursorPoint:r,mode:o,path:a}=e,u=!a.isValidPolygon,p=t.spatialReference;if(this._cursorSegment=null,a.numVertices>0&&u&&(0,h.pC)(r)&&t.toRenderCoords(r,this._cursorPositionRenderSpace)){const f=e.positionsRenderCoords[a.numVertices-1],v=this._cursorPositionRenderSpace;let L=null;switch(o){case"euclidean":L=new pe.y(f,v);break;case"geodesic":L=new pe.u(f,v,p)}n.nonIntersecting.push(L),this._cursorSegment=L}this._path.setGeometryFromSegments(n.nonIntersecting,this._origin),this._path.visible=s,this._intersectedPath.setGeometryFromSegments(n.intersecting,this._origin),this._intersectedPath.visible=s,this._pathSegments=n.all}_updatePerimeterSegments(){const t=this.visible&&"euclidean"===this.viewData.mode,e=this._createSegments("positionsFittedRenderCoords");this._perimeter.setGeometryFromSegments(e.nonIntersecting,this._origin),this._perimeter.visible=t,this._intersectedPerimeter.setGeometryFromSegments(e.intersecting,this._origin),this._intersectedPerimeter.visible=t,this._perimeterSegments=e.all}_updateArea(){const t=this.viewData;switch(t.mode){case"euclidean":this._updateAreaEuclidean(t);break;case"geodesic":this._updateAreaGeodesic()}}_updateAreaEuclidean(t){const e=this.visible;t.validMeasurement&&0===t.intersectingSegments.size&&t.triangleIndices?(this._measurementArea.geometry={uv:t.positionsProjected,position:t.positionsFittedRenderCoords,triangleIndices:t.triangleIndices},this._measurementArea.size=[t.checkerSize,t.checkerSize],this._measurementArea.visible=e):this._measurementArea.visible=!1}_updateAreaGeodesic(){this._measurementArea.visible=!1}_updateProjectionLines(){const t=this.viewData,e=this.visible,s=t.path;if(s.numVertices>0&&t.validMeasurement&&"euclidean"===t.mode){const r=[];for(let o=0;o<s.numVertices;++o){const a=(0,d.c)();(0,g.b)(a,t.positionsRenderCoords[o],this._origin);const u=(0,d.c)();(0,g.b)(u,t.positionsFittedRenderCoords[o],this._origin),r.push([a,u])}this._projectionLines.geometry=r,this._projectionLines.visible=e}else this._projectionLines.geometry=null,this._projectionLines.visible=!1}_updateLabels(){if(this.destroyed)return;const{viewData:t}=this,{measurementData:e,mode:s,path:n}=t;if(!n)return;const r=!n.isValidPolygon,o=this.visible,a=this._formatAreaLabel(this.messages,"geodesic"===s?e.geodesicArea:e.area,this.analysisViewData.unit);(0,h.pC)(a)?(this._areaLabel.geometry={type:"point",point:t.areaCentroid},this._areaLabel.text=a,this._areaLabel.visible=t.validMeasurement&&0===t.intersectingSegments.size&&o):this._areaLabel.visible=!1,this._set("areaLabel",(0,h.Wg)(a));const u=this._formatLengthLabel(this.messages,"geodesic"===s?e.geodesicPathLength:e.pathLength,this.analysisViewData.unit);if((0,h.pC)(u)&&t.pathLengthLabelSegmentIndex>=0&&t.pathLengthLabelSegmentIndex<this._pathSegments.length){const y=this._pathSegments[t.pathLengthLabelSegmentIndex],O=(0,h.pC)(this._cursorSegment)?this._cursorSegment:wt;this._pathLengthLabel.distance=this._params.labelDistance,this._pathLengthLabel.geometry={type:"corner",left:y,right:O},this._pathLengthLabel.text=u,this._pathLengthLabel.visible=r&&n.numVertices>0&&o}else this._pathLengthLabel.visible=!1;const p="geodesic"===s?t.measurementData.geodesicCursorSegmentLength:t.measurementData.cursorSegmentLength;if((0,h.pC)(p)){const y=this._formatLengthLabel(this.messages,p,this.analysisViewData.unit);this._cursorSegmentLengthLabel.distance=this._params.labelDistance,this._cursorSegmentLengthLabel.geometry=(0,h.pC)(this._cursorSegment)?{type:"segment",segment:this._cursorSegment,sampleLocation:"end"}:null,this._cursorSegmentLengthLabel.anchor="bottom",this._cursorSegmentLengthLabel.text=(0,h.Wg)(y),this._cursorSegmentLengthLabel.visible=r&&0!==p.value&&o}else this._cursorSegmentLengthLabel.visible=!1;this._cursorSegmentLengthLabel.overlaps(this._pathLengthLabel)&&(this._cursorSegmentLengthLabel.visible=!1),this._pathLengthLabel.overlaps(this._areaLabel)&&(this._pathLengthLabel.visible=!1);const f="geodesic"===t.mode,L=this._formatLengthLabel(this.messages,f?e.geodesicPathLength:e.perimeterLength,this.analysisViewData.unit);if(this._set("perimeterLengthLabel",(0,h.Wg)(L)),t.validMeasurement&&0===t.intersectingSegments.size){this._perimeterLengthLabel.distance=this._params.labelDistance,this._perimeterLengthLabel.anchor="top",this._perimeterLengthLabel.text=(0,h.Wg)(L),this._perimeterLengthLabel.visible=!0;let y=!0;for(let O=0;O<t.path.numVertices;++O){const j=(t.perimeterLengthLabelSegmentIndex+O)%t.path.numVertices;if(y=!0,this._perimeterLengthLabel.geometry={type:"segment",segment:f?this._pathSegments[j]:this._perimeterSegments[j],sampleLocation:"center"},!this._perimeterLengthLabel.overlaps(this._areaLabel))break;y=!1}this._perimeterLengthLabel.visible=y&&o}else this._perimeterLengthLabel.visible=!1}_toPreferredAreaUnit(t,e){return(0,A.nn)(t,this._preferredAreaUnit(t,e))}_preferredAreaUnit(t,e){switch(e){case"metric":return(0,ge.tQ)(t.value,t.unit);case"imperial":return(0,ge.Yl)(t.value,t.unit);default:return e}}_preferredLengthUnit(t,e){const s=this._deriveLengthUnitFromAreaUnit(e);switch(s){case"metric":return(0,ge.KU)(t.value,t.unit);case"imperial":return(0,ge.FN)(t.value,t.unit);default:return s}}_deriveLengthUnitFromAreaUnit(t){switch(t){case"metric":case"ares":case"hectares":return"metric";case"imperial":case"acres":return"imperial";case"square-inches":return"inches";case"square-feet":return"feet";case"square-yards":return"yards";case"square-miles":return"miles";case"square-us-feet":return"us-feet";case"square-millimeters":return"millimeters";case"square-centimeters":return"centimeters";case"square-decimeters":return"decimeters";case"square-meters":return"meters";case"square-kilometers":return"kilometers"}throw new Error("unhandled area unit")}_formatAreaLabel(t,e,s){return t&&e&&(0,Ke.VG)(t,e,this._preferredAreaUnit(e,s))}_formatLengthLabel(t,e,s){return t&&e&&(0,Ke.VG)(t,e,this._preferredLengthUnit(e,s))}_updateMessageBundle(){this.loadingMessages=!0,(0,Gt.ME)("esri/core/t9n/Units").then(t=>{this.messages=t,this.view&&this._update()}).finally(()=>{this.loadingMessages=!1})}};var le,t;(0,l._)([(0,c.Cb)()],U.prototype,"view",void 0),(0,l._)([(0,c.Cb)()],U.prototype,"messages",void 0),(0,l._)([(0,c.Cb)()],U.prototype,"analysis",void 0),(0,l._)([(0,c.Cb)()],U.prototype,"viewData",void 0),(0,l._)([(0,c.Cb)()],U.prototype,"analysisViewData",void 0),(0,l._)([(0,c.Cb)({readOnly:!0})],U.prototype,"areaLabel",void 0),(0,l._)([(0,c.Cb)({readOnly:!0})],U.prototype,"perimeterLengthLabel",void 0),(0,l._)([(0,c.Cb)()],U.prototype,"loadingMessages",void 0),(0,l._)([(0,c.Cb)()],U.prototype,"visible",null),U=(0,l._)([(0,K.j)("esri.views.3d.analysis.AreaMeasurement.support.AreaMeasurementVisualization")],U),(t=le||(le={}))[t.Small=12]="Small",t[t.Large=16]="Large";const Ut={validMeasurement:!1,path:null,pathVersion:-1,cursorPoint:null,measurementData:null,mode:null,positionsGeographic:null,positionsRenderCoords:null,positionsProjected:null,positionsFittedRenderCoords:null,intersectingSegments:null,triangleIndices:null,fittingMode:null,areaCentroid:null,pathLengthLabelSegmentIndex:null,perimeterLengthLabelSegmentIndex:null,checkerSize:null},wt=new pe.y((0,d.c)(),(0,d.c)());let S=class extends((0,ie.p)(w.Z)){constructor(t){super(t),this.type="area-measurement-view-3d",this.analysis=null,this.measurementData=null,this.lastDraggedVertex=null,this.cursorPoint=null,this.mode=N.e.Auto}initialize(){const{analysis:t,view:e}=this;this.path=new W({view:e,areaMeasurement:t}),this.analysisVisualization=new U({view:e,analysis:t,analysisViewData:this}),this.analysisController=new ae({view:e,analysis:t,analysisViewData:this})}destroy(){this.analysisController=(0,h.SC)(this.analysisController),this.analysisVisualization=(0,h.SC)(this.analysisVisualization),this.path.destroy()}get updating(){var t;return!(null==(t=this.analysisVisualization)||!t.loadingMessages)}get result(){const{measurementData:t}=this;return(0,h.Wi)(t)?{area:null,mode:null,perimeter:null}:"euclidean"===t.actualMeasurementMode?{area:t.area,perimeter:t.perimeterLength,mode:"euclidean"}:{area:t.geodesicArea,perimeter:t.pathLength,mode:"geodesic"}}get viewData(){return this.analysisVisualization.viewData}get validMeasurement(){return this.path.isValidPolygon}get unit(){return(0,h.Pt)(this.analysis.unit,this._defaultUnit)}get testData(){return{visualization:this.analysisVisualization,controller:this.analysisController}}};(0,l._)([(0,c.Cb)({readOnly:!0})],S.prototype,"type",void 0),(0,l._)([(0,c.Cb)({constructOnly:!0,nonNullable:!0})],S.prototype,"analysis",void 0),(0,l._)([(0,c.Cb)()],S.prototype,"updating",null),(0,l._)([(0,c.Cb)()],S.prototype,"analysisVisualization",void 0),(0,l._)([(0,c.Cb)()],S.prototype,"analysisController",void 0),(0,l._)([(0,c.Cb)()],S.prototype,"result",null),(0,l._)([(0,c.Cb)()],S.prototype,"measurementData",void 0),(0,l._)([(0,c.Cb)()],S.prototype,"viewData",null),(0,l._)([(0,c.Cb)()],S.prototype,"validMeasurement",null),(0,l._)([(0,c.Cb)()],S.prototype,"path",void 0),(0,l._)([(0,c.Cb)()],S.prototype,"lastDraggedVertex",void 0),(0,l._)([(0,c.Cb)()],S.prototype,"cursorPoint",void 0),(0,l._)([(0,c.Cb)()],S.prototype,"mode",void 0),(0,l._)([(0,c.Cb)()],S.prototype,"unit",null),(0,l._)([(0,c.Cb)(H.Y)],S.prototype,"_defaultUnit",void 0),S=(0,l._)([(0,K.j)("esri.views.3d.analysis.AreaMeasurementAnalysisView3D")],S);const It=S},40686:(T,_,i)=>{i.d(_,{X:()=>m,bT:()=>k,ln:()=>V,oN:()=>R});var l=i(62208),w=i(15572),h=i(16730),c=i(11915),I=i(84161),x=i(28093),K=i(55915),H=i(90014),ie=i(11544),N=i(66601);function R(d,E={positionsWorldCoords:[]}){return P(d,E)}function m(d,E={positionsWorldCoords:[]}){return P(d,E,!1)}function P(d,E,Z=d.hasZ){const Y=(0,N.m)(d.spatialReference),q=(0,h.oq)(Y);if((0,l.Wi)(q))return null;const fe=(ne,b)=>!(b.length<2||((0,I.s)(ne,b[0],b[1],Z&&b[2]||0),0));let ye=0;for(const ne of d.rings){const b=ne.length;if(b<3)continue;const{positionsWorldCoords:M}=E;for(;M.length<b;)M.push((0,x.c)());const ee=J,re=(0,I.s)(A,0,0,0),Te=1/b;for(let C=0;C<b;C++){if(!fe(ee,ne[C])||!(0,K.SH)(ee,d.spatialReference,M[C],Y))return null;(0,I.z)(re,re,M[C],Te)}const Le=(0,H.zk)(M[0],M[1],re,(0,H.re)());if(0===(0,I.p)((0,H.mJ)(Le)))continue;for(let C=0;C<b;C++)(0,H.tx)(Le,re,M[C],M[C]);const oe=k(M);for(let C=0;C<oe.length;C+=3)ye+=(0,ie.wu)(M[oe[C]],M[oe[C+1]],M[oe[C+2]])}return(0,w.ne)(ye,q)}const J=(0,x.c)(),A=(0,x.c)();function V(){return{positionsWorldCoords:[]}}function k(d){return(0,c.e)(function g(d){const E=new Float64Array(2*d.length);for(let Z=0;Z<d.length;++Z){const Y=d[Z],q=2*Z;E[q+0]=Y[0],E[q+1]=Y[1]}return E}(d),[],2)}},66601:(T,_,i)=>{i.d(_,{m:()=>h});var l=i(55915),w=i(81863);function h(c){const I=(0,w.rS)(c),x=I===w.GG?w.wY:I;return(0,l.Up)(c,x)?x:c}}}]);