"use strict";var D=Object.defineProperty,I=Object.defineProperties,w=Object.getOwnPropertyDescriptors,m=Object.getOwnPropertySymbols,E=Object.prototype.hasOwnProperty,N=Object.prototype.propertyIsEnumerable,g=(a,i,n)=>i in a?D(a,i,{enumerable:!0,configurable:!0,writable:!0,value:n}):a[i]=n,C=(a,i)=>{for(var n in i||(i={}))E.call(i,n)&&g(a,n,i[n]);if(m)for(var n of m(i))N.call(i,n)&&g(a,n,i[n]);return a},P=(a,i)=>I(a,w(i));(self.webpackChunkexample_app=self.webpackChunkexample_app||[]).push([[4287],{84287:(a,i,n)=>{n.r(i),n.d(i,{default:()=>S});var v=n(94573),G=n(62208),b=n(86236),M=n(65234),R=n(33696),p=n(38114),c=n(82054),T=n(36255);function x(o,t){return t}function d(o,t,e,r){switch(e){case 0:return l(o,t+r,0);case 1:return"lowerLeft"===o.originPosition?l(o,t+r,1):function F({translate:o,scale:t},e,r){return o[r]-e*t[r]}(o,t+r,1)}}function f(o,t,e,r){return 2===e?l(o,t,2):d(o,t,e,r)}function Z(o,t,e,r){return 2===e?l(o,t,3):d(o,t,e,r)}function A(o,t,e,r){return 3===e?l(o,t,3):f(o,t,e,r)}function l({translate:o,scale:t},e,r){return o[r]+e*t[r]}class B{constructor(t){this.options=t,this.geometryTypes=["point","multipoint","polyline","polygon"],this.previousCoordinate=[0,0],this.transform=null,this.applyTransform=x,this.lengths=[],this.currentLengthIndex=0,this.toAddInCurrentPath=0,this.vertexDimension=0,this.coordinateBuffer=null,this.coordinateBufferPtr=0,this._attributesConstructor=()=>{}}createFeatureResult(){return new p.Pj}finishFeatureResult(t){if(this.options.applyTransform&&(t.transform=null),this._attributesConstructor=()=>{},this.coordinateBuffer=null,this.lengths.length=0,!t.hasZ)return;const e=(0,R.k)(t.geometryType,this.options.sourceSpatialReference,t.spatialReference);if(!(0,G.Wi)(e))for(const r of t.features)e(r.geometry)}createSpatialReference(){return new M.Z}addField(t,e){t.fields.push(T.Z.fromJSON(e));const r=t.fields.map(s=>s.name);this._attributesConstructor=function(){for(const s of r)this[s]=null}}addFeature(t,e){const r=this.options.maxStringAttributeLength?this.options.maxStringAttributeLength:0;if(r>0)for(const s in e.attributes){const h=e.attributes[s];"string"==typeof h&&h.length>r&&(e.attributes[s]="")}t.features.push(e)}addQueryGeometry(t,e){const{queryGeometry:r,queryGeometryType:s}=e,h=(0,c.$g)(r.clone(),r,!1,!1,this.transform),y=(0,c.di)(h,s,!1,!1);let u=null;switch(s){case"esriGeometryPoint":u="point";break;case"esriGeometryPolygon":u="polygon";break;case"esriGeometryPolyline":u="polyline";break;case"esriGeometryMultipoint":u="multipoint"}y.type=u,t.queryGeometryType=s,t.queryGeometry=y}prepareFeatures(t){switch(this.transform=t.transform,this.options.applyTransform&&t.transform&&(this.applyTransform=this._deriveApplyTransform(t)),this.vertexDimension=2,t.hasZ&&this.vertexDimension++,t.hasM&&this.vertexDimension++,t.geometryType){case"point":this.addCoordinate=(e,r,s)=>this.addCoordinatePoint(e,r,s),this.createGeometry=e=>this.createPointGeometry(e);break;case"polygon":this.addCoordinate=(e,r,s)=>this._addCoordinatePolygon(e,r,s),this.createGeometry=e=>this._createPolygonGeometry(e);break;case"polyline":this.addCoordinate=(e,r,s)=>this._addCoordinatePolyline(e,r,s),this.createGeometry=e=>this._createPolylineGeometry(e);break;case"multipoint":this.addCoordinate=(e,r,s)=>this._addCoordinateMultipoint(e,r,s),this.createGeometry=e=>this._createMultipointGeometry(e);break;case"mesh":case"extent":break;default:(0,v.Bg)(t.geometryType)}}createFeature(){return this.lengths.length=0,this.currentLengthIndex=0,this.previousCoordinate[0]=0,this.previousCoordinate[1]=0,new p.Wh((0,b.D)(),null,new this._attributesConstructor)}allocateCoordinates(){const t=this.lengths.reduce((e,r)=>e+r,0);this.coordinateBuffer=new Float64Array(t*this.vertexDimension),this.coordinateBufferPtr=0}addLength(t,e,r){0===this.lengths.length&&(this.toAddInCurrentPath=e),this.lengths.push(e)}createPointGeometry(t){const e={type:"point",x:0,y:0,spatialReference:t.spatialReference,hasZ:!!t.hasZ,hasM:!!t.hasM};return e.hasZ&&(e.z=0),e.hasM&&(e.m=0),e}addCoordinatePoint(t,e,r){switch(e=this.applyTransform(this.transform,e,r,0),r){case 0:t.x=e;break;case 1:t.y=e;break;case 2:t.hasZ?t.z=e:t.m=e;break;case 3:t.m=e}}_transformPathLikeValue(t,e){let r=0;return e<=1&&(r=this.previousCoordinate[e],this.previousCoordinate[e]+=t),this.applyTransform(this.transform,t,e,r)}_addCoordinatePolyline(t,e,r){this._dehydratedAddPointsCoordinate(t.paths,e,r)}_addCoordinatePolygon(t,e,r){this._dehydratedAddPointsCoordinate(t.rings,e,r)}_addCoordinateMultipoint(t,e,r){0===r&&t.points.push([]);const s=this._transformPathLikeValue(e,r);t.points[t.points.length-1].push(s)}_createPolygonGeometry(t){return{type:"polygon",rings:[[]],spatialReference:t.spatialReference,hasZ:!!t.hasZ,hasM:!!t.hasM}}_createPolylineGeometry(t){return{type:"polyline",paths:[[]],spatialReference:t.spatialReference,hasZ:!!t.hasZ,hasM:!!t.hasM}}_createMultipointGeometry(t){return{type:"multipoint",points:[],spatialReference:t.spatialReference,hasZ:!!t.hasZ,hasM:!!t.hasM}}_dehydratedAddPointsCoordinate(t,e,r){0===r&&0==this.toAddInCurrentPath--&&(t.push([]),this.toAddInCurrentPath=this.lengths[++this.currentLengthIndex]-1,this.previousCoordinate[0]=0,this.previousCoordinate[1]=0);const s=this._transformPathLikeValue(e,r);0===r&&t[t.length-1].push(new Float64Array(this.coordinateBuffer.buffer,this.coordinateBufferPtr*Float64Array.BYTES_PER_ELEMENT,this.vertexDimension)),this.coordinateBuffer[this.coordinateBufferPtr++]=s}_deriveApplyTransform(t){const{hasZ:e,hasM:r}=t;return e&&r?A:e?f:r?Z:d}}var L=n(85262);class k{_parseFeatureQuery(t){const e=(0,L.C)(t.buffer,new B(t.options)),r=P(C({},e),{spatialReference:e.spatialReference.toJSON(),fields:e.fields?e.fields.map(s=>s.toJSON()):void 0});return Promise.resolve(r)}}function S(){return new k}}}]);