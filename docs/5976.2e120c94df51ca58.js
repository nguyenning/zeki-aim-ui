"use strict";var C=Object.defineProperty,N=Object.defineProperties,J=Object.getOwnPropertyDescriptors,d=Object.getOwnPropertySymbols,U=Object.prototype.hasOwnProperty,R=Object.prototype.propertyIsEnumerable,P=(a,o,s)=>o in a?C(a,o,{enumerable:!0,configurable:!0,writable:!0,value:s}):a[o]=s,p=(a,o)=>{for(var s in o||(o={}))U.call(o,s)&&P(a,s,o[s]);if(d)for(var s of d(o))R.call(o,s)&&P(a,s,o[s]);return a},D=(a,o)=>N(a,J(o));(self.webpackChunkexample_app=self.webpackChunkexample_app||[]).push([[5976],{15976:(a,o,s)=>{s.r(o),s.d(o,{default:()=>T});var l=s(15861),c=(s(29132),s(62208)),S=s(98346),_=s(25688),h=s(8614),m=s(79751),v=s(74829),u=s(28594),M=s(17057),O=s(30994),B=s(46572),x=s(99033),y=s(37084),f=s(2004);class T{convertVectorFieldData(t){const e=_.Z.fromJSON(t.pixelBlock),r=(0,O.KC)(e,t.type);return Promise.resolve((0,c.pC)(r)?r.toJSON():null)}decode(t){return(0,l.Z)(function*(){const e=yield(0,h.J)(t.data,t.options);return e&&e.toJSON()})()}symbolize(t){t.pixelBlock=_.Z.fromJSON(t.pixelBlock),t.extent=t.extent?f.Z.fromJSON(t.extent):null;const e=this.symbolizer.symbolize(t);return Promise.resolve((0,c.pC)(e)?e.toJSON():null)}updateSymbolizer(t){var e=this;return(0,l.Z)(function*(){var r;e.symbolizer=x.Z.fromJSON(t.symbolizerJSON),t.histograms&&"rasterStretch"===(null==(r=e.symbolizer)?void 0:r.rendererJSON.type)&&(e.symbolizer.rendererJSON.histograms=t.histograms)})()}updateRasterFunction(t){var e=this;return(0,l.Z)(function*(){e.rasterFunction=(0,v.Ue)(t.rasterFunctionJSON)})()}process(t){var e=this;return(0,l.Z)(function*(){const r=e.rasterFunction.process({extent:f.Z.fromJSON(t.extent),primaryPixelBlocks:t.primaryPixelBlocks.map(n=>(0,c.pC)(n)?_.Z.fromJSON(n):null),primaryRasterIds:t.primaryRasterIds});return(0,c.pC)(r)?r.toJSON():null})()}stretch(t){const e=this.symbolizer.simpleStretch(_.Z.fromJSON(t.srcPixelBlock),t.stretchParams);return Promise.resolve((0,c.pC)(e)&&e.toJSON())}estimateStatisticsHistograms(t){const e=(0,M.Hv)(_.Z.fromJSON(t.srcPixelBlock));return Promise.resolve(e)}split(t){const e=(0,m.Vl)(_.Z.fromJSON(t.srcPixelBlock),t.tileSize,t.maximumPyramidLevel);return e&&e.forEach((r,n)=>{e.set(n,null==r?void 0:r.toJSON())}),Promise.resolve(e)}mosaicAndTransform(t){return(0,l.Z)(function*(){const e=t.srcPixelBlocks.map(E=>E?new _.Z(E):null),r=(0,m.us)(e,t.srcMosaicSize,{blockWidths:t.blockWidths,alignmentInfo:t.alignmentInfo,clipOffset:t.clipOffset,clipSize:t.clipSize});let n,i=r;return t.coefs&&(i=(0,m.Uk)(r,t.destDimension,t.coefs,t.sampleSpacing,t.interpolation)),t.projectDirections&&t.gcsGrid&&(n=(0,m.Qh)(t.destDimension,t.gcsGrid),i=(0,c.Wg)((0,O.xQ)(i,t.isUV?"vector-uv":"vector-magdir",n))),{pixelBlock:null==i?void 0:i.toJSON(),localNorthDirections:n}})()}createFlowMesh(t,e){return(0,l.Z)(function*(){const r={data:new Float32Array(t.flowData.buffer),mask:new Uint8Array(t.flowData.maskBuffer),width:t.flowData.width,height:t.flowData.height},{vertexData:n,indexData:i}=yield(0,y.GE)(t.meshType,t.simulationSettings,r,e.signal);return{result:{vertexBuffer:n.buffer,indexBuffer:i.buffer},transferList:[n.buffer,i.buffer]}})()}getProjectionOffsetGrid(t){return(0,l.Z)(function*(){const e=f.Z.fromJSON(t.projectedExtent),r=f.Z.fromJSON(t.srcBufferExtent);let n=null;t.datumTransformationSteps&&(n=new S.Z({steps:t.datumTransformationSteps})),(t.includeGCSGrid||(0,u.Mk)(e.spatialReference,r.spatialReference,n))&&(yield(0,u.zD)());const i=t.rasterTransform?(0,B.c)(t.rasterTransform):null;return(0,u.Qp)(D(p({},t),{projectedExtent:e,srcBufferExtent:r,datumTransformation:n,rasterTransform:i}))})()}}}}]);