"use strict";var yr=Object.defineProperty,gr=Object.defineProperties,xr=Object.getOwnPropertyDescriptors,It=Object.getOwnPropertySymbols,Ir=Object.prototype.hasOwnProperty,vr=Object.prototype.propertyIsEnumerable,vt=(oe,Q,w)=>Q in oe?yr(oe,Q,{enumerable:!0,configurable:!0,writable:!0,value:w}):oe[Q]=w,W=(oe,Q)=>{for(var w in Q||(Q={}))Ir.call(Q,w)&&vt(oe,w,Q[w]);if(It)for(var w of It(Q))vr.call(Q,w)&&vt(oe,w,Q[w]);return oe},V=(oe,Q)=>gr(oe,xr(Q));(self.webpackChunkexample_app=self.webpackChunkexample_app||[]).push([[6329],{86329:(oe,Q,w)=>{w.r(Q),w.d(Q,{default:()=>hr});var Z=w(15861),F=w(17626),bt=w(73281),ze=w(90885),L=w(26584),je=w(63290),T=w(62208),Rt=w(99959),we=w(10699),St=w(32917),M=w(77712),Ge=w(90912),Ct=(w(85931),w(55342)),Tt=w(68653),le=w(76898),wt=w(44917),Ft=w(65088),Pt=w(552),Mt=w(50107),nt=(w(29132),w(84792)),kt=w(37053),it=w(38305),$e=w(13812),st=w(25982),Ot=w(11354),Ve=w(40495),Bt=w(9548),Fe=w(2584),Dt=w(86810),Zt=w(60330),at=w(72258),Pe=w(27497),se=w(79781),$=w(28594),q=w(72642);const ce=new Map,me=new class zt{constructor(t=15e3,c=5e3){this._timer=null,this._cachedBlocks=new Map,this._size=-1,this._duration=t,this._interval=Math.min(t,c)}decreaseRefCount(t,c){const i=t+"/"+c,a=this._cachedBlocks;if(a.has(i)){const u=a.get(i);return u.refCount--,u.refCount<=0&&(a.delete(i),u.controller&&u.controller.abort()),u.refCount}return 0}getBlock(t,c){const i=t+"/"+c,a=this._cachedBlocks;if(a.has(i)){const u=a.get(i);return u.ts=Date.now(),u.refCount++,a.delete(i),a.set(i,u),u.block}return null}putBlock(t,c,i,a){const u=this._cachedBlocks,f=t+"/"+c;if(u.has(f)){const m=u.get(f);m.ts=Date.now(),m.refCount++}else u.set(f,{block:i,ts:Date.now(),refCount:1,controller:a});this._trim(),this._updateTimer()}deleteBlock(t,c){const i=this._cachedBlocks,a=t+"/"+c;i.has(a)&&i.delete(a)}updateMaxSize(t){this._size=t,this._trim()}empty(){this._cachedBlocks.clear(),this._clearTimer()}getCurrentSize(){return this._cachedBlocks.size}_updateTimer(){if(null!=this._timer)return;const t=this._cachedBlocks;this._timer=setInterval(()=>{const c=Array.from(t),i=Date.now();for(let a=0;a<c.length&&c[a][1].ts<=i-this._duration;a++)t.delete(c[a][0]);0===t.size&&this._clearTimer()},this._interval)}_trim(){const t=this._cachedBlocks;if(-1===this._size||this._size>=t.size)return;const c=Array.from(t);for(let i=0;i<c.length-this._size;i++)t.delete(c[i][0])}_clearTimer(){null!=this._timer&&(clearInterval(this._timer),this._timer=null)}};function ot(s,t){return null==t?s:`${s}?sliceId=${t}`}function lt(s,t,c){var u,f,m;const i=ce.get(s);if(!i)return null==t?me.getBlock(s,c):null;if(null==t||null==i[t]){for(let d=0;d<i.length;d++){const p=null==(u=i[d])?void 0:u.cache.get(c);if(p)return p.refCount++,p.block}return me.getBlock(s,c)}const a=null==(f=i[t])?void 0:f.cache.get(c);if(a)return a.refCount++,a.block;for(let d=0;d<i.length;d++){if(d===t||!i[d])continue;const p=null==(m=i[d])?void 0:m.cache,h=null==p?void 0:p.get(c);if(p&&h)return h.refCount++,p.set(c,h),h.block}return null}function ct(s,t,c,i,a=null){var m;const u=ce.get(s);if(!u)return void(null==t&&me.putBlock(s,c,i,a));if(null==t||null==u[t])return void me.putBlock(s,c,i,a);const f={refCount:1,block:i,isResolved:!1,isRejected:!1,controller:a};i.then(()=>f.isResolved=!0).catch(()=>f.isRejected=!0),null==(m=u[t])||m.cache.set(c,f)}var Jt=w(67313),ut=w(8614),ye=w(79751),Ye=w(30994),re=w(2004);let ne=class extends((0,Zt.v)(Dt.wq)){constructor(){super(...arguments),this.rasterJobHandler=null,this.datasetName=null,this.datasetFormat=null,this.hasUniqueSourceStorageInfo=!0,this.rasterInfo=null,this.ioConfig={sampling:"closest"}}init(){var s=this;return(0,Z.Z)(function*(){const t=(0,$.zD)();s.addResolvingPromise(t),yield s.when()})()}normalizeCtorArgs(s){return s&&s.ioConfig&&(s=V(W({},s),{ioConfig:W({resolution:null,bandIds:null,sampling:"closest",tileInfo:Fe.Z.create()},s.ioConfig)})),s}get _isGlobalWrappableSource(){const{rasterInfo:s}=this,t=(0,$.ut)(s.spatialReference);return(0,T.pC)(t)&&s.extent.width>=t/2}set url(s){this._set("url",(0,it.Nm)(s,je.Z.getLogger(this.declaredClass)))}open(s){return(0,Z.Z)(function*(){throw new L.Z("BaseRaster:open-not-implemented","open() is not implemented")})()}fetchTile(s,t,c,i={}){var a=this;return(0,Z.Z)(function*(){const u=i.tileInfo||a.rasterInfo.storageInfo.tileInfo,f=a.getTileExtentFromTileInfo(s,t,c,u);return a.fetchPixels(f,u.size[0],u.size[1],i)})()}identify(s,t={}){var c=this;return(0,Z.Z)(function*(){var J,N;s=(0,Ge.TJ)(q.Z,s).clone().normalize();const{multidimensionalDefinition:i,timeExtent:a}=t,{rasterInfo:u}=c,{hasMultidimensionalTranspose:f,multidimensionalInfo:m}=u;let{transposedVariableName:d}=t;const p=(0,T.pC)(m)&&f&&(null!=a||(0,se.WU)(i));p&&!d&&(d=(0,T.pC)(i)&&i.length>0?null!=(J=i[0].variableName)?J:void 0:m.variables[0].name,t=V(W({},t),{transposedVariableName:d})),t=c._getRequestOptionsWithSliceId(t);const{spatialReference:h,extent:I}=u,{datumTransformation:y}=t;let x=(0,$.nF)(s,h,y);if(!I.intersects(x))return{location:x,value:null};if((0,T.pC)(u.transform)){const A=u.transform.inverseTransform(x);if(!u.nativeExtent.intersects(A))return{location:A,value:null};x=A}let v=0;const b=(0,T.pC)(d)&&(0,T.pC)(m)&&u.hasMultidimensionalTranspose;if("Function"===c.datasetFormat){const A=c.primaryRasters.rasters[0];if(b)return A.identify(x,t);const{pixelSize:j}=u,_=3,X=j.x*_/2,Y=j.y*_/2,K=new re.Z({xmin:x.x-X,xmax:x.x+X,ymin:x.y-Y,ymax:x.y+Y,spatialReference:h}),U={interpolation:"nearest"},{pixelBlock:fe}=yield A.fetchPixels(K,_,_,U),{pixelBlock:de}=yield c.fetchPixels(K,_,_,U);if((0,T.Wi)(fe))return{location:x,value:null};const Se=Math.floor(_*_*.5),_e=!fe.mask||fe.mask[Se]?fe.pixels.map(rt=>rt[Se]):null;let Ue;return(0,T.pC)(de)&&(Ue=!de.mask||de.mask[Se]?de.pixels.map(rt=>rt[Se]):void 0),{location:x,value:_e,processedValue:Ue,pyramidLevel:0}}if(!b)if(t.srcResolution)v=(0,$.kr)(t.srcResolution,u,c.ioConfig.sampling).pyramidLevel;else if(v=yield c.computeBestPyramidLevelForLocation(s,t),null==v)return{location:x,value:null};const R=c.identifyPixelLocation(x,v,null,b);if(null===R)return{location:x,value:null};const{row:g,col:S,rowOffset:C,colOffset:D,blockWidth:O}=R,E=null!=d?d:(0,T.Wg)(t.sliceId),k=ot(c.url,E),B=`${v}/${g}/${S}`;let H=lt(k,null,B);(0,T.Wi)(H)&&(H=c.fetchRawTile(v,g,S,t),ct(k,null,B,H));const P=yield H;return(0,T.Wi)(P)||null==(N=P.pixels)||!N.length?{location:x,value:null}:c._processIdentifyResult(P,{srcLocation:x,position:C*O+D,pyramidLevel:v,useTransposedTile:!!b,requestSomeSlices:p,identifyOptions:t})})()}fetchPixels(s,t,c,i={}){var a=this;return(0,Z.Z)(function*(){if(s=(0,$.kZ)(s),(i=a._getRequestOptionsWithSliceId(i)).requestRawData)return a._fetchPixels(s,t,c,i);const u=(0,$.ut)(s.spatialReference),f=(0,$.Hq)(s);if((0,T.Wi)(u)||0===f||1===f&&a._isGlobalWrappableSource)return a._fetchPixels(s,t,c,i);if(f>=3)return{extent:s,pixelBlock:null};const m=[],{xmin:d,xmax:p}=s,h=Math.round(u/(p-d)*t),I=h-Math.round((u/2-d)/(p-d)*t);let y=0;const x=[];for(let g=0;g<=f;g++){const S=new re.Z({xmin:0===g?d:-u/2,xmax:g===f?p-u*g:u/2,ymin:s.ymin,ymax:s.ymax,spatialReference:s.spatialReference}),C=0===g?h-I:g===f?t-y:h;y+=C,x.push(C);const D=i.disableWrapAround&&g>0?null:a._fetchPixels(S,C,c,i);m.push(D)}const v=(yield Promise.all(m)).map(g=>null==g?void 0:g.pixelBlock);let b=null;const R={width:t,height:c};return b=a.rasterJobHandler?(yield a.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:v,srcMosaicSize:R,destDimension:null,coefs:null,sampleSpacing:null,interpolation:"nearest",alignmentInfo:null,blockWidths:x},i)).pixelBlock:(0,ye.us)(v,R,{blockWidths:x}),{extent:s,srcExtent:(0,$.tB)(s,a.rasterInfo.spatialReference,i.datumTransformation),pixelBlock:b}})()}fetchRawPixels(s,t,c,i={}){var a=this;return(0,Z.Z)(function*(){t={x:Math.floor(t.x),y:Math.floor(t.y)};const u=yield a._fetchRawTiles(s,t,c,i),{nativeExtent:f,nativePixelSize:m,storageInfo:d}=a.rasterInfo,p=2**s,h=m.x*p,I=m.y*p,y=new re.Z({xmin:f.xmin+h*t.x,xmax:f.xmin+h*(t.x+c.width-1),ymin:f.ymax-I*(t.y+c.height-1),ymax:f.ymax-I*t.y,spatialReference:f.spatialReference});if(!u)return{extent:y,srcExtent:y,pixelBlock:null};const{pixelBlocks:x,mosaicSize:v}=u;if(1===x.length&&(0,T.pC)(x[0])&&x[0].width===c.width&&x[0].height===c.height)return{extent:y,srcExtent:y,pixelBlock:u.pixelBlocks[0]};const g={x:t.x%(s>0?d.pyramidBlockWidth:d.blockWidth),y:t.y%(s>0?d.pyramidBlockHeight:d.blockHeight)};let S;return S=a.rasterJobHandler?(yield a.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:x,srcMosaicSize:v,destDimension:c,clipOffset:g,clipSize:c,coefs:null,sampleSpacing:null,interpolation:i.interpolation,alignmentInfo:null,blockWidths:null},i)).pixelBlock:(0,ye.us)(x,v,{clipOffset:g,clipSize:c}),{extent:y,srcExtent:y,pixelBlock:S}})()}fetchRawTile(s,t,c,i){throw new L.Z("BaseRaster:read-not-implemented","fetchRawTile() is not implemented")}computeExtent(s){return(0,$.tB)(this.rasterInfo.extent,s)}decodePixelBlock(s,t){return!this.rasterJobHandler||t.useCanvas?(0,ut.J)(s,t):this.rasterJobHandler.decode({data:s,options:t})}request(s,t,c=0){var i=this;return(0,Z.Z)(function*(){var p;const{customFetchParameters:a}=i.ioConfig,{range:u,query:f,headers:m}=t;c=null!=(p=null!=c?c:t.retryCount)?p:i.ioConfig.retryCount;const d=u?{Range:`bytes=${u.from}-${u.to}`}:null;try{return yield(0,nt.default)(s,V(W({},t),{query:W(W({},f),a),headers:W(W({},m),d)}))}catch(h){if(c>0)return c--,i.request(s,t,c);throw h}})()}getSliceIndex(s){const{multidimensionalInfo:t}=this.rasterInfo;return(0,T.Wi)(t)||(0,T.Wi)(s)||0===s.length?null:(0,se.gk)(s,t)}getTileExtentFromTileInfo(s,t,c,i){const a=(0,T.s3)(i.lodAt(s));return this.getTileExtent({x:a.resolution,y:a.resolution},t,c,i.origin,i.spatialReference,i.size)}updateTileInfo(){const{storageInfo:s,spatialReference:t,extent:c,pixelSize:i}=this.rasterInfo;if(!s.tileInfo){const a=[],u=s.maximumPyramidLevel||0;let f=Math.max(i.x,i.y),m=1/.0254*96*f;for(let p=0;p<=u;p++)a.push(new at.Z({level:u-p,resolution:f,scale:m})),f*=2,m*=2;const d=new q.Z({x:c.xmin,y:c.ymax,spatialReference:t});s.tileInfo=new Fe.Z({origin:d,size:[s.blockWidth,s.blockHeight],spatialReference:t,lods:a}),s.isVirtualTileInfo=!0}}createRemoteDatasetStorageInfo(s,t=512,c=512,i){const{width:a,height:u,nativeExtent:f,pixelSize:m,spatialReference:d}=s,p=new q.Z({x:f.xmin,y:f.ymax,spatialReference:d});null==i&&(i=Math.max(0,Math.round(Math.log(Math.max(a,u))/Math.LN2-8)));const h=this.computeBlockBoundary(f,512,512,{x:f.xmin,y:f.ymax},[m],i);s.storageInfo=new Pe.Z({blockWidth:t,blockHeight:c,pyramidBlockWidth:t,pyramidBlockHeight:c,origin:p,firstPyramidLevel:1,maximumPyramidLevel:i,blockBoundary:h})}computeBestPyramidLevelForLocation(s,t={}){return(0,Z.Z)(function*(){return 0})()}computeBlockBoundary(s,t,c,i,a,u=0,f=2){if(1===a.length&&u>0){a=[...a];let{x:h,y:I}=a[0];for(let y=0;y<u;y++)h*=f,I*=f,a.push({x:h,y:I})}const m=[],{x:d,y:p}=i;for(let h=0;h<a.length;h++){const{x:I,y}=a[h];m.push({minCol:Math.floor((s.xmin-d+.1*I)/t/I),maxCol:Math.floor((s.xmax-d-.1*I)/t/I),minRow:Math.floor((p-s.ymax+.1*y)/c/y),maxRow:Math.floor((p-s.ymin-.1*y)/c/y)})}return m}getPyramidPixelSize(s){const{nativePixelSize:t}=this.rasterInfo,{pyramidResolutions:c,pyramidScalingFactor:i}=this.rasterInfo.storageInfo;if(0===s)return t;if((0,T.pC)(c)&&c.length)return c[s-1];const a=i**s;return{x:t.x*a,y:t.y*a}}identifyPixelLocation(s,t,c,i){const{spatialReference:a,nativeExtent:u,storageInfo:f}=this.rasterInfo,{maximumPyramidLevel:m,origin:d,transposeInfo:p}=f,h=i&&(0,T.pC)(p)?p.tileSize[0]:f.blockWidth,I=i&&(0,T.pC)(p)?p.tileSize[1]:f.blockHeight,y=(0,$.nF)(s,a,c);if(!u.intersects(y)||t<0||t>m)return null;const x=this.getPyramidPixelSize(t),{x:v,y:b}=x,R=(d.y-y.y)/b/I,g=(y.x-d.x)/v/h,S=Math.min(I-1,Math.floor((R-Math.floor(R))*I)),C=Math.min(h-1,Math.floor((g-Math.floor(g))*h));return{pyramidLevel:t,row:Math.floor(R),col:Math.floor(g),rowOffset:S,colOffset:C,blockWidth:h,srcLocation:y}}getTileExtent(s,t,c,i,a,u){const[f,m]=u,d=i.x+c*f*s.x,h=i.y-t*m*s.y;return new re.Z({xmin:d,xmax:d+f*s.x,ymin:h-m*s.y,ymax:h,spatialReference:a})}getBlockWidthHeight(s){return{blockWidth:s>0?this.rasterInfo.storageInfo.pyramidBlockWidth:this.rasterInfo.storageInfo.blockWidth,blockHeight:s>0?this.rasterInfo.storageInfo.pyramidBlockHeight:this.rasterInfo.storageInfo.blockHeight}}isBlockOutside(s,t,c){const i=this.rasterInfo.storageInfo.blockBoundary[s];return!i||i.maxRow<t||i.maxCol<c||i.minRow>t||i.minCol>c}_fetchPixels(s,t,c,i={}){var a=this;return(0,Z.Z)(function*(){let u=(0,$.Hq)(s);if(u>=2)return{extent:s,pixelBlock:null};const f=a._getSourceDataInfo(s,t,c,i),{pyramidLevel:m,pyramidResolution:d,srcResolution:p,srcExtent:h,srcWidth:I,srcHeight:y}=f;if(0===I||0===y)return{extent:s,srcExtent:h,pixelBlock:null};const x=(0,T.Wg)(a.rasterInfo.transform),v="gcs-shift"===(null==x?void 0:x.type),b=(0,T.pC)((0,$.ut)(s.spatialReference));!v&&b||(u=(0,$.Hq)(f.srcExtent,v));const R=a.rasterInfo.storageInfo,g={x:Math.floor((h.xmin-R.origin.x)/d.x+.1),y:Math.floor((R.origin.y-h.ymax)/d.y+.1)},S=yield a._fetchRawTiles(m,g,{width:I,height:y,wrapCount:u},i);if(!S)return{extent:s,srcExtent:h,pixelBlock:null};const C=m>0?R.pyramidBlockWidth:R.blockWidth,D=m>0?R.pyramidBlockHeight:R.blockHeight,O=C===I&&D===y&&g.x%C==0&&g.y%D==0,E=new q.Z({x:(s.xmax-s.xmin)/t,y:(s.ymax-s.ymin)/c,spatialReference:s.spatialReference}),k=!s.spatialReference.equals(a.rasterInfo.spatialReference),{datumTransformation:B}=i;if(!k&&O&&1===S.pixelBlocks.length&&C===t&&D===c&&p.x===E.x&&p.y===E.y)return{extent:s,srcExtent:h,pixelBlock:S.pixelBlocks[0]};const H=b&&(0,T.pC)((0,$.ut)(h.spatialReference)),P=i.requestProjectedLocalDirections&&a.rasterInfo.dataType.startsWith("vector");P&&!a.rasterJobHandler&&(yield(0,$.zD)());const z=a.rasterJobHandler?yield a.rasterJobHandler.getProjectionOffsetGrid({projectedExtent:s,srcBufferExtent:S.extent,pixelSize:E.toJSON(),datumTransformation:B,rasterTransform:x,hasWrapAround:u>0||H,isAdaptive:!1!==a.ioConfig.optimizeProjectionAccuracy,includeGCSGrid:P},i):(0,$.Qp)({projectedExtent:s,srcBufferExtent:S.extent,pixelSize:E,datumTransformation:B,rasterTransform:x,hasWrapAround:u>0||H,isAdaptive:!1,includeGCSGrid:P});let J;const N=!i.requestRawData,A={rows:z.spacing[0],cols:z.spacing[1]},j=(0,T.Wg)(a._getRasterTileAlignmentInfo(m,S.extent.xmin)),{pixelBlocks:_,mosaicSize:X,isPartiallyFilled:Y}=S;let K=null;if(a.rasterJobHandler)({pixelBlock:J,localNorthDirections:K}=yield a.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:_,srcMosaicSize:X,destDimension:N?{width:t,height:c}:null,coefs:N?z.coefficients:null,sampleSpacing:N?A:null,projectDirections:P,gcsGrid:P?z.gcsGrid:null,isUV:"vector-uv"===a.rasterInfo.dataType,interpolation:i.interpolation,alignmentInfo:j,blockWidths:null},i));else{const U=(0,ye.us)(_,X,{alignmentInfo:j});J=N?(0,ye.Uk)(U,{width:t,height:c},z.coefficients,A,i.interpolation):U,P&&z.gcsGrid&&(K=(0,ye.Qh)({width:t,height:c},z.gcsGrid),J=(0,Ye.xQ)(J,a.rasterInfo.dataType,K))}return i.requestRawData||P?{srcExtent:h,pixelBlock:J,transformGrid:z,localNorthDirections:K,extent:s,isPartiallyFilled:Y}:{srcExtent:h,extent:s,pixelBlock:J}})()}_fetchRawTiles(s,t,c,i){var a=this;return(0,Z.Z)(function*(){const{origin:u,blockBoundary:f}=a.rasterInfo.storageInfo,{blockWidth:m,blockHeight:d}=a.getBlockWidthHeight(s);let{x:p,y:h}=t,{width:I,height:y,wrapCount:x}=c;const v=a._getRasterTileAlignmentInfo(s,0);i.buffer&&(p-=i.buffer.cols,h-=i.buffer.rows,I+=2*i.buffer.cols,y+=2*i.buffer.rows);let b=0,R=0,g=0;x&&(0,T.pC)(v)&&(({worldColumnCountFromOrigin:R,originColumnOffset:g,rightPadding:b}=v),R*v.blockWidth-b>=p+I&&(b=0));const S=Math.floor(p/m),C=Math.floor(h/d),D=Math.floor((p+I+b-1)/m),O=Math.floor((h+y+b-1)/d),E=f[s];if(!E)return null;const{minRow:k,minCol:B,maxCol:H,maxRow:P}=E;if(0===x&&(O<k||D<B||C>P||S>H))return null;const z=new Array;let J=!1;const N=null==a.ioConfig.allowPartialFill?i.allowPartialFill:a.ioConfig.allowPartialFill;for(let U=C;U<=O;U++)for(let fe=S;fe<=D;fe++){let de=fe;if(!i.disableWrapAround&&x&&(0,T.pC)(v)&&R<=fe&&(de=fe-R-g),U>=k&&de>=B&&P>=U&&H>=de){const Se=a._fetchRawTile(s,U,de,i);z.push(N?new Promise(_e=>{Se.then(Ue=>_e(Ue)).catch(()=>{J=!0,_e(null)})}):Se)}else z.push(Promise.resolve(null))}if(0===z.length)return null;const A=yield Promise.all(z),j={height:(O-C+1)*d,width:(D-S+1)*m},{spatialReference:_}=a.rasterInfo,X=a.getPyramidPixelSize(s),{x:Y,y:K}=X;return{extent:new re.Z({xmin:u.x+S*m*Y,xmax:u.x+(D+1)*m*Y,ymin:u.y-(O+1)*d*K,ymax:u.y-C*d*K,spatialReference:_}),pixelBlocks:A,mosaicSize:j,isPartiallyFilled:J}})()}_fetchRawTile(s,t,c,i){const a=this.rasterInfo.storageInfo.blockBoundary[s];if(!a)return Promise.resolve(null);const{minRow:u,minCol:f,maxCol:m,maxRow:d}=a;if(t<u||c<f||t>d||c>m)return Promise.resolve(null);const p=ot(this.url,i.sliceId),h=`${s}/${t}/${c}`;let I=lt(p,i.registryId,h);if((0,T.Wi)(I)){const y=new AbortController;I=this.fetchRawTile(s,t,c,V(W({},i),{signal:y.signal})),ct(p,i.registryId,h,I,y),I.catch(()=>function Ht(s,t,c){var a;const i=ce.get(s);i?null!=t&&null!=i[t]?null==(a=i[t])||a.cache.delete(c):me.deleteBlock(s,c):null==t&&me.deleteBlock(s,c)}(p,i.registryId,h))}return i.signal&&(0,we.fu)(i,()=>{!function Et(s,t,c){var f,m;const i=ce.get(s);if(!i)return null==t?me.decreaseRefCount(s,c):0;if(null==t||null==i[t])return me.decreaseRefCount(s,c);const a=null==(f=i[t])?void 0:f.cache,u=null==a?void 0:a.get(c);if(a&&u){if(u.refCount--,0===u.refCount){a.delete(c);for(let d=0;d<i.length;d++)null==(m=i[d])||m.cache.delete(c);u.controller&&u.controller.abort()}return u.refCount}}(p,i.registryId,h)}),I}_computeMagDirValues(s){var d;const{bandCount:t,dataType:c}=this.rasterInfo;if((2!==t||"vector-magdir"!==c)&&"vector-uv"!==c||2!==(null==s?void 0:s.length)||null==(d=s[0])||!d.length)return null;const i=s[0].length;if("vector-magdir"===c){const p=s[1].map(h=>(h+360)%360);return[s[0],p]}const[a,u]=s,f=[],m=[];for(let p=0;p<i;p++){const[h,I]=(0,Ye.Tg)([a[p],u[p]]);f.push(h),m.push(I)}return[f,m]}_getRasterTileAlignmentInfo(s,t){return null==this._rasterTileAlighmentInfo&&(this._rasterTileAlighmentInfo=(0,$.P_)(this.rasterInfo)),(0,T.Wi)(this._rasterTileAlighmentInfo.pyramidsInfo)?null:W({startX:t,halfWorldWidth:this._rasterTileAlighmentInfo.halfWorldWidth,hasGCSSShiftTransform:this._rasterTileAlighmentInfo.hasGCSSShiftTransform},this._rasterTileAlighmentInfo.pyramidsInfo[s])}_getSourceDataInfo(s,t,c,i={}){const a={datumTransformation:i.datumTransformation,pyramidLevel:0,pyramidResolution:null,srcExtent:null,srcHeight:0,srcResolution:null,srcWidth:0};i.srcResolution&&(a.srcResolution=i.srcResolution,this._updateSourceDataInfo(s,a));const u=this.rasterInfo.storageInfo.maximumPyramidLevel||0,{srcWidth:f,srcHeight:m,pyramidLevel:d}=a,p=f/t,h=m/c,I=d<u&&p*h>=16,y=d===u&&this._requireTooManySrcTiles(f,m,t,c);if(I||y||0===f||0===m){const x=new q.Z({x:(s.xmax-s.xmin)/t,y:(s.ymax-s.ymin)/c,spatialReference:s.spatialReference});let v=(0,$.VO)(x,this.rasterInfo.spatialReference,s,a.datumTransformation);const b=!v||i.srcResolution&&v.x+v.y<i.srcResolution.x+i.srcResolution.y;if(I&&i.srcResolution&&b){const R=Math.round(Math.log(Math.max(p,h))/Math.LN2)-1;if(u-d+3>=R){const g=2**R;v={x:i.srcResolution.x*g,y:i.srcResolution.y*g}}}v&&(a.srcResolution=v,this._updateSourceDataInfo(s,a))}return this._requireTooManySrcTiles(a.srcWidth,a.srcHeight,t,c)&&(a.srcWidth=0,a.srcHeight=0),a}_requireTooManySrcTiles(s,t,c,i){const{tileInfo:a}=this.rasterInfo.storageInfo;return Math.ceil(s/a.size[0])*Math.ceil(t/a.size[1])>=256||s/c>8||t/i>8}_updateSourceDataInfo(s,t){t.srcWidth=0,t.srcHeight=0;const c=this.rasterInfo.spatialReference,{srcResolution:i,datumTransformation:a}=t,{pyramidLevel:u,pyramidResolution:f,excessiveReading:m}=(0,$.kr)(i,this.rasterInfo,this.ioConfig.sampling);if(m)return;let d=t.srcExtent||(0,$.tB)(s,c,a);if(null==d)return;const p=(0,T.Wg)(this.rasterInfo.transform);p&&(d=p.inverseTransform(d)),t.srcExtent=d;const h=Math.ceil((d.xmax-d.xmin)/f.x-.1),I=Math.ceil((d.ymax-d.ymin)/f.y-.1);t.pyramidLevel=u,t.pyramidResolution=f,t.srcWidth=h,t.srcHeight=I}_getRequestOptionsWithSliceId(s){return(0,T.pC)(this.rasterInfo.multidimensionalInfo)&&null==s.sliceId&&(s=V(W({},s),{sliceId:this.getSliceIndex(s.multidimensionalDefinition)})),s}_processIdentifyResult(s,t){const{srcLocation:c,position:i,pyramidLevel:a,useTransposedTile:u}=t,f=s.pixels[0].length/s.width/s.height;if(s.mask&&!s.mask[i])return{location:c,value:null};const{multidimensionalInfo:m}=this.rasterInfo;if((0,T.Wi)(m)||!u){const R=s.pixels.map(C=>C[i]),g={location:c,value:R,pyramidLevel:a},S=this._computeMagDirValues(R.map(C=>[C]));return null!=S&&S.length&&(g.magdirValue=S.map(C=>C[0])),g}let d=s.pixels.map(R=>R.slice(i*f,i*f+f)),p=this._computeMagDirValues(d);const{requestSomeSlices:h,identifyOptions:I}=t;let y=(0,se.MO)(m,I.transposedVariableName);if(h){const R=(0,se.Ur)(y,(0,T.Wg)(I.multidimensionalDefinition),(0,T.Wg)(I.timeExtent));d=d.map(g=>R.map(S=>g[S])),p=null==p?void 0:p.map(g=>R.map(S=>g[S])),y=R.map(g=>y[g])}const x=s.noDataValues||this.rasterInfo.noDataValue,v={pixels:d,pixelType:s.pixelType};let b;return(0,T.pC)(x)&&((0,Jt.A)(v,x),b=v.mask),{location:c,value:null,dataSeries:y.map((R,g)=>{const S={value:0===(null==b?void 0:b[g])?null:d.map(C=>C[g]),multidimensionalDefinition:R.multidimensionalDefinition.map(C=>new st.Z(V(W({},C),{isSlice:!0})))};return null!=p&&p.length&&(S.magdirValue=[p[0][g],p[1][g]]),S}),pyramidLevel:a}}};(0,F._)([(0,M.Cb)()],ne.prototype,"_rasterTileAlighmentInfo",void 0),(0,F._)([(0,M.Cb)({readOnly:!0})],ne.prototype,"_isGlobalWrappableSource",null),(0,F._)([(0,M.Cb)($e.HQ)],ne.prototype,"url",null),(0,F._)([(0,M.Cb)({type:String,json:{write:!0}})],ne.prototype,"datasetName",void 0),(0,F._)([(0,M.Cb)({type:String,json:{write:!0}})],ne.prototype,"datasetFormat",void 0),(0,F._)([(0,M.Cb)()],ne.prototype,"hasUniqueSourceStorageInfo",void 0),(0,F._)([(0,M.Cb)()],ne.prototype,"rasterInfo",void 0),(0,F._)([(0,M.Cb)()],ne.prototype,"ioConfig",void 0),(0,F._)([(0,M.Cb)()],ne.prototype,"sourceJSON",void 0),ne=(0,F._)([(0,le.j)("esri.layers.support.rasterDatasets.BaseRaster")],ne);const ge=ne;let xe=class extends ge{constructor(){super(...arguments),this.datasetFormat="Function",this.tileType="Raster",this.rasterFunction=null}open(s){var t=this;return(0,Z.Z)(function*(){var p,h,I;yield t.init();const{rasterFunction:c}=t;null!=(h=null==(p=t.primaryRasters)?void 0:p.rasters)&&h.length?c.sourceRasters=t.primaryRasters.rasters:t.primaryRasters=c.getPrimaryRasters();const{rasters:i,rasterIds:a}=t.primaryRasters,u=i.map(y=>y.rasterInfo?void 0:y.open(s));yield Promise.all(u);const f=i.map(({rasterInfo:y})=>y),m=c.bind({rasterInfos:f,rasterIds:a});if(!m.success||0===f.length)throw new L.Z("raster-function:open",`cannot bind the function: ${null!=(I=m.error)?I:""}`);yield t.syncJobHandler();const d=f[0];t.hasUniqueSourceStorageInfo=1===f.length||f.slice(1).every(y=>t._hasSameStorageInfo(y,d)),t.set("sourceJSON",i[0].sourceJSON),t.set("rasterInfo",c.rasterInfo)})()}syncJobHandler(){var s=this;return(0,Z.Z)(function*(){var t;return null==(t=s.rasterJobHandler)?void 0:t.updateRasterFunction(s.rasterFunction)})()}fetchPixels(s,t,c,i={}){var a=this;return(0,Z.Z)(function*(){var y,x;const{rasters:u,rasterIds:f}=a.primaryRasters,m=u.map(v=>v.fetchPixels(s,t,c,i)),d=yield Promise.all(m),p=d.map(v=>v.pixelBlock);if(i.skipRasterFunction||p.every(v=>(0,T.Wi)(v)))return d[0];const h=null!=(x=null==(y=d.find(v=>(0,T.pC)(v.pixelBlock)))?void 0:y.extent)?x:s,I=a.rasterJobHandler?yield a.rasterJobHandler.process({extent:h,primaryPixelBlocks:p,primaryRasterIds:f}):a.rasterFunction.process({extent:h,primaryPixelBlocks:p,primaryRasterIds:f});return V(W({},d[0]),{pixelBlock:I})})()}_hasSameStorageInfo(s,t){const{storageInfo:c,pixelSize:i,spatialReference:a,extent:u}=s,{storageInfo:f,pixelSize:m,spatialReference:d,extent:p}=t;return i.x===m.x&&i.y===m.y&&a.equals(d)&&u.equals(p)&&c.blockHeight===f.blockHeight&&c.blockWidth===f.blockWidth&&c.maximumPyramidLevel===f.maximumPyramidLevel}};(0,F._)([(0,M.Cb)({type:String,json:{write:!0}})],xe.prototype,"datasetFormat",void 0),(0,F._)([(0,M.Cb)()],xe.prototype,"tileType",void 0),(0,F._)([(0,M.Cb)()],xe.prototype,"rasterFunction",void 0),(0,F._)([(0,M.Cb)()],xe.prototype,"primaryRasters",void 0),xe=(0,F._)([(0,le.j)("esri.layers.support.rasterDatasets.FunctionRaster")],xe);const Xe=xe;var Ee=w(74829),pe=w(8341),Lt=w(99033),At=w(37084),ee=w(65234);const dt=je.Z.getLogger("esri.layers.mixins.ImageryTileMixin"),_t=s=>{let t=class extends s{constructor(...i){var a,u;super(...i),this._isConstructedFromFunctionRaster=!1,this._rasterJobHandler={instance:null,refCount:0,connectionPromise:null},this.bandIds=null,this.copyright=null,this.interpolation="nearest",this.multidimensionalSubset=null,this.raster=null,this.rasterFunction=null,this.rasterInfo=null,this.sourceJSON=null,this.spatialReference=null,this.symbolizer=null,this._isConstructedFromFunctionRaster="Function"===(null==(u=null==(a=i[0])?void 0:a.raster)?void 0:u.datasetFormat)}get fullExtent(){var i;return null==(i=this.rasterInfo)?void 0:i.extent}set multidimensionalDefinition(i){this._set("multidimensionalDefinition",i),this.updateRenderer()}get tileInfo(){var i;return null==(i=this.rasterInfo)?void 0:i.storageInfo.tileInfo}set url(i){this._set("url",(0,it.Nm)(i,dt))}set renderer(i){this._set("renderer",i),this.updateRenderer()}convertVectorFieldData(i,a){var u=this;return(0,Z.Z)(function*(){if((0,T.Wi)(i)||!u.rasterInfo)return null;const f=u._rasterJobHandler.instance,m=u.rasterInfo.dataType;return f?f.convertVectorFieldData({pixelBlock:i,dataType:m},a):(0,Ye.KC)(i,m)})()}createFlowMesh(i,a){var u=this;return(0,Z.Z)(function*(){const f=u._rasterJobHandler.instance;return f?f.createFlowMesh(i,a):(0,At.GE)(i.meshType,i.simulationSettings,i.flowData,(0,T.pC)(a.signal)?a.signal:(new AbortController).signal)})()}normalizeRasterFetchOptions(i){var m,d,p;const{multidimensionalInfo:a}=null!=(m=this.rasterInfo)?m:{};if((0,T.Wi)(a))return i;let u=i.multidimensionalDefinition||this.multidimensionalDefinition;!(0,T.Wi)(u)&&u.length||(u=(0,se.Tj)(this.raster.rasterInfo,{multidimensionalSubset:this.multidimensionalSubset}));const f=i.timeExtent||this.timeExtent;if((0,T.pC)(u)&&(0,T.pC)(f)&&((0,T.pC)(f.start)||(0,T.pC)(f.end))){u=u.map(S=>S.clone());const h=null==(p=null==(d=a.variables.find(({name:S})=>S===u[0].variableName))?void 0:d.dimensions)?void 0:p.find(({name:S})=>"StdTime"===S),I=u.find(({dimensionName:S})=>"StdTime"===S);if(!h||!I)return V(W({},i),{multidimensionalDefinition:null});const{start:y,end:x}=f,v=(0,T.Wi)(y)?null:y.getTime(),b=(0,T.Wi)(x)?null:x.getTime(),R=null!=v?v:b,g=null!=b?b:v;if((0,T.pC)(h.values)){const S=h.values.filter(C=>{if(Array.isArray(C)){if(R===g)return C[0]<=R&&C[1]>=R;const O=C[0]>=R&&C[1]<=g||C[0]<R&&C[1]>g;return C[0]<=R&&C[1]>R||C[0]<g&&C[1]>=g||O}return R===g?C===R:C>=R&&C<=g});if(S.length){const C=S.sort((D,O)=>{var E,k,B,H;return R===g?(null!=(E=D[0])?E:D)-(null!=(k=O[0])?k:O):Math.abs((null!=(B=D[1])?B:D)-g)-Math.abs((null!=(H=O[1])?H:O)-g)})[0];I.values=[C]}else u=null}else if(h.hasRegularIntervals&&h.extent){const[S,C]=h.extent;R>C||g<S?u=null:I.values=R===g?[R]:[Math.max(S,R),Math.min(C,g)]}}return(0,T.pC)(u)&&(0,se.nb)(u,this.multidimensionalSubset)?V(W({},i),{multidimensionalDefinition:null}):V(W({},i),{multidimensionalDefinition:u})}updateRasterFunction(){var i=this;return(0,Z.Z)(function*(){var I,y,x;if("imagery-tile"!==i.type||!i.rasterFunction&&!i._cachedRasterFunctionJson||JSON.stringify(i.rasterFunction)===JSON.stringify(i._cachedRasterFunctionJson))return;if(i._isConstructedFromFunctionRaster&&"Function"===i.raster.datasetFormat){const v=i.raster.rasterFunction.toJSON();return!i.rasterFunction&&v&&i._set("rasterFunction",Ve.Z.fromJSON(v)),void(i._cachedRasterFunctionJson=null==(I=i.rasterFunction)?void 0:I.toJSON())}let a,u=i.raster,f=!1;"Function"===u.datasetFormat?(a=u.primaryRasters.rasters,u=a[0],f=!0):a=[u];const{rasterFunction:m}=i;if(m){const v={raster:u};a.length>1&&a.forEach(g=>v[g.url]=g);const b=(0,Ee.Ue)(null!=(y=m.rasterFunctionDefinition)?y:m.toJSON(),v),R=new Xe({rasterFunction:b});R.rasterJobHandler=i._rasterJobHandler.instance,yield R.open(),i._cachedRasterFunctionJson=null==(x=i.rasterFunction)?void 0:x.toJSON(),i.raster=R}else i.raster=u,i._cachedRasterFunctionJson=null;if(i._cachedRendererJson=null,!f&&!m)return;const{bandIds:d}=i,{bandCount:p}=i.raster.rasterInfo,h=null!=d&&d.length?d.some(v=>v>=p):p>=3;d&&(h||"raster-stretch"!==i.renderer.type)&&i._set("bandIds",null),i._configDefaultRenderer("auto")})()}updateRenderer(){var i=this;return(0,Z.Z)(function*(){var h;const{loaded:a,symbolizer:u}=i;if(!a||!u)return;const{rasterInfo:f}=i.raster,m=null==(h=(0,se.WY)(f,{multidimensionalDefinition:i.multidimensionalDefinition,multidimensionalSubset:i.multidimensionalSubset}))?void 0:h.name,d=(0,pe.ol)(V(W({},i.renderer.toJSON()),{variableName:m}));if(JSON.stringify(i._cachedRendererJson)===JSON.stringify(d))return;const p=i._rasterJobHandler.instance;p&&(u.rasterInfo=(0,pe.FI)(f,m),u.rendererJSON=d,u.bind(),yield p.updateSymbolizer(u),i._cachedRendererJson=d)})()}applyRenderer(i,a){var u=this;return(0,Z.Z)(function*(){var h;const f=i&&i.pixelBlock;if(!((0,T.pC)(f)&&f.pixels&&f.pixels.length>0))return null;let m;yield u.updateRenderer();const d=u._rasterJobHandler.instance,p=null!=(h=u.bandIds)?h:[];return m=d?yield d.symbolize(V(W({},i),{simpleStretchParams:a,bandIds:p})):u.symbolizer.symbolize(V(W({},i),{simpleStretchParams:a,bandIds:p})),m})()}getTileUrl(i,a,u){return"RasterTileServer"===this.raster.datasetFormat?`${this.url}/tile/${i}/${a}/${u}`:""}getCompatibleTileInfo(i,a,u=!1){if(!this.loaded||(0,T.Wi)(a))return null;if(u&&i.equals(this.spatialReference))return this.tileInfo;const f=(0,kt.C5)(i);return Fe.Z.create({size:256,spatialReference:i,origin:f?{x:f.origin[0],y:f.origin[1]}:{x:a.xmin,y:a.ymax}})}getCompatibleFullExtent(i){return this.loaded?(this._compatibleFullExtent&&this._compatibleFullExtent.spatialReference.equals(i)||(this._compatibleFullExtent=this.raster.computeExtent(i)),this._compatibleFullExtent):null}fetchTile(i,a,u,f={}){var m=this;return(0,Z.Z)(function*(){if(c(m),f.requestAsImageElement){const p=m.getTileUrl(i,a,u);return(0,nt.default)(p,{responseType:"image",query:W(W({},m.refreshParameters),m.raster.ioConfig.customFetchParameters),signal:f.signal}).then(h=>h.data)}const{rasterInfo:d}=m;return(0,T.pC)(d.multidimensionalInfo)&&(f=m.normalizeRasterFetchOptions(f),(0,T.Wi)(f.multidimensionalDefinition))?{extent:m.raster.getTileExtentFromTileInfo(i,a,u,f.tileInfo||d.storageInfo.tileInfo),pixelBlock:null}:(yield m._initJobHandler(),yield m.updateRasterFunction(),"raster-shaded-relief"===m.renderer.type&&(f=V(W({},f),{buffer:{cols:1,rows:1}})),m.raster.fetchTile(i,a,u,f))})()}fetchPixels(i,a,u,f={}){var m=this;return(0,Z.Z)(function*(){return(0,T.pC)(m.rasterInfo.multidimensionalInfo)&&(f=m.normalizeRasterFetchOptions(f),(0,T.Wi)(f.multidimensionalDefinition))?{extent:i,pixelBlock:null}:(yield m._initJobHandler(),yield m.updateRasterFunction(),m.raster.fetchPixels(i,a,u,f))})()}identify(i,a={}){var u=this;return(0,Z.Z)(function*(){var p;const{raster:f,rasterInfo:m}=u;if((0,T.pC)(m.multidimensionalInfo)&&(!m.hasMultidimensionalTranspose||!((0,se.WU)(a.multidimensionalDefinition)||a.transposedVariableName||a.timeExtent))&&(a=u.normalizeRasterFetchOptions(a),(0,T.Wi)(a.multidimensionalDefinition)))return{location:i,value:null};const d=null==(p=u.multidimensionalSubset)?void 0:p.areaOfInterest;if(d&&!d.contains(i))throw new L.Z("imagery-tile-mixin:identify","the request cannot be fulfilled when falling outside of the multidimensional subset");return f.identify(i,a)})()}increaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount++}decreaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount--,this._rasterJobHandler.refCount<=0&&this._shutdownJobHandler()}hasStandardTime(){var f,m,d;const i=null==(f=this.rasterInfo)?void 0:f.multidimensionalInfo;if((0,T.Wi)(i)||"standard-time"!==(null==(m=this.rasterInfo)?void 0:m.dataType))return!1;const a=this.multidimensionalDefinition,u=null==(d=null==a?void 0:a[0])?void 0:d.variableName;return i.variables.some(p=>p.name===u&&(!(null!=a&&a[0].dimensionName)||p.dimensions.some(h=>"StdTime"===h.name)))}getStandardTimeValue(i){return new Date(24*(i-25569)*3600*1e3).toString()}getMultidimensionalSubsetVariables(i){var u;const a=null!=i?i:null==(u=this.rasterInfo)?void 0:u.multidimensionalInfo;return(0,se.jj)(this.multidimensionalSubset,a)}_configDefaultSettings(){this._configDefaultInterpolation(),this.multidimensionalDefinition||(this.multidimensionalDefinition=(0,se.Tj)(this.raster.rasterInfo,{multidimensionalSubset:this.multidimensionalSubset})),this._configDefaultRenderer()}_initJobHandler(){if(null!=this._rasterJobHandler.connectionPromise)return this._rasterJobHandler.connectionPromise;const i=new Bt.Z;return this._rasterJobHandler.connectionPromise=i.initialize().then(()=>{c(this),this._rasterJobHandler.instance=i,this.raster.rasterJobHandler=i,this.renderer&&this.updateRenderer(),"Function"===this.raster.datasetFormat&&this.raster.syncJobHandler()}).catch(()=>{}),this._rasterJobHandler.connectionPromise}_shutdownJobHandler(){this._rasterJobHandler.instance&&this._rasterJobHandler.instance.destroy(),this._rasterJobHandler.instance=null,this._rasterJobHandler.connectionPromise=null,this._rasterJobHandler.refCount=0,this._cachedRendererJson=null,this.raster&&(this.raster.rasterJobHandler=null)}_configDefaultInterpolation(){var i;if(null==this.interpolation){c(this);const{raster:a}=this,u=(0,pe.In)(a.rasterInfo,a.tileType,null==(i=this.sourceJSON)?void 0:i.defaultResamplingMethod);this._set("interpolation",u)}}_configDefaultRenderer(i="no"){var p,h,I,y,x,v,b;c(this);const{rasterInfo:a}=this.raster;!this.bandIds&&a.bandCount>1&&(this.bandIds=(0,pe.YD)(a));const u=null==(p=(0,se.WY)(a,{multidimensionalDefinition:this.multidimensionalDefinition,multidimensionalSubset:this.multidimensionalSubset}))?void 0:p.name;if(!this.renderer||"override"===i){const R=(0,pe.Ob)(a,{bandIds:this.bandIds,variableName:u});"WCSServer"===this.raster.datasetFormat&&"raster-stretch"===R.type&&((null!=(I=null==(h=a.statistics)?void 0:h[0].max)?I:0)>1e24||(null!=(x=null==(y=a.statistics)?void 0:y[0].min)?x:0)<-1e24)&&(R.dynamicRangeAdjustment=!0,R.statistics=null,"none"===R.stretchType&&(R.stretchType="min-max")),this.renderer=R}const f=(0,pe.ol)(V(W({},this.renderer.toJSON()),{variableName:u})),m=(0,pe.FI)(a,u);this.symbolizer?(this.symbolizer.rendererJSON=f,this.symbolizer.rasterInfo=m):this.symbolizer=new Lt.Z({rendererJSON:f,rasterInfo:m});const d=this.symbolizer.bind();if(d.success){if("auto"===i){const{colormap:R}=this.raster.rasterInfo,g=this.renderer;if((0,T.pC)(R))if("raster-colormap"!==g.type)this._configDefaultRenderer("override");else{const S=(0,pe.Ob)(this.raster.rasterInfo);JSON.stringify(S)!==JSON.stringify(g)&&this._configDefaultRenderer("override")}else if("raster-stretch"===g.type){const S=null==(v=this.bandIds)?void 0:v.length,C=null==(b=g.statistics)?void 0:b.length;!g.dynamicRangeAdjustment&&C&&S&&C!==S&&this._configDefaultRenderer("override")}}}else dt.warn("imagery-tile-mixin",d.error||"The given renderer is not supported by the layer."),"auto"===i&&this._configDefaultRenderer("override")}};function c(i){if(!i.raster||!i.rasterInfo)throw new L.Z("imagery-tile","no raster")}return(0,F._)([(0,M.Cb)()],t.prototype,"_cachedRendererJson",void 0),(0,F._)([(0,M.Cb)()],t.prototype,"_cachedRasterFunctionJson",void 0),(0,F._)([(0,M.Cb)()],t.prototype,"_compatibleFullExtent",void 0),(0,F._)([(0,M.Cb)()],t.prototype,"_isConstructedFromFunctionRaster",void 0),(0,F._)([(0,M.Cb)()],t.prototype,"_rasterJobHandler",void 0),(0,F._)([(0,M.Cb)()],t.prototype,"bandIds",void 0),(0,F._)([(0,M.Cb)({json:{origins:{service:{read:{source:"copyrightText"}}}}})],t.prototype,"copyright",void 0),(0,F._)([(0,M.Cb)({json:{read:!1}})],t.prototype,"fullExtent",null),(0,F._)([(0,M.Cb)()],t.prototype,"interpolation",void 0),(0,F._)([(0,M.Cb)()],t.prototype,"ioConfig",void 0),(0,F._)([(0,M.Cb)({type:[st.Z],json:{write:!0}})],t.prototype,"multidimensionalDefinition",null),(0,F._)([(0,M.Cb)({type:Ot.Z,json:{write:!0}})],t.prototype,"multidimensionalSubset",void 0),(0,F._)([(0,M.Cb)()],t.prototype,"raster",void 0),(0,F._)([(0,M.Cb)({type:Ve.Z})],t.prototype,"rasterFunction",void 0),(0,F._)([(0,M.Cb)()],t.prototype,"rasterInfo",void 0),(0,F._)([(0,M.Cb)()],t.prototype,"sourceJSON",void 0),(0,F._)([(0,M.Cb)({readOnly:!0,type:ee.Z,json:{read:!1}})],t.prototype,"spatialReference",void 0),(0,F._)([(0,M.Cb)({json:{read:!1}})],t.prototype,"tileInfo",null),(0,F._)([(0,M.Cb)($e.HQ)],t.prototype,"url",null),(0,F._)([(0,M.Cb)({types:ze.dr})],t.prototype,"renderer",null),(0,F._)([(0,M.Cb)()],t.prototype,"symbolizer",void 0),t=(0,F._)([(0,le.j)("esri.layers.ImageryTileMixin")],t),t};var Ut=w(49286),jt=w(6647),Gt=w(30346),$t=w(99555),Vt=w(97941),Me=w(36255),Yt=w(2939),ke=w(79645),mt=w(15365);function Xt(s){const t=s.fields,c=s.records,i=t.some(p=>"oid"===p.name.toLowerCase())?"OBJECTID":"OID",a=[{name:i,type:"esriFieldTypeOID",alias:"OID"}].concat(t.map(p=>({name:p.name,type:"esriFieldType"+p.typeName,alias:p.name}))),u=a.map(p=>p.name),f=[];let m=0,d=0;return c.forEach(p=>{const h={};for(h[i]=m++,d=1;d<u.length;d++)h[u[d]]=p[d-1];f.push({attributes:h})}),{displayFieldName:"",fields:a,features:f}}class pt{static get supportedVersions(){return[5]}static parse(t){const c=new DataView(t),i=3&c.getUint8(0);if(3!==i)return{header:{version:i},recordSet:null};const a=c.getUint32(4,!0),u=c.getUint16(8,!0),f=c.getUint16(10,!0),m={version:i,recordCount:a,headerByteCount:u,recordByteCount:f};let d=32;const p=[],h=[];let I;if(3===i){for(;13!==c.getUint8(d);)I=String.fromCharCode(c.getUint8(d+11)).trim(),p.push({name:(0,mt.f)(new Uint8Array(t,d,11)),type:I,typeName:["String","Date","Double","Boolean","String","Integer"][["C","D","F","L","M","N"].indexOf(I)],length:c.getUint8(d+16)}),d+=32;if(d+=1,p.length>0)for(;h.length<a&&t.byteLength-d>f;){const y=[];32===c.getUint8(d)?(d+=1,p.forEach(x=>{if("C"===x.type)y.push((0,mt.f)(new Uint8Array(t,d,x.length)).trim());else if("N"===x.type)y.push(parseInt(String.fromCharCode.apply(null,new Uint8Array(t,d,x.length)).trim(),10));else if("F"===x.type)y.push(parseFloat(String.fromCharCode.apply(null,new Uint8Array(t,d,x.length)).trim()));else if("D"===x.type){const v=String.fromCharCode.apply(null,new Uint8Array(t,d,x.length)).trim();y.push(new Date(parseInt(v.substring(0,4),10),parseInt(v.substring(4,6),10)-1,parseInt(v.substring(6,8),10)))}d+=x.length}),h.push(y)):d+=f}}return{header:m,fields:p,records:h,recordSet:Xt({fields:p,records:h})}}}var ht=w(46572),yt=w(17253);const Ie=new Map;Ie.set("int16","esriFieldTypeSmallInteger"),Ie.set("int32","esriFieldTypeInteger"),Ie.set("int64","esriFieldTypeInteger"),Ie.set("float32","esriFieldTypeSingle"),Ie.set("float64","esriFieldTypeDouble"),Ie.set("text","esriFieldTypeString");let Oe=class extends ge{constructor(){super(...arguments),this.storageInfo=null,this.datasetFormat="CRF"}open(s){var t=this;return(0,Z.Z)(function*(){yield t.init();const{data:c}=yield t.request(t.url+"/conf.json",{signal:null==s?void 0:s.signal});if(!t._validateHeader(c))throw new L.Z("cloudraster:open","Invalid or unsupported conf.json.");t.datasetName=t.url.slice(t.url.lastIndexOf("/")+1);const{storageInfo:i,rasterInfo:a}=t._parseHeader(c);if("thematic"===a.dataType){const u=yield t._fetchAuxiliaryInformation();a.attributeTable=u}t._set("storageInfo",i),t._set("rasterInfo",a),t.ioConfig.retryCount=t.ioConfig.retryCount||0})()}fetchRawTile(s,t,c,i={}){var a=this;return(0,Z.Z)(function*(){const{transposeInfo:u}=a.rasterInfo.storageInfo,{transposedVariableName:f}=i,m=!(!u||!f),d=m?0:a.rasterInfo.storageInfo.maximumPyramidLevel-s;if(d<0)return null;const p=a._buildCacheFilePath(d,t,c,i.multidimensionalDefinition,f),h=a._getIndexRecordFromBundle(t,c,m),I=yield a.request(p,{range:{from:0,to:a.storageInfo.headerSize-1},responseType:"array-buffer",signal:i.signal});if(!I)return null;const y=new Uint8Array(I.data),x=a._getTileEndAndContentType(y,h);if(0===x.recordSize)return null;const v=yield a.request(p,{range:{from:x.position,to:x.position+x.recordSize},responseType:"array-buffer",signal:i.signal});if(!v)return null;const[b,R]=a._getTileSize(m);return a.decodePixelBlock(v.data,{width:b,height:R,planes:null,pixelType:null,returnInterleaved:m})})()}_validateHeader(s){return s&&"RasterInfo"===s.type&&!["origin","extent","geodataXform","LODInfos","blockWidth","blockHeight","bandCount","pixelType","pixelSizeX","pixelSizeY","format","packetSize"].some(c=>!s[c])}_parseHeader(s){var Y,K;const t=["u1","u2","u4","u8","s8","u16","s16","u32","s32","f32","f64"][s.pixelType],{bandCount:c,histograms:i,colormap:a,blockWidth:u,blockHeight:f,firstPyramidLevel:m,maximumPyramidLevel:d}=s,p=s.statistics&&s.statistics.map(U=>({min:U.min,max:U.max,avg:U.mean,stddev:U.standardDeviation,median:U.median,mode:U.mode})),h=s.extent.spatialReference,I=null==(Y=s.geodataXform)?void 0:Y.spatialReference,y=new ee.Z((null==h?void 0:h.wkid)||(null==h?void 0:h.wkt)?h:I);let x=new re.Z({xmin:s.extent.xmin,ymin:s.extent.ymin,xmax:s.extent.xmax,ymax:s.extent.ymax,spatialReference:y});const v=new q.Z({x:s.pixelSizeX,y:s.pixelSizeY,spatialReference:y}),b=Math.round((x.xmax-x.xmin)/v.x),R=Math.round((x.ymax-x.ymin)/v.y),g=this._parseTransform(s.geodataXform),S=g?x:null;g&&(x=g.forwardTransform(x),v.x=(x.xmax-x.xmin)/b,v.y=(x.ymax-x.ymin)/R);const C=null!=(K=s.properties)?K:{},D=s.format.toLowerCase().replace("cache/",""),O=new q.Z(s.origin.x,s.origin.y,y);let E,k,B,H;if(a&&a.colors)for(E=[],k=0;k<a.colors.length;k++)B=a.colors[k],H=a.values?a.values[k]:k,E.push([H,255&B,B<<16>>>24,B<<8>>>24,B>>>24]);const P=s.LODInfos,z=[];for(k=0;k<P.levels.length;k++)z.push(new at.Z({level:P.levels[k],resolution:P.resolutions[k],scale:96/.0254*P.resolutions[k]}));const J=new Fe.Z({dpi:96,lods:z,format:D,origin:O,size:[u,f],spatialReference:y}),N={recordSize:8,packetSize:s.packetSize,headerSize:s.packetSize*s.packetSize*8+64},A=[{maxCol:Math.ceil(b/u)-1,maxRow:Math.ceil(R/f)-1,minCol:0,minRow:0}];let j=2;if(d>0)for(k=0;k<d;k++)A.push({maxCol:Math.ceil(b/j/u)-1,maxRow:Math.ceil(R/j/f)-1,minCol:0,minRow:0}),j*=2;const _=s.mdInfo;let X=null;if(_&&C._yxs){const U=C._yxs;X={packetSize:U.PacketSize,tileSize:[U.TileXSize,U.TileYSize]}}return{storageInfo:N,rasterInfo:new ke.Z({width:b,height:R,pixelType:t,bandCount:c,extent:x,nativeExtent:S,transform:g,spatialReference:y,pixelSize:v,keyProperties:C,statistics:p,histograms:i,multidimensionalInfo:_,colormap:E,storageInfo:new Pe.Z({blockWidth:u,blockHeight:f,pyramidBlockWidth:u,pyramidBlockHeight:f,origin:O,tileInfo:J,transposeInfo:X,firstPyramidLevel:m,maximumPyramidLevel:d,blockBoundary:A})})}}_parseTransform(s){var c,i;if(!(0,ht.j)(s))throw new L.Z("cloudraster:open","the data contains unsupported geodata transform types");const t=(0,ht.c)(s);if("identity"===t.type)return null;if("polynomial"!==t.type||null==(c=t.forwardCoefficients)||!c.length||null==(i=t.inverseCoefficients)||!i.length)throw new L.Z("cloudraster:open","the data contains unsupported geodata transforms - both forward and inverse coefficients are required currently");return t}_fetchAuxiliaryInformation(s){var t=this;return(0,Z.Z)(function*(){const c=t.request(t.url+"/conf.vat.json",{signal:s}).then(f=>f.data).catch(()=>null),i=t.request(t.url+"/conf.vat.dbf",{responseType:"array-buffer",signal:s}).then(f=>f.data).catch(()=>null),a=yield Promise.all([c,i]);let u;if(a[0]){let f=a[0].fields;const m=a[0].values;if(f&&m){f=f.map(p=>({type:"OID"===p.name?"esriFieldTypeOID":Ie.get(p.type),name:p.name,alias:p.alias||p.name}));const d=m.map(p=>({attributes:p}));f&&m&&(u={fields:f,features:d})}}return!u&&a[1]&&(u=pt.parse(a[1]).recordSet),yt.Z.fromJSON(u)})()}_buildCacheFilePath(s,t,c,i,a){const u=this._getPackageSize(!!a),f=Math.floor(t/u)*u,m=Math.floor(c/u)*u,d="R"+this._toHexString4(f)+"C"+this._toHexString4(m);let p="L";p+=s>=10?s.toString():"0"+s.toString();const{multidimensionalInfo:h}=this.rasterInfo,I=null==i?void 0:i[0];if((0,T.Wi)(h)||!I)return`${this.url}/_alllayers/${p}/${d}.bundle`;let y="_yxs";if(!a){y=h.variables.find(b=>b.name===I.variableName).dimensions[0].values.indexOf(I.values[0]).toString(16);const v=4-y.length;for(let b=0;b<v;b++)y="0"+y;y="S"+y}const x=this._getVariableFolderName(a||I.variableName);return`${this.url}/_alllayers/${x}/${y}/${p}/${d}.bundle`}_getPackageSize(s=!1){var c;const{transposeInfo:t}=this.rasterInfo.storageInfo;return s&&(0,T.pC)(t)?null!=(c=t.packetSize)?c:0:this.storageInfo.packetSize}_getTileSize(s=!1){const{storageInfo:t}=this.rasterInfo,{transposeInfo:c}=t;return s&&(0,T.pC)(c)?c.tileSize:t.tileInfo.size}_getVariableFolderName(s){return""===(s=s.trim())?"_v":s.replace(/[\{|\}\-]/g,"_").replace("\\*","_v")}_getIndexRecordFromBundle(s,t,c=!1){const i=this._getPackageSize(c),a=i*(s%i)+t%i;if(a<0)throw new Error("Invalid level / row / col");return 20+a*this.storageInfo.recordSize+44}_getTileEndAndContentType(s,t){const c=s.subarray(t,t+8);let i,a=0;for(i=0;i<5;i++)a|=(255&c[i])<<8*i;const u=0xffffffffff&a;for(a=0,i=5;i<8;i++)a|=(255&c[i])<<8*(i-5);return{position:u,recordSize:0xffffffffff&a}}_toHexString4(s){let t=s.toString(16);if(4!==t.length){let c=4-t.length;for(;c-- >0;)t="0"+t}return t}};(0,F._)([(0,M.Cb)({readOnly:!0})],Oe.prototype,"storageInfo",void 0),(0,F._)([(0,M.Cb)({type:String,json:{write:!0}})],Oe.prototype,"datasetFormat",void 0),Oe=(0,F._)([(0,le.j)("esri.layers.support.rasterDatasets.CloudRaster")],Oe);const Kt=Oe;var Qt=w(8314),He=w(17057);let Be=class extends ge{constructor(){super(...arguments),this.datasetFormat="MEMORY",this.data=null}open(s){var t=this;return(0,Z.Z)(function*(){var g,S;yield t.init();const c=t.data,{pixelBlock:i,statistics:a,histograms:u,name:f,keyProperties:m,nativeExtent:d,transform:p}=t.data,{width:h,height:I,pixelType:y}=i,x=null!=(g=c.extent)?g:new re.Z({xmin:-.5,ymin:.5,xmax:h-.5,ymax:I-.5,spatialReference:new ee.Z({wkid:3857})}),v=null!=(S=c.isPseudoSpatialReference)?S:!c.extent,R=new ke.Z({width:h,height:I,pixelType:y,extent:x,nativeExtent:d,transform:p,pixelSize:{x:x.width/h,y:x.height/I},spatialReference:x.spatialReference,bandCount:i.pixels.length,keyProperties:m||{},statistics:a,isPseudoSpatialReference:v,histograms:u});t.createRemoteDatasetStorageInfo(R,512,512),t._set("rasterInfo",R),t.updateTileInfo(),yield t._buildInMemoryRaster(i,{width:512,height:512},s),t.datasetName=f,t.url="/InMemory/"+f})()}fetchRawTile(s,t,c,i={}){const a=this._pixelBlockTiles.get(`${s}/${t}/${c}`);return Promise.resolve(a)}_buildInMemoryRaster(s,t,c){var i=this;return(0,Z.Z)(function*(){var h,I;const a=i.rasterInfo.storageInfo.maximumPyramidLevel,u=i.rasterJobHandler?i.rasterJobHandler.split({pixelBlock:s,tileSize:t,maximumPyramidLevel:a},c):Promise.resolve((0,ye.Vl)(s,t,a)),f=(0,T.pC)(i.rasterInfo.statistics),m=(0,T.pC)(i.rasterInfo.histograms),d=f?Promise.resolve({statistics:null,histograms:null}):i.rasterJobHandler?i.rasterJobHandler.estimateStatisticsHistograms({pixelBlock:s},c):Promise.resolve((0,He.Hv)(s)),p=yield(0,we.as)([u,d]);if(!p[0].value&&p[1].value)throw new L.Z("inmemory-raster:open","failed to build in memory raster");i._pixelBlockTiles=p[0].value,f||(i.rasterInfo.statistics=null==(h=p[1].value)?void 0:h.statistics),m||(i.rasterInfo.histograms=null==(I=p[1].value)?void 0:I.histograms)})()}};(0,F._)([(0,M.Cb)({type:String,json:{write:!0}})],Be.prototype,"datasetFormat",void 0),(0,F._)([(0,M.Cb)()],Be.prototype,"data",void 0),Be=(0,F._)([(0,le.j)("esri.layers.support.rasterDatasets.InMemoryRaster")],Be);const qt=Be;function Ce(s,t){if(!s||!t)return[];let c=t;t.includes("/")?(c=t.slice(0,t.indexOf("/")),t=t.slice(t.indexOf("/")+1)):t="";const i=[];if(t){const u=Ce(s,c);for(let f=0;f<u.length;f++)Ce(u[f],t).forEach(m=>i.push(m));return i}const a=s.getElementsByTagNameNS("*",c);if(!a||0===a.length)return[];for(let u=0;u<a.length;u++)i.push(a[u]||a.item[u]);return i}function ie(s,t){if(!s||!t)return null;let c=t;t.includes("/")?(c=t.slice(0,t.indexOf("/")),t=t.slice(t.indexOf("/")+1)):t="";const i=Ce(s,c);return i.length>0?t?ie(i[0],t):i[0]:null}function ae(s,t=null){const c=t?ie(s,t):s;let i;return c?(i=c.textContent||c.nodeValue,i?i.trim():null):null}function Ne(s,t){return function er(s,t){const c=Ce(s,t),i=[];let a;for(let u=0;u<c.length;u++)a=c[u].textContent||c[u].nodeValue,a&&(a=a.trim(),""!==a&&i.push(a));return i}(s,t).map(c=>Number(c))}function ve(s,t){const c=ae(s,t);return Number(c)}function Ke(s,t){var a;const c=null==(a=null==s?void 0:s.nodeName)?void 0:a.toLowerCase(),i=t.toLowerCase();return c.slice(c.lastIndexOf(":")+1)===i}var Qe=w(85374);function xt(s,t){if(!s||!t)return null;const c=[];for(let i=0;i<s.length;i++)c.push(s[i]),c.push(t[i]);return c}function Je(s){if(!s)return null;let t=Number(s);if(!isNaN(t)&&0!==t)return new ee.Z({wkid:t});if((s=String(s)).startsWith("COMPD_CS")){if(!s.includes("VERTCS")||!s.includes("GEOGCS")&&!s.startsWith("PROJCS"))return null;const c=s.indexOf("VERTCS"),i=s.indexOf("PROJCS"),a=i>-1?i:s.indexOf("GEOGCS");if(-1===a)return null;const u=s.slice(a,s.lastIndexOf("]",c)+1).trim(),f=s.slice(c,s.lastIndexOf("]")).trim();t=qe(u);const m=new ee.Z(t?{wkid:t}:{wkt:u}),d=qe(f);return d&&(m.vcsWkid=d),m}return s.startsWith("GEOGCS")||s.startsWith("PROJCS")?(t=qe(s),new ee.Z(0!==t?{wkid:t}:{wkt:s})):null}function qe(s){var a;const t=s.replace(/\]/g,"[").replace(/\"/g,"").split("[").map(u=>u.trim()).filter(u=>""!==u),c=t[t.length-1].split(","),i=null==(a=c[0])?void 0:a.toLowerCase();if(("epsg"===i||"esri"===i)&&s.endsWith('"]]')){const u=Number(c[1]);if(!isNaN(u)&&0!==u)return u}return 0}function et(s){var i;if("pamdataset"!==(null==(i=null==s?void 0:s.documentElement.tagName)?void 0:i.toLowerCase()))return{};const t={spatialReference:null,transform:null,metadata:{},rasterBands:[],statistics:null,histograms:null};s.documentElement.childNodes.forEach(a=>{if(1===a.nodeType)if(Ke(a,"SRS")){if(!t.spatialReference){const u=ae(a);t.spatialReference=Je(u)}}else if(Ke(a,"Metadata"))if("xml:ESRI"===a.getAttribute("domain")){const{spatialReference:u,transform:f}=function tr(s){var h;const t=ie(s,"GeodataXform"),c=Je(ve(t,"SpatialReference/WKID")||ae(t,"SpatialReference/WKT"));if("typens:PolynomialXform"!==t.getAttribute("xsi:type"))return{spatialReference:c,transform:null};const i=null!=(h=ve(t,"PolynomialOrder"))?h:1,a=Ne(t,"CoeffX/Double"),u=Ne(t,"CoeffY/Double"),f=Ne(t,"InverseCoeffX/Double"),m=Ne(t,"InverseCoeffY/Double"),d=xt(a,u),p=xt(f,m);return{spatialReference:c,transform:d&&p&&d.length&&p.length?new Qe.Z({spatialReference:c,polynomialOrder:i,forwardCoefficients:d,inverseCoefficients:p}):null}}(a);t.transform=f,t.spatialReference||(t.spatialReference=u)}else Ce(a,"MDI").forEach(u=>t.metadata[u.getAttribute("key")]=ae(u));else if(Ke(a,"PAMRasterBand")){const u=function rr(s){var y;const t=ve(s,"NoDataValue"),c=ie(s,"Histograms/HistItem"),i=ve(c,"HistMin"),a=ve(c,"HistMax"),u=ve(c,"BucketCount"),f=null==(y=ae(c,"HistCounts"))?void 0:y.split("|").map(x=>Number(x));let m,d,p,h;Ce(s,"Metadata/MDI").forEach(x=>{var b;const v=Number(null!=(b=x.textContent)?b:x.nodeValue);switch(x.getAttribute("key").toUpperCase()){case"STATISTICS_MINIMUM":m=v;break;case"STATISTICS_MAXIMUM":d=v;break;case"STATISTICS_MEAN":p=v;break;case"STATISTICS_STDDEV":h=v}});const I=ve(s,"Metadata/SourceBandIndex");return{noDataValue:t,histogram:(null==f?void 0:f.length)&&null!=i&&null!=a?{min:i,max:a,size:u||f.length,counts:f}:null,sourceBandIndex:I,statistics:null!=m&&null!=d?{min:m,max:d,avg:p,stddev:h}:null}}(a);null!=u.sourceBandIndex&&null==t.rasterBands[u.sourceBandIndex]?t.rasterBands[u.sourceBandIndex]=u:t.rasterBands.push(u)}});const c=t.rasterBands;return c.length&&(t.statistics=c[0].statistics?c.map(f=>f.statistics).filter(T.pC):null,t.histograms=c[0].histogram?c.map(f=>f.histogram).filter(T.pC):null),t}let We=class extends ge{open(s){var t=this;return(0,Z.Z)(function*(){yield t.init();const c=yield t._fetchData(s);let{spatialReference:i,statistics:a,histograms:u,transform:f}=yield t._fetchAuxiliaryData(s);const m=!i;m&&(i=new ee.Z({wkid:3857})),(null==u?void 0:u.length)&&null==a&&(a=(0,He.Oh)(u));const{width:d,height:p}=c;let h=new re.Z({xmin:-.5,ymin:.5-p,xmax:d-.5,ymax:.5,spatialReference:i});const I=f?f.forwardTransform(h):h;let y=!0;if(f){const v=f.forwardCoefficients;y=v&&0===v[1]&&0===v[2],y&&(f=null,h=I)}const x=new qt({data:{extent:I,nativeExtent:h,transform:f,pixelBlock:c,statistics:a,histograms:u,keyProperties:{DateType:"Processed"},isPseudoSpatialReference:m}});yield x.open(),x.data=null,t._set("rasterInfo",x.rasterInfo),t._inMemoryRaster=x})()}fetchRawTile(s,t,c,i={}){return this._inMemoryRaster.fetchRawTile(s,t,c,i)}_fetchData(s){var t=this;return(0,Z.Z)(function*(){const{data:c}=yield t.request(t.url,{responseType:"array-buffer",signal:null==s?void 0:s.signal}),i=(0,ut.y)(c).toUpperCase();if("JPG"!==i&&"PNG"!==i&&"GIF"!==i&&"BMP"!==i)throw new L.Z("image-aux-raster:open","the data is not a supported format");t._set("datasetFormat",i);const a=i.toLowerCase(),u="gif"===a||"bmp"===a||!(0,Qt.Z)("ios"),f=yield t.decodePixelBlock(c,{format:a,useCanvas:u,hasNoZlibMask:!0});if(null==f)throw new L.Z("image-aux-raster:open","the data cannot be decoded");return f})()}_fetchAuxiliaryData(s){var t=this;return(0,Z.Z)(function*(){var h,I;const c=(0,T.Wg)(null==s?void 0:s.signal),i=null!=(h=t.ioConfig.skipExtensions)?h:[],a=i.includes("aux.xml")?null:t.request(t.url+".aux.xml",{responseType:"xml",signal:c}),u=t.datasetFormat,f="JPG"===u?"jgw":"PNG"===u?"pgw":"BMP"===u?"bpw":null,m=f&&i.includes(f)?null:t.request(t.url.slice(0,t.url.lastIndexOf("."))+"."+f,{responseType:"text",signal:c}),d=yield(0,we.as)([a,m]);if(null!=c&&c.aborted)throw(0,we.zE)();const p=et(null==(I=d[0].value)?void 0:I.data);if(!p.transform){const y=d[1].value?d[1].value.data.split("\n").slice(0,6).map(x=>Number(x)):null;p.transform=6===(null==y?void 0:y.length)?new Qe.Z({forwardCoefficients:[y[4],y[5],y[0],-y[1],y[2],-y[3]]}):null}return p})()}};(0,F._)([(0,M.Cb)({type:String,json:{write:!0}})],We.prototype,"datasetFormat",void 0),We=(0,F._)([(0,le.j)("esri.layers.support.rasterDatasets.ImageAuxRaster")],We);const Le=We;var nr=w(21726),ir=w(51026),sr=w(28930),ar=w(76671),or=w(99208);let De=class extends ge{constructor(){super(...arguments),this._levelOffset=0,this._tilemapCache=null,this._slices=null,this.datasetFormat="RasterTileServer",this.tileType=null}open(s){var t=this;return(0,Z.Z)(function*(){var B,H,P,z,J;yield t.init();const c=s&&s.signal,i=t.sourceJSON?{data:t.sourceJSON}:yield t.request(t.url,{query:{f:"json"},signal:c});i.ssl&&(t.url=t.url.replace(/^http:/i,"https:"));const a=i.data;if(t.sourceJSON=a,!a)throw new L.Z("imageserverraster:open","cannot initialize tiled image service, missing service info");if(!a.tileInfo)throw new L.Z("imageserverraster:open","use ImageryLayer to open non-tiled image services");t._fixScaleInServiceInfo(),t.tileType=a.cacheType,null==t.tileType&&(t.tileType=["jpg","jpeg","png","png8","png24","png32","mixed"].includes(a.tileInfo.format.toLowerCase())?"Map":"lerc"===a.tileInfo.format.toLowerCase()?"Elevation":"Raster"),t.datasetName=null!=(H=null==(B=a.name)?void 0:B.slice(a.name.indexOf("/")+1))?H:"";const f=yield t._fetchRasterInfo({signal:c});if((0,T.Wi)(f))throw new L.Z("image-server-raster:open","cannot initialize image service");const m="Map"===t.tileType?(0,ir.d)(a.tileInfo,a):Fe.Z.fromJSON(a.tileInfo);(0,T.O3)(m);const[d,p]=t._computeMinMaxLOD(f,m),{extent:h,pixelSize:I}=f,y=.5/f.width*I.x,x=Math.max(I.x,I.y),{lods:v}=m;("Map"!==t.tileType&&0!==a.maxScale||Math.abs(I.x-I.y)>y||!v.some(N=>Math.abs(N.resolution-x)<y))&&(I.x=I.y=d.resolution,f.width=Math.ceil((h.xmax-h.xmin)/I.x-.1),f.height=Math.ceil((h.ymax-h.ymin)/I.y-.1));const b=d.level-p.level,[R,g]=m.size,S=[],C=[];v.forEach((N,A)=>{N.level>=p.level&&N.level<=d.level&&S.push({x:N.resolution,y:N.resolution}),A<v.length-1&&C.push(Math.round(10*N.resolution/v[A+1].resolution)/10)}),S.sort((N,A)=>N.x-A.x);const D=t.computeBlockBoundary(h,R,g,m.origin,S,b),O=S.length>1?S.slice(1):null;let E;a.transposeInfo&&(E={tileSize:[a.transposeInfo.rows,a.transposeInfo.cols],packetSize:null!=(z=null==(P=f.keyProperties)?void 0:P._yxs.PacketSize)?z:0});const k=C.length<=1||C.length>=3&&C.slice(0,C.length-1).every(N=>N===C[0])?null!=(J=C[0])?J:2:Math.round(10/(p.resolution/d.resolution)**(-1/b))/10;if(f.storageInfo=new Pe.Z({blockWidth:m.size[0],blockHeight:m.size[1],pyramidBlockWidth:m.size[0],pyramidBlockHeight:m.size[1],pyramidResolutions:O,pyramidScalingFactor:k,compression:m.format,origin:m.origin,firstPyramidLevel:1,maximumPyramidLevel:b,tileInfo:m,transposeInfo:E,blockBoundary:D}),t._fixGCSShift(f),t._set("rasterInfo",f),a.capabilities.toLowerCase().includes("tilemap")){const N={tileInfo:f.storageInfo.tileInfo,parsedUrl:(0,nr.mN)(t.url),url:t.url,tileServers:[],type:"tile"};t._tilemapCache=new sr.y({layer:N})}})()}fetchRawTile(s,t,c,i={}){var a=this;return(0,Z.Z)(function*(){const{storageInfo:u,extent:f}=a.rasterInfo,{transposeInfo:m}=u,d=(0,T.pC)(m)&&!!i.transposedVariableName;if(a._slices&&!d&&null==i.sliceId)return null;const h=`${a.url}/tile/${d?0:u.maximumPyramidLevel-s+a._levelOffset}/${t}/${c}`,I=a._slices?d?{variable:i.transposedVariableName}:{sliceId:i.sliceId||0}:null,{data:y}=yield a.request(h,{query:I,responseType:"array-buffer",signal:i.signal});if(!y)return null;const x=d?m.tileSize:u.tileInfo.size,v=yield a.decodePixelBlock(y,{width:x[0],height:x[1],planes:null,pixelType:null,isPoint:"Elevation"===a.tileType,returnInterleaved:d,noDataValue:(0,T.Wg)(a.rasterInfo.noDataValue)});if(null==v)return null;const b=u.blockBoundary[s];if("jpg"!==u.compression||c>b.minCol&&c<b.maxCol&&t>b.minRow&&t<b.maxRow)return v;const{origin:R,blockWidth:g,blockHeight:S}=u,{x:C,y:D}=a.getPyramidPixelSize(s),O=Math.round((f.xmin-R.x)/C)%g,E=Math.round((f.xmax-R.x)/C)%g||g,k=Math.round((R.y-f.ymax)/D)%S,B=Math.round((R.y-f.ymin)/D)%S||S,H=c===b.minCol?O:0,P=t===b.minRow?k:0;return(0,ye.pW)(v,{x:H,y:P},{width:(c===b.maxCol?E:g)-H,height:(t===b.maxRow?B:S)-P}),v})()}getSliceIndex(s){if(!this._slices||(0,T.Wi)(s)||0===s.length)return null;const t=s;for(let c=0;c<this._slices.length;c++){const i=this._slices[c].multidimensionalDefinition;if(i.length===t.length&&!i.some(a=>{const u=t.find(f=>a.variableName===f.variableName&&f.dimensionName===a.dimensionName);return!u||(Array.isArray(a.values[0])?`${a.values[0][0]}-${a.values[0][1]}`:a.values[0])!==(Array.isArray(u.values[0])?`${u.values[0][0]}-${u.values[0][1]}`:u.values[0])}))return c}return null}fetchVariableStatisticsHistograms(s,t){var c=this;return(0,Z.Z)(function*(){const i=c.request(c.url+"/statistics",{query:{variable:s,f:"json"},signal:t}).then(f=>{var m;return null==(m=f.data)?void 0:m.statistics}),a=c.request(c.url+"/histograms",{query:{variable:s,f:"json"},signal:t}).then(f=>{var m;return null==(m=f.data)?void 0:m.histograms}),u=yield Promise.all([i,a]);return u[0]&&u[0].forEach(f=>{f.avg=f.mean,f.stddev=f.standardDeviation}),{statistics:u[0]||null,histograms:u[1]||null}})()}computeBestPyramidLevelForLocation(s,t={}){var c=this;return(0,Z.Z)(function*(){if(!c._tilemapCache)return 0;let i=c.identifyPixelLocation(s,0,(0,T.Wg)(t.datumTransformation));if(null===i)return null;let a=0;const{maximumPyramidLevel:u}=c.rasterInfo.storageInfo;let f=u-a+c._levelOffset;const m=i.srcLocation;for(;f>=0;){try{if("available"===(yield c._tilemapCache.fetchAvailability(f,i.row,i.col,t)))break}catch(d){}if(f--,a++,i=c.identifyPixelLocation(m,a,(0,T.Wg)(t.datumTransformation)),null===i)return null}return-1===f||null==i?null:a})()}_fetchRasterInfo(s){var t=this;return(0,Z.Z)(function*(){const c=t.sourceJSON;if("Map"===t.tileType){const m=c.fullExtent||c.extent,d=Math.ceil((m.xmax-m.xmin)/c.pixelSizeX-.1),p=Math.ceil((m.ymax-m.ymin)/c.pixelSizeY-.1),h=ee.Z.fromJSON(c.spatialReference||m.spatialReference),I=new q.Z({x:c.pixelSizeX,y:c.pixelSizeY,spatialReference:h});return new ke.Z({width:d,height:p,bandCount:3,extent:re.Z.fromJSON(m),spatialReference:h,pixelSize:I,pixelType:"u8",statistics:null,keyProperties:{DataType:"processed"}})}const{signal:i}=s,a=(0,or.g)(t.url,t.sourceJSON,{signal:i,query:t.ioConfig.customFetchParameters}),u=c.hasMultidimensions?t.request(`${t.url}/slices`,{query:{f:"json"},signal:i}).then(m=>m.data&&m.data.slices).catch(()=>null):null,f=yield Promise.all([a,u]);return t._slices=f[1],f[0]})()}_fixScaleInServiceInfo(){const{sourceJSON:s}=this;s.minScale&&s.minScale<0&&(s.minScale=0),s.maxScale&&s.maxScale<0&&(s.maxScale=0)}_fixGCSShift(s){const{extent:t,spatialReference:c}=s;t.xmin>-1&&t.xmax>181&&(null==c?void 0:c.wkid)&&c.isGeographic&&(s.nativeExtent=s.extent,s.transform=new ar.Z,s.extent=s.transform.forwardTransform(t))}_computeMinMaxLOD(s,t){var y,x,v;const{pixelSize:c}=s,i=.5/s.width*c.x,{lods:a}=t,u=t.lodAt(Math.max.apply(null,a.map(b=>b.level))),f=t.lodAt(Math.min.apply(null,a.map(b=>b.level))),{tileType:m}=this;if("Map"===m)return this._levelOffset=a[0].level,[u,f];if("Raster"===m)return[null!=(y=a.find(b=>b.resolution===c.x))?y:u,f];const{minScale:d,maxScale:p}=this.sourceJSON;let h=u;p>0&&(h=a.find(b=>Math.abs(b.scale-p)<i),h||(h=null!=(x=a.filter(b=>b.scale>p).sort((b,R)=>b.scale>R.scale?1:-1)[0])?x:u));let I=f;return d>0&&(I=null!=(v=a.find(b=>Math.abs(b.scale-d)<i))?v:f,this._levelOffset=I.level-f.level),[h,I]}};(0,F._)([(0,M.Cb)({type:String,json:{write:!0}})],De.prototype,"datasetFormat",void 0),(0,F._)([(0,M.Cb)()],De.prototype,"tileType",void 0),De=(0,F._)([(0,le.j)("esri.layers.support.rasterDatasets.ImageServerRaster")],De);const lr=De;var cr=w(25688),ur=w(44853);const ue=new Map;ue.set("Int8","s8"),ue.set("UInt8","u8"),ue.set("Int16","s16"),ue.set("UInt16","u16"),ue.set("Int32","s32"),ue.set("UInt32","u32"),ue.set("Float32","f32"),ue.set("Float64","f32"),ue.set("Double64","f32");const he=new Map;he.set("none",{blobExtension:".til",isOneSegment:!0,decoderFormat:"bip"}),he.set("lerc",{blobExtension:".lrc",isOneSegment:!1,decoderFormat:"lerc"}),he.set("deflate",{blobExtension:".pzp",isOneSegment:!0,decoderFormat:"deflate"}),he.set("jpeg",{blobExtension:".pjg",isOneSegment:!0,decoderFormat:"jpg"});let Te=class extends ge{constructor(){super(...arguments),this._files=null,this._storageIndex=null,this.datasetFormat="MRF"}open(s){var t=this;return(0,Z.Z)(function*(){var R,g;yield t.init(),t.datasetName=t.url.slice(t.url.lastIndexOf("/")+1);const c=s?(0,T.Wg)(s.signal):null,i=yield t.request(t.url,{responseType:"xml",signal:c}),{rasterInfo:a,files:u}=t._parseHeader(i.data);if(-1===(null==(R=t.ioConfig.skipExtensions)?void 0:R.indexOf("aux.xml"))){const S=yield t._fetchAuxiliaryData(s);null!=S&&(a.statistics=null!=(g=S.statistics)?g:a.statistics,a.histograms=S.histograms,S.histograms&&(0,T.Wi)(a.statistics)&&(a.statistics=(0,He.Oh)(S.histograms)))}t._set("rasterInfo",a),t._files=u;const f=yield t.request(u.index,{responseType:"array-buffer",signal:c});t._storageIndex=t._parseIndex(f.data);const{blockWidth:m,blockHeight:d}=t.rasterInfo.storageInfo,p=t.rasterInfo.storageInfo.pyramidScalingFactor,{width:h,height:I}=t.rasterInfo,y=[],x=t._getBandSegmentCount();let v=0,b=-1;for(;v<t._storageIndex.length;){b++;const S=Math.ceil(h/m/p**b)-1,C=Math.ceil(I/d/p**b)-1;v+=(S+1)*(C+1)*x*4,y.push({maxRow:C,maxCol:S,minCol:0,minRow:0})}t.rasterInfo.storageInfo.blockBoundary=y,b>0&&(t.rasterInfo.storageInfo.firstPyramidLevel=1,t.rasterInfo.storageInfo.maximumPyramidLevel=b),t.updateTileInfo()})()}fetchRawTile(s,t,c,i={}){var a=this;return(0,Z.Z)(function*(){const{blockWidth:u,blockHeight:f,blockBoundary:m}=a.rasterInfo.storageInfo,d=m[s];if(!d||d.maxRow<t||d.maxCol<c||d.minRow>t||d.minCol>c)return null;const{bandCount:p,pixelType:h}=a.rasterInfo,{ranges:I,actualTileWidth:y,actualTileHeight:x}=a._getTileLocation(s,t,c);if(!I||0===I.length)return null;if(0===I[0].from&&0===I[0].to){const P=new Uint8Array(u*f);return new cr.Z({width:u,height:f,pixels:null,mask:P,validPixelCount:0})}const{bandIds:v}=a.ioConfig,b=a._getBandSegmentCount(),R=[];let g=0;for(g=0;g<b;g++)(!v||v.indexOf[g]>-1)&&R.push(a.request(a._files.data,{range:{from:I[g].from,to:I[g].to},responseType:"array-buffer",signal:i.signal}));const S=yield Promise.all(R),C=S.map(P=>P.data.byteLength).reduce((P,z)=>P+z),D=new Uint8Array(C);let O=0;for(g=0;g<b;g++)D.set(new Uint8Array(S[g].data),O),O+=S[g].data.byteLength;const E=he.get(a.rasterInfo.storageInfo.compression).decoderFormat,k=yield a.decodePixelBlock(D.buffer,{width:u,height:f,format:E,planes:(null==v?void 0:v.length)||p,pixelType:h});if(null==k)return null;if((0,T.pC)(a.rasterInfo.noDataValue)&&"lerc"!==E&&!k.mask){const P=a.rasterInfo.noDataValue[0];if(null!=P){const z=k.width*k.height,J=new Uint8Array(z);if(Math.abs(P)>1e24)for(g=0;g<z;g++)Math.abs((k.pixels[0][g]-P)/P)>1e-6&&(J[g]=1);else for(g=0;g<z;g++)k.pixels[0][g]!==P&&(J[g]=1);k.mask=J}}let B=0,H=0;if(y!==u||x!==f){let P=k.mask;if(P)for(g=0;g<f;g++)if(H=g*u,g<x)for(B=y;B<u;B++)P[H+B]=0;else for(B=0;B<u;B++)P[H+B]=0;else for(P=new Uint8Array(u*f),k.mask=P,g=0;g<x;g++)for(H=g*u,B=0;B<y;B++)P[H+B]=1}return k})()}_parseIndex(s){if(s.byteLength%16>0)throw new Error("invalid array buffer must be multiples of 16");let t,c,i,a,u,f;if(ur.f){for(c=new Uint8Array(s),a=new ArrayBuffer(s.byteLength),i=new Uint8Array(a),u=0;u<s.byteLength/4;u++)for(f=0;f<4;f++)i[4*u+f]=c[4*u+3-f];t=new Uint32Array(a)}else t=new Uint32Array(s);return t}_getBandSegmentCount(){return he.get(this.rasterInfo.storageInfo.compression).isOneSegment?1:this.rasterInfo.bandCount}_getTileLocation(s,t,c){const{blockWidth:i,blockHeight:a,pyramidScalingFactor:u}=this.rasterInfo.storageInfo,{width:f,height:m}=this.rasterInfo,d=this._getBandSegmentCount();let p,h,I,y=0,x=0;for(I=0;I<s;I++)x=u**I,p=Math.ceil(f/i/x),h=Math.ceil(m/a/x),y+=p*h;x=u**s,p=Math.ceil(f/i/x),h=Math.ceil(m/a/x),y+=t*p+c,y*=4*d;const v=this._storageIndex.subarray(y,y+4*d);let b=0,R=0;const g=[];for(let S=0;S<d;S++)b=v[4*S+0]*2**32+v[4*S+1],R=b+v[4*S+2]*2**32+v[4*S+3],g.push({from:b,to:R});return{ranges:g,actualTileWidth:c<p-1?i:Math.ceil(f/x)-i*(p-1),actualTileHeight:t<h-1?a:Math.ceil(m/x)-a*(h-1)}}_parseHeader(s){var z;const t=ie(s,"MRF_META/Raster");if(!t)throw new L.Z("mrf:open","not a valid MRF format");const c=ie(t,"Size"),i=parseInt(c.getAttribute("x"),10),a=parseInt(c.getAttribute("y"),10),u=parseInt(c.getAttribute("c"),10),f=(ae(t,"Compression")||"none").toLowerCase();if(!he.has(f))throw new L.Z("mrf:open","currently does not support compression "+f);const m=ae(t,"DataType")||"UInt8",d=ue.get(m);if(null==d)throw new L.Z("mrf:open","currently does not support pixel type "+m);const p=ie(t,"PageSize"),h=parseInt(p.getAttribute("x"),10),I=parseInt(p.getAttribute("y"),10),y=ie(t,"DataValues");let x,v;if(y&&(v=y.getAttribute("NoData"),null!=v&&(x=v.trim().split(" ").map(J=>parseFloat(J)))),ie(s,"MRF_META/CachedSource"))throw new L.Z("mrf:open","currently does not support MRF referencing other data files");const b=ie(s,"MRF_META/GeoTags"),R=ie(b,"BoundingBox");let g,S=!1;if(null!=R){const J=parseFloat(R.getAttribute("minx")),N=parseFloat(R.getAttribute("miny")),A=parseFloat(R.getAttribute("maxx")),j=parseFloat(R.getAttribute("maxy")),_=ae(b,"Projection")||"";let X=ee.Z.WGS84;if("LOCAL_CS[]"!==_)if(_.toLowerCase().startsWith("epsg:")){const Y=Number(_.slice(5));isNaN(Y)||0===Y||(X=new ee.Z({wkid:Y}))}else X=null!=(z=Je(_))?z:ee.Z.WGS84;else S=!0,X=new ee.Z({wkid:3857});g=new re.Z(J,N,A,j),g.spatialReference=X}else S=!0,g=new re.Z({xmin:-.5,ymin:.5-a,xmax:i-.5,ymax:.5,spatialReference:new ee.Z({wkid:3857})});const C=ie(s,"MRF_META/Rsets"),D=parseInt(C&&C.getAttribute("scale")||"2",10),O=g.spatialReference,E=new Pe.Z({origin:new q.Z({x:g.xmin,y:g.ymax,spatialReference:O}),blockWidth:h,blockHeight:I,pyramidBlockWidth:h,pyramidBlockHeight:I,compression:f,pyramidScalingFactor:D}),k=new q.Z({x:g.width/i,y:g.height/a,spatialReference:O}),B=new ke.Z({width:i,height:a,extent:g,isPseudoSpatialReference:S,spatialReference:O,bandCount:u,pixelType:d,pixelSize:k,noDataValue:x,storageInfo:E}),H=ae(s,"datafile"),P=ae(s,"IndexFile");return{rasterInfo:B,files:{mrf:this.url,index:P||this.url.replace(".mrf",".idx"),data:H||this.url.replace(".mrf",he.get(f).blobExtension)}}}_fetchAuxiliaryData(s){var t=this;return(0,Z.Z)(function*(){try{const{data:c}=yield t.request(t.url+".aux.xml",{responseType:"xml",signal:null==s?void 0:s.signal});return et(c)}catch(c){return null}})()}};(0,F._)([(0,M.Cb)()],Te.prototype,"_files",void 0),(0,F._)([(0,M.Cb)()],Te.prototype,"_storageIndex",void 0),(0,F._)([(0,M.Cb)({type:String,json:{write:!0}})],Te.prototype,"datasetFormat",void 0),Te=(0,F._)([(0,le.j)("esri.layers.support.rasterIO.MRFRaster")],Te);const fr=Te;var be=w(93122),Ae=w(635);const tt=(s,t)=>{var c;return null==(c=s.get(t))?void 0:c.values},Ze=(s,t)=>{var c,i;return null==(i=null==(c=s.get(t))?void 0:c.values)?void 0:i[0]};let Re=class extends ge{constructor(){super(...arguments),this._files=null,this._headerInfo=null,this._bufferSize=1048576,this.datasetFormat="TIFF"}open(s){var t=this;return(0,Z.Z)(function*(){yield t.init();const c=s?(0,T.Wg)(s.signal):null,{data:i}=yield t.request(t.url,{range:{from:0,to:t._bufferSize},responseType:"array-buffer",signal:c});if(!i)throw new L.Z("tiffraster:open","failed to open url "+t.url);t.datasetName=t.url.slice(t.url.lastIndexOf("/")+1,t.url.lastIndexOf("."));const{littleEndian:a,firstIFDPos:u,isBigTiff:f}=(0,be.cK)(i),m=[];yield t._readIFDs(m,i,a,u,0,f?8:4,c);const{imageInfo:d,rasterInfo:p}=t._parseIFDs(m),h=(0,be.ee)(m),I=(0,be.I7)(m);if(t._headerInfo=W({littleEndian:a,isBigTiff:f,ifds:m,pyramidIFDs:h,maskIFDs:I},d),t._set("rasterInfo",p),!d.isSupported)throw new L.Z("tiffraster:open","this tiff is not supported: "+d.message);if(!d.tileWidth)throw new L.Z("tiffraster:open","none-tiled tiff is not optimized for access, convert to COG and retry.");const{skipExtensions:y=[]}=t.ioConfig;if(!y.includes("aux.xml")){const x=yield t._fetchAuxiliaryMetaData(s);null!=x&&t._processPAMInfo(x,p)}y.includes("vat.dbf")||1!==p.bandCount||"u8"!==p.pixelType||(p.attributeTable=yield t._fetchAuxiliaryTable(s),(0,T.pC)(p.attributeTable)&&(p.keyProperties.DataType="thematic")),t.updateTileInfo()})()}fetchRawTile(s,t,c,i={}){var a=this;return(0,Z.Z)(function*(){var f;if(null==(f=a._headerInfo)||!f.isSupported||a.isBlockOutside(s,t,c))return null;const u=yield a._fetchRawTiffTile(s,t,c,!1,i);if((0,T.pC)(u)&&a._headerInfo.hasMaskBand){const m=yield a._fetchRawTiffTile(s,t,c,!0,i);(0,T.pC)(m)&&m.pixels[0]instanceof Uint8Array&&(u.mask=m.pixels[0])}return u})()}_parseIFDs(s){var J,N;const t=(0,be.FI)(s),{width:c,height:i,tileWidth:a,tileHeight:u,planes:f,pixelType:m,compression:d,firstPyramidLevel:p,maximumPyramidLevel:h,pyramidBlockWidth:I,pyramidBlockHeight:y,tileBoundary:x,affine:v,metadata:b}=t;let g=Je((null==(J=t.extent.spatialReference)?void 0:J.wkt)||(null==(N=t.extent.spatialReference)?void 0:N.wkid)),S=!!t.isPseudoGeographic;null==g&&(S=!0,g=new ee.Z({wkid:3857}));const C=new re.Z(V(W({},t.extent),{spatialReference:g})),D=new q.Z(C?{x:C.xmin,y:C.ymax,spatialReference:g}:{x:0,y:0}),O=new Pe.Z({blockWidth:a,blockHeight:u,pyramidBlockWidth:I,pyramidBlockHeight:y,compression:d,origin:D,firstPyramidLevel:p,maximumPyramidLevel:h,blockBoundary:x}),E=new q.Z({x:(C.xmax-C.xmin)/c,y:(C.ymax-C.ymin)/i,spatialReference:g}),k=b?{BandProperties:b.bandProperties,DataType:b.dataType}:{};let B=null;const H=Ze(s[0],"PHOTOMETRICINTERPRETATION"),P=tt(s[0],"COLORMAP");if(H<=3&&(null==P?void 0:P.length)>3&&P.length%3==0){B=[];const A=P.length/3;for(let j=0;j<A;j++)B.push([j,P[j]>>>8,P[j+A]>>>8,P[j+2*A]>>>8])}const z=new ke.Z({width:c,height:i,bandCount:f,pixelType:m,pixelSize:E,storageInfo:O,spatialReference:g,isPseudoSpatialReference:S,keyProperties:k,extent:C,colormap:B,statistics:b?b.statistics:null});return null!=v&&v.length&&(z.nativeExtent=new re.Z({xmin:-.5,ymin:.5-i,xmax:c-.5,ymax:.5,spatialReference:g}),z.transform=new Qe.Z({polynomialOrder:1,forwardCoefficients:[v[2]+v[0]/2,v[5]-v[3]/2,v[0],v[3],-v[1],-v[4]]}),z.extent=z.transform.forwardTransform(z.nativeExtent),z.pixelSize=new q.Z({x:(C.xmax-C.xmin)/c,y:(C.ymax-C.ymin)/i,spatialReference:g}),O.origin.x=-.5,O.origin.y=.5),{imageInfo:t,rasterInfo:z}}_processPAMInfo(s,t){var c;if(t.statistics=null!=(c=s.statistics)?c:t.statistics,t.histograms=s.histograms,s.histograms&&(0,T.Wi)(t.statistics)&&(t.statistics=(0,He.Oh)(s.histograms)),s.transform&&(0,T.Wi)(t.transform)){t.transform=s.transform,t.nativeExtent=t.extent;const i=t.transform.forwardTransform(t.nativeExtent);t.pixelSize=new q.Z({x:(i.xmax-i.xmin)/t.width,y:(i.ymax-i.ymin)/t.height,spatialReference:t.spatialReference}),t.extent=i}t.isPseudoSpatialReference&&s.spatialReference&&(t.spatialReference=s.spatialReference)}_readIFDs(s,t,c,i,a,u=4,f){var m=this;return(0,Z.Z)(function*(){if(!i)return null;(i>=t.byteLength||i<0)&&(t=(yield m.request(m.url,{range:{from:i+a,to:i+a+m._bufferSize},responseType:"array-buffer",signal:f})).data,a=i+a,i=0);const d=yield m._readIFD(t,c,i,a,Ae.Z.TIFF_TAGS,u,f);if(s.push(d.ifd),!d.nextIFD)return null;yield m._readIFDs(s,t,c,d.nextIFD-a,a,u,f)})()}_readIFD(s,t,c,i,a=Ae.Z.TIFF_TAGS,u=4,f){var m=this;return(0,Z.Z)(function*(){var p,h;if(!s)return null;const d=(0,be.vr)(s,t,c,i,a,u);if(d.success){const I=[];if(null==(p=d.ifd)||p.forEach(y=>{y.values||I.push(y)}),I.length>0){const y=I.map(v=>v.offlineOffsetSize).filter(T.pC),x=Math.min.apply(null,y.map(v=>v[0]));if(Math.min.apply(null,y.map(v=>v[0]+v[1]))-x<=m._bufferSize){const{data:v}=yield m.request(m.url,{range:{from:x,to:x+m._bufferSize},responseType:"array-buffer",signal:f});s=v,i=x,I.forEach(b=>(0,be.Dq)(s,t,b,i))}}if(null!=(h=d.ifd)&&h.has("GEOKEYDIRECTORY")){const y=d.ifd.get("GEOKEYDIRECTORY"),x=null==y?void 0:y.values;if(x&&x.length>4){const v=x[0]+"."+x[1]+"."+x[2],b=yield m._readIFD(s,t,y.valueOffset+6-i,i,Ae.Z.GEO_KEYS,2,f);y.data=b.ifd,y.data&&y.data.set("GEOTIFFVersion",{id:0,type:2,valueCount:1,valueOffset:null,values:[v]})}}return d}return d.requiredBufferSize&&d.requiredBufferSize!==s.byteLength?(s=(yield m.request(m.url,{range:{from:i,to:i+d.requiredBufferSize+4},responseType:"array-buffer",signal:f})).data).byteLength<d.requiredBufferSize?null:m._readIFD(s,t,0,i,Ae.Z.TIFF_TAGS,4,f):void 0})()}_fetchRawTiffTile(s,t,c,i,a={}){var u=this;return(0,Z.Z)(function*(){const f=u._getTileLocation(s,t,c,i);if(!f)return null;const{ranges:m,actualTileWidth:d,actualTileHeight:p,ifd:h}=f,I=m.map(k=>u.request(u.url,{range:k,responseType:"array-buffer",signal:a.signal})),y=yield Promise.all(I),x=y.map(k=>k.data.byteLength).reduce((k,B)=>k+B),v=1===y.length?y[0].data:new ArrayBuffer(x),b=[0],R=[0];if(y.length>1){const k=new Uint8Array(v);for(let B=0,H=0;B<y.length;B++){const P=y[B].data;k.set(new Uint8Array(P),H),b[B]=H,H+=P.byteLength,R[B]=P.byteLength}}const{blockWidth:g,blockHeight:S}=u.getBlockWidthHeight(s),C=yield u.decodePixelBlock(v,{format:"tiff",customOptions:{headerInfo:u._headerInfo,ifd:h,offsets:b,sizes:R},width:g,height:S,planes:null,pixelType:null});if(null==C)return null;let D,O,E;if(d!==g||p!==S){let k=C.mask;if(k)for(D=0;D<S;D++)if(E=D*g,D<p)for(O=d;O<g;O++)k[E+O]=0;else for(O=0;O<g;O++)k[E+O]=0;else for(k=new Uint8Array(g*S),C.mask=k,D=0;D<p;D++)for(E=D*g,O=0;O<d;O++)k[E+O]=1}return C})()}_getTileLocation(s,t,c,i=!1){const{firstPyramidLevel:a,blockBoundary:u}=this.rasterInfo.storageInfo,f=0===s?0:s-(a-1),{_headerInfo:m}=this;if(!m)return null;const d=i?m.maskIFDs[f]:0===f?null==m?void 0:m.ifds[0]:null==m?void 0:m.pyramidIFDs[f-1];if(!d)return null;const p=(0,be.If)(d,m),h=tt(d,"TILEOFFSETS");if(void 0===h)return null;const I=tt(d,"TILEBYTECOUNTS"),{minRow:y,minCol:x,maxRow:v,maxCol:b}=u[f];if(t>v||c>b||t<y||c<x)return null;const R=Ze(d,"IMAGEWIDTH"),g=Ze(d,"IMAGELENGTH"),S=Ze(d,"TILEWIDTH"),C=Ze(d,"TILELENGTH"),D=p?this.rasterInfo.bandCount:1,O=D*t*(b+1)+c,E=[{from:h[O],to:h[O+D-1]+I[O+D-1]-1}];if(p){let H=!0;for(let P=0;P<D;P++)if(h[O+P]+I[O+P]!==h[O+P+1]){H=!1;break}if(!H)for(let P=0;P<D;P++)E[P]={from:h[O+P],to:h[O+P]+I[O+P]-1}}return null==h[O]||null==I[O]?null:{ranges:E,ifd:d,actualTileWidth:c===b&&R%S||S,actualTileHeight:t===v&&g%C||C}}_fetchAuxiliaryMetaData(s){var t=this;return(0,Z.Z)(function*(){try{const{data:c}=yield t.request(t.url+".aux.xml",{responseType:"xml",signal:null==s?void 0:s.signal});return et(c)}catch(c){return null}})()}_fetchAuxiliaryTable(s){var t=this;return(0,Z.Z)(function*(){try{const{data:c}=yield t.request(t.url+".vat.dbf",{responseType:"array-buffer",signal:null==s?void 0:s.signal}),i=pt.parse(c);return null!=i&&i.recordSet?yt.Z.fromJSON(i.recordSet):null}catch(c){return null}})()}};(0,F._)([(0,M.Cb)()],Re.prototype,"_files",void 0),(0,F._)([(0,M.Cb)()],Re.prototype,"_headerInfo",void 0),(0,F._)([(0,M.Cb)()],Re.prototype,"_bufferSize",void 0),(0,F._)([(0,M.Cb)({type:String,json:{write:!0}})],Re.prototype,"datasetFormat",void 0),Re=(0,F._)([(0,le.j)("esri.layers.support.rasterDatasets.TIFFRaster")],Re);const dr=Re,te=new Map;te.set("CRF",{desc:"Cloud Raster Format",constructor:Kt}),te.set("MRF",{desc:"Meta Raster Format",constructor:fr}),te.set("TIFF",{desc:"GeoTIFF",constructor:dr}),te.set("RasterTileServer",{desc:"Raster Tile Server",constructor:lr}),te.set("JPG",{desc:"JPG Raster Format",constructor:Le}),te.set("PNG",{desc:"PNG Raster Format",constructor:Le}),te.set("GIF",{desc:"GIF Raster Format",constructor:Le}),te.set("BMP",{desc:"BMP Raster Format",constructor:Le});var pr=w(49430);let G=class extends((0,Pt.h)((0,$t.M)((0,Ut.q)((0,jt.I)((0,Mt.N)(_t((0,Vt.n)((0,Ft.Y)((0,Gt.Q)((0,Rt.R)(wt.Z))))))))))){constructor(...s){super(...s),this._primaryRasters=null,this.bandIds=null,this.interpolation=null,this.legendEnabled=!0,this.isReference=null,this.listMode="show",this.sourceJSON=null,this.version=null,this.type="imagery-tile",this.operationalLayerType="ArcGISTiledImageServiceLayer",this.popupEnabled=!0,this.popupTemplate=null,this.fields=null}normalizeCtorArgs(s,t){return"string"==typeof s?W({url:s},t):s}load(s){const t=(0,T.pC)(s)?s.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"]},s).catch(we.r9).then(()=>this._openRaster(t))),Promise.resolve(this)}get defaultPopupTemplate(){return this.createPopupTemplate()}get rasterFields(){var m;let s=[new Me.Z({name:"Raster.ServicePixelValue",alias:"Pixel Value",domain:null,editable:!1,length:50,type:"string"})];const{rasterInfo:t}=this,c=null==t?void 0:t.attributeTable,i=(0,T.pC)(c)?c.fields:null;if(i){const d=i.filter(p=>"oid"!==p.type&&"value"!==p.name.toLowerCase()).map(p=>{const h=p.clone();return h.name="Raster."+p.name,h});s=s.concat(d)}const u=null==t?void 0:t.dataType,f=null==t?void 0:t.multidimensionalInfo;if(("vector-magdir"===u||"vector-uv"===u)&&(0,T.pC)(f)){const d=null==(m=f.variables[0].unit)?void 0:m.trim();s.push(new Me.Z({name:"Raster.Magnitude",alias:"Magnitude"+(d?` (${d})`:""),domain:null,editable:!1,type:"double"})),s.push(new Me.Z({name:"Raster.Direction",alias:"Direction (\xb0)",domain:null,editable:!1,type:"double"}))}return s}set renderer(s){this._set("renderer",s),this.updateRenderer()}readRenderer(s,t,c){const a=(0,ze.ij)(t&&t.layerDefinition&&t.layerDefinition.drawingInfo&&t.layerDefinition.drawingInfo.renderer,c)||void 0;if(null!=a)return a}createPopupTemplate(s){return(0,pr.eZ)({fields:this.rasterFields,title:this.title},s)}generateRasterInfo(s,t){var c=this;return(0,Z.Z)(function*(){if(!(s=(0,Ge.TJ)(Ve.Z,s)))return c._primaryRasters[0].rasterInfo;try{const i={raster:c._primaryRasters[0]};c._primaryRasters.length>1&&c._primaryRasters.forEach(f=>i[f.url]=f);const a=(0,Ee.Ue)(s.toJSON(),i),u=new Xe({rasterFunction:a});return yield u.open(t),u.rasterInfo}catch(i){return null}})()}write(s,t){const{raster:c}=this;return(this.loaded?"RasterTileServer"===c.datasetFormat&&("Raster"===c.tileType||"Map"===c.tileType):this.url&&/\/ImageServer(\/|\/?$)/i.test(this.url))?super.write(s,t):(t&&t.messages&&t.messages.push(new L.Z("layer:unsupported",`Layers (${this.title}, ${this.id}) of type '${this.declaredClass}' are not supported in the context of '${t.origin}/${t.layerContainerType||"operational-layers"}'`,{layer:this})),null)}_openRaster(s){var t=this;return(0,Z.Z)(function*(){var a;let c=!1;if(t.raster)t.raster.rasterInfo||(yield t.raster.open()),"Function"===t.raster.datasetFormat?(c=!0,t._primaryRasters=t.raster.primaryRasters.rasters):t._primaryRasters=[t.raster],t.url=t.raster.url;else{const{rasterFunction:u}=t,f=[t.url];u&&(0,Ee.G8)(u.toJSON(),f);const m=yield Promise.all(f.map(p=>class mr{static get supportedFormats(){const t=new Set;return te.forEach((c,i)=>t.add(i)),t}static open(t){var c=this;return(0,Z.Z)(function*(){const{url:i,ioConfig:a,sourceJSON:u}=t;let f=t.datasetFormat;null==f&&i.lastIndexOf(".")&&(f=i.slice(i.lastIndexOf(".")+1).toUpperCase()),"OVR"===f||"TIF"===f?f="TIFF":"JPG"!==f&&"JPEG"!==f&&"JFIF"!==f||(f="JPG"),i.toLowerCase().includes("/imageserver")&&!i.toLowerCase().includes("/wcsserver")&&(f="RasterTileServer");const m={url:i,sourceJSON:u,datasetFormat:f,ioConfig:null!=a?a:{bandIds:null,sampling:null}};let d,p;if(f&&c.supportedFormats.has(f)){if("CRF"===f&&(null==a||!a.enableCRF))throw new L.Z("rasterfactory:open",`cannot open raster: ${i}`);return d=te.get(f).constructor,p=new d(m),yield p.open({signal:t.signal}),p}if(f)throw new L.Z("rasterfactory:open","not a supported format "+f);const h=Array.from(te.keys());let I=0;const y=()=>(f=h[I++],f&&("CRF"!==f||(null==a?void 0:a.enableCRF))?(d=te.get(f).constructor,p=new d(m),p.open({signal:t.signal}).then(()=>p).catch(()=>y())):null);return y()})()}static register(t,c,i){te.has(t.toUpperCase())||te.set(t.toUpperCase(),{desc:c,constructor:i})}}.open({url:p,sourceJSON:t.sourceJSON,ioConfig:V(W({sampling:"closest"},t.ioConfig),{customFetchParameters:t.customParameters}),signal:s}))),d=m.findIndex(p=>null==p);if(d>-1)throw new L.Z("imagery-tile-layer:open",`cannot open raster: ${f[d]}`);if(t._primaryRasters=m,u){const p={raster:t._primaryRasters[0]};t._primaryRasters.length>1&&t._primaryRasters.forEach(y=>p[y.url]=y);const h=(0,Ee.Ue)(null!=(a=u.rasterFunctionDefinition)?a:u.toJSON(),p),I=new Xe({rasterFunction:h});try{yield I.open(),t.raster=I}catch(y){const x=je.Z.getLogger(t.declaredClass);y instanceof L.Z&&x.error("imagery-tile-layer:open",y.message),x.warn("imagery-tile-layer:open","the raster function cannot be applied and is removed"),t._set("rasterFunction",null),t.raster=m[0]}}else t.raster=m[0]}const i=t.raster.rasterInfo;if(!i)throw new L.Z("imagery-tile-layer:load","cannot load resources on "+t.url);if(t._set("rasterInfo",c?i:t._primaryRasters[0].rasterInfo),t._set("spatialReference",i.spatialReference),t.sourceJSON=t.sourceJSON||t.raster.sourceJSON,null!=t.sourceJSON){const u="Map"===t.raster.tileType&&null!=t.sourceJSON.minLOD&&null!=t.sourceJSON.maxLOD?t.sourceJSON:V(W({},t.sourceJSON),{minScale:0,maxScale:0});t.read(u,{origin:"service"})}t.title||(t.title=t.raster.datasetName),"Map"===t.raster.tileType&&(t.popupEnabled=!1),t._configDefaultSettings(),t.addHandles((0,St.YP)(()=>t.customParameters,u=>{t.raster&&(t.raster.ioConfig.customFetchParameters=u)}))})()}};(0,F._)([(0,M.Cb)()],G.prototype,"_primaryRasters",void 0),(0,F._)([(0,M.Cb)({type:[Ge.z8],json:{write:{overridePolicy(){var s;return{enabled:!this.loaded||"Raster"===this.raster.tileType||"0,1,2"!==(null==(s=this.bandIds)?void 0:s.join(","))}}}}})],G.prototype,"bandIds",void 0),(0,F._)([(0,M.Cb)({json:{write:{overridePolicy(){return{enabled:!this.loaded||"Raster"===this.raster.tileType||"bilinear"!==this.interpolation}}}}}),(0,Ct.J)(Yt.c)],G.prototype,"interpolation",void 0),(0,F._)([(0,M.Cb)($e.rn)],G.prototype,"legendEnabled",void 0),(0,F._)([(0,M.Cb)({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],G.prototype,"isReference",void 0),(0,F._)([(0,M.Cb)({type:["show","hide"]})],G.prototype,"listMode",void 0),(0,F._)([(0,M.Cb)({json:{read:!0,write:!0}})],G.prototype,"blendMode",void 0),(0,F._)([(0,M.Cb)()],G.prototype,"sourceJSON",void 0),(0,F._)([(0,M.Cb)({readOnly:!0,json:{origins:{service:{read:{source:"currentVersion"}}}}})],G.prototype,"version",void 0),(0,F._)([(0,M.Cb)({readOnly:!0,json:{read:!1}})],G.prototype,"type",void 0),(0,F._)([(0,M.Cb)({type:["ArcGISTiledImageServiceLayer"]})],G.prototype,"operationalLayerType",void 0),(0,F._)([(0,M.Cb)({type:Boolean,value:!0,json:{read:{source:"disablePopup",reader:(s,t)=>!t.disablePopup},write:{target:"disablePopup",overridePolicy(){return{enabled:!this.loaded||"Raster"===this.raster.tileType}},writer(s,t,c){t[c]=!s}}}})],G.prototype,"popupEnabled",void 0),(0,F._)([(0,M.Cb)({type:bt.Z,json:{read:{source:"popupInfo"},write:{target:"popupInfo",overridePolicy(){return{enabled:!this.loaded||"Raster"===this.raster.tileType}}}}})],G.prototype,"popupTemplate",void 0),(0,F._)([(0,M.Cb)({readOnly:!0})],G.prototype,"defaultPopupTemplate",null),(0,F._)([(0,M.Cb)({readOnly:!0,type:[Me.Z]})],G.prototype,"fields",void 0),(0,F._)([(0,M.Cb)({readOnly:!0,type:[Me.Z]})],G.prototype,"rasterFields",null),(0,F._)([(0,M.Cb)({types:ze.dr,json:{name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy(){var t;const s="raster-stretch"===(null==(t=this.renderer)?void 0:t.type)&&"none"===this.renderer.stretchType&&!this.renderer.useGamma;return{enabled:!this.loaded||"Raster"===this.raster.tileType||!s}}},origins:{"web-scene":{types:ze.FK,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:s=>({enabled:s&&"vector-field"!==s.type&&"flow"!==s.type})}}}}})],G.prototype,"renderer",null),(0,F._)([(0,Tt.r)("renderer")],G.prototype,"readRenderer",null),G=(0,F._)([(0,le.j)("esri.layers.ImageryTileLayer")],G);const hr=G}}]);