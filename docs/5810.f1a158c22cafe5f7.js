"use strict";var x=Object.defineProperty,Z=Object.defineProperties,$=Object.getOwnPropertyDescriptors,u=Object.getOwnPropertySymbols,J=Object.prototype.hasOwnProperty,N=Object.prototype.propertyIsEnumerable,O=(_,a,e)=>a in _?x(_,a,{enumerable:!0,configurable:!0,writable:!0,value:e}):_[a]=e,p=(_,a)=>{for(var e in a||(a={}))J.call(a,e)&&O(_,e,a[e]);if(u)for(var e of u(a))N.call(a,e)&&O(_,e,a[e]);return _},D=(_,a)=>Z(_,$(a));(self.webpackChunkexample_app=self.webpackChunkexample_app||[]).push([[5810],{75810:(_,a,e)=>{e.r(a),e.d(a,{default:()=>B});var c=e(15861),l=e(17626),E=e(84792),P=e(26584),h=e(62208),M=e(99959),v=e(10699),T=e(21726),n=e(77712),C=(e(90912),e(85931),e(68653)),m=e(76898),I=e(79334),g=e(44917),L=e(5143),U=e(65088),j=e(49286),A=e(6647),S=e(13812),f=e(91314),R=e(36596);let i=class extends((0,L.Z)((0,U.Y)((0,j.q)((0,A.I)((0,M.R)(g.Z)))))){constructor(...r){super(...r),this.copyright=null,this.heightModelInfo=null,this.path=null,this.minScale=void 0,this.maxScale=void 0,this.opacity=1,this.operationalLayerType="ArcGISTiledElevationServiceLayer",this.sourceJSON=null,this.type="elevation",this.url=null,this.version=null,this._lercDecoder=(0,R.w)()}normalizeCtorArgs(r,t){return"string"==typeof r?p({url:r},t):r}destroy(){this._lercDecoder=(0,h.RY)(this._lercDecoder)}readVersion(r,t){let s=t.currentVersion;return s||(s=9.3),s}load(r){const t=(0,h.pC)(r)?r.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"],supportsData:!1,validateItem:s=>{for(let o=0;o<s.typeKeywords.length;o++)if("elevation 3d layer"===s.typeKeywords[o].toLowerCase())return!0;throw new P.Z("portal:invalid-layer-item-type","Invalid layer item type '${type}', expected '${expectedType}' ",{type:"Image Service",expectedType:"Image Service Elevation 3D Layer"})}},r).catch(v.r9).then(()=>this._fetchImageService(t))),Promise.resolve(this)}fetchTile(r,t,s,o){const d=(0,h.pC)((o=o||{signal:null}).signal)?o.signal:o.signal=(new AbortController).signal,K={responseType:"array-buffer",signal:d},W={noDataValue:o.noDataValue,returnFileInfo:!0};return this.load().then(()=>this._fetchTileAvailability(r,t,s,o)).then(()=>(0,E.default)(this.getTileUrl(r,t,s),K)).then(y=>this._lercDecoder.decode(y.data,W,d)).then(y=>new f.v(y))}getTileUrl(r,t,s){const o=!this.tilemapCache&&this.supportsBlankTile,d=(0,T.B7)(D(p({},this.parsedUrl.query),{blankTile:!o&&null}));return`${this.parsedUrl.path}/tile/${r}/${t}/${s}${d?"?"+d:""}`}queryElevation(r,t){var s=this;return(0,c.Z)(function*(){const{ElevationQuery:o}=yield e.e(2493).then(e.bind(e,42493));return(0,v.k_)(t),(new o).query(s,r,t)})()}createElevationSampler(r,t){var s=this;return(0,c.Z)(function*(){const{ElevationQuery:o}=yield e.e(2493).then(e.bind(e,42493));return(0,v.k_)(t),(new o).createSampler(s,r,t)})()}_fetchTileAvailability(r,t,s,o){return this.tilemapCache?this.tilemapCache.fetchAvailability(r,t,s,o):Promise.resolve("unknown")}_fetchImageService(r){var t=this;return(0,c.Z)(function*(){var d;if(t.sourceJSON)return t.sourceJSON;const s={query:p({f:"json"},t.parsedUrl.query),responseType:"json",signal:r},o=yield(0,E.default)(t.parsedUrl.path,s);o.ssl&&(t.url=null==(d=t.url)?void 0:d.replace(/^http:/i,"https:")),t.sourceJSON=o.data,t.read(o.data,{origin:"service",url:t.parsedUrl})})()}get hasOverriddenFetchTile(){return!this.fetchTile.__isDefault__}};(0,l._)([(0,n.Cb)({json:{read:{source:"copyrightText"}}})],i.prototype,"copyright",void 0),(0,l._)([(0,n.Cb)({readOnly:!0,type:I.Z})],i.prototype,"heightModelInfo",void 0),(0,l._)([(0,n.Cb)({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],i.prototype,"path",void 0),(0,l._)([(0,n.Cb)({type:["show","hide"]})],i.prototype,"listMode",void 0),(0,l._)([(0,n.Cb)({json:{read:!1,write:!1,origins:{service:{read:!1,write:!1},"portal-item":{read:!1,write:!1},"web-document":{read:!1,write:!1}}},readOnly:!0})],i.prototype,"minScale",void 0),(0,l._)([(0,n.Cb)({json:{read:!1,write:!1,origins:{service:{read:!1,write:!1},"portal-item":{read:!1,write:!1},"web-document":{read:!1,write:!1}}},readOnly:!0})],i.prototype,"maxScale",void 0),(0,l._)([(0,n.Cb)({json:{read:!1,write:!1,origins:{"web-document":{read:!1,write:!1}}}})],i.prototype,"opacity",void 0),(0,l._)([(0,n.Cb)({type:["ArcGISTiledElevationServiceLayer"]})],i.prototype,"operationalLayerType",void 0),(0,l._)([(0,n.Cb)()],i.prototype,"sourceJSON",void 0),(0,l._)([(0,n.Cb)({json:{read:!1},value:"elevation",readOnly:!0})],i.prototype,"type",void 0),(0,l._)([(0,n.Cb)(S.HQ)],i.prototype,"url",void 0),(0,l._)([(0,n.Cb)()],i.prototype,"version",void 0),(0,l._)([(0,C.r)("version",["currentVersion"])],i.prototype,"readVersion",null),i=(0,l._)([(0,m.j)("esri.layers.ElevationLayer")],i),i.prototype.fetchTile.__isDefault__=!0;const B=i}}]);