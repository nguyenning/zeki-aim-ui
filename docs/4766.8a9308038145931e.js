"use strict";(self.webpackChunkexample_app=self.webpackChunkexample_app||[]).push([[4766,7777],{77777:(T,A,l)=>{l.r(A),l.d(A,{hydratedAdapter:()=>x});var n=l(2004),i=l(72854),o=l(72642),g=l(37118),m=l(55214);const x={convertToGEGeometry:function _(c,r){if(null==r)return null;let u="cache"in r?r.cache._geVersion:void 0;return null==u&&(u=c.convertJSONToGeometry(r),"cache"in r&&(r.cache._geVersion=u)),u},exportPoint:function E(c,r,u){const d=c.hasZ(r),G=c.hasM(r),f=new o.Z({x:c.getPointX(r),y:c.getPointY(r),spatialReference:u});return d&&(f.z=c.getPointZ(r)),G&&(f.m=c.getPointM(r)),f.cache._geVersion=r,f},exportPolygon:function M(c,r,u){const d=new g.Z({rings:c.exportPaths(r),hasZ:c.hasZ(r),hasM:c.hasM(r),spatialReference:u});return d.cache._geVersion=r,d},exportPolyline:function P(c,r,u){const d=new m.Z({paths:c.exportPaths(r),hasZ:c.hasZ(r),hasM:c.hasM(r),spatialReference:u});return d.cache._geVersion=r,d},exportMultipoint:function R(c,r,u){const d=new i.Z({hasZ:c.hasZ(r),hasM:c.hasM(r),points:c.exportPoints(r),spatialReference:u});return d.cache._geVersion=r,d},exportExtent:function D(c,r,u){const d=c.hasZ(r),G=c.hasM(r),f=new n.Z({xmin:c.getXMin(r),ymin:c.getYMin(r),xmax:c.getXMax(r),ymax:c.getYMax(r),spatialReference:u});if(d){const h=c.getZExtent(r);f.zmin=h.vmin,f.zmax=h.vmax}if(G){const h=c.getMExtent(r);f.mmin=h.vmin,f.mmax=h.vmax}return f.cache._geVersion=r,f}}},44766:(T,A,l)=>{l.r(A),l.d(A,{buffer:()=>C,changeDefaultSpatialReferenceTolerance:()=>k,clearDefaultSpatialReferenceTolerance:()=>b,clip:()=>m,contains:()=>_,convexHull:()=>h,crosses:()=>E,cut:()=>x,densify:()=>J,difference:()=>w,disjoint:()=>r,distance:()=>M,equals:()=>P,extendedSpatialReferenceInfo:()=>g,flipHorizontal:()=>U,flipVertical:()=>W,generalize:()=>H,geodesicArea:()=>F,geodesicBuffer:()=>B,geodesicDensify:()=>N,geodesicLength:()=>Q,intersect:()=>L,intersectLinesToPoints:()=>$,intersects:()=>R,isSimple:()=>G,nearestCoordinate:()=>I,nearestVertex:()=>j,nearestVertices:()=>z,offset:()=>S,overlaps:()=>u,planarArea:()=>X,planarLength:()=>Y,relate:()=>d,rotate:()=>K,simplify:()=>f,symmetricDifference:()=>Z,touches:()=>D,union:()=>V,within:()=>c});var n=l(4918),i=l(77777);function o(e){return Array.isArray(e)?e[0].spatialReference:e&&e.spatialReference}function g(e){return n.G.extendedSpatialReferenceInfo(e)}function m(e,t){return n.G.clip(i.hydratedAdapter,o(e),e,t)}function x(e,t){return n.G.cut(i.hydratedAdapter,o(e),e,t)}function _(e,t){return n.G.contains(i.hydratedAdapter,o(e),e,t)}function E(e,t){return n.G.crosses(i.hydratedAdapter,o(e),e,t)}function M(e,t,a){return n.G.distance(i.hydratedAdapter,o(e),e,t,a)}function P(e,t){return n.G.equals(i.hydratedAdapter,o(e),e,t)}function R(e,t){return n.G.intersects(i.hydratedAdapter,o(e),e,t)}function D(e,t){return n.G.touches(i.hydratedAdapter,o(e),e,t)}function c(e,t){return n.G.within(i.hydratedAdapter,o(e),e,t)}function r(e,t){return n.G.disjoint(i.hydratedAdapter,o(e),e,t)}function u(e,t){return n.G.overlaps(i.hydratedAdapter,o(e),e,t)}function d(e,t,a){return n.G.relate(i.hydratedAdapter,o(e),e,t,a)}function G(e){return n.G.isSimple(i.hydratedAdapter,o(e),e)}function f(e){return n.G.simplify(i.hydratedAdapter,o(e),e)}function h(e,t=!1){return n.G.convexHull(i.hydratedAdapter,o(e),e,t)}function w(e,t){return n.G.difference(i.hydratedAdapter,o(e),e,t)}function Z(e,t){return n.G.symmetricDifference(i.hydratedAdapter,o(e),e,t)}function L(e,t){return n.G.intersect(i.hydratedAdapter,o(e),e,t)}function V(e,t=null){return n.G.union(i.hydratedAdapter,o(e),e,t)}function S(e,t,a,s,y,O){return n.G.offset(i.hydratedAdapter,o(e),e,t,a,s,y,O)}function C(e,t,a,s=!1){return n.G.buffer(i.hydratedAdapter,o(e),e,t,a,s)}function B(e,t,a,s,y,O){return n.G.geodesicBuffer(i.hydratedAdapter,o(e),e,t,a,s,y,O)}function I(e,t,a=!0){return n.G.nearestCoordinate(i.hydratedAdapter,o(e),e,t,a)}function j(e,t){return n.G.nearestVertex(i.hydratedAdapter,o(e),e,t)}function z(e,t,a,s){return n.G.nearestVertices(i.hydratedAdapter,o(e),e,t,a,s)}function v(e){var t,a;return"xmin"in e?"center"in e?e.center:null:"x"in e?e:"extent"in e&&null!=(a=null==(t=e.extent)?void 0:t.center)?a:null}function K(e,t,a){if(null==e)throw new p;const s=e.spatialReference;if(null==(a=null!=a?a:v(e)))throw new p;const y=e.constructor.fromJSON(n.G.rotate(e,t,a));return y.spatialReference=s,y}function U(e,t){if(null==e)throw new p;const a=e.spatialReference;if(null==(t=null!=t?t:v(e)))throw new p;const s=e.constructor.fromJSON(n.G.flipHorizontal(e,t));return s.spatialReference=a,s}function W(e,t){if(null==e)throw new p;const a=e.spatialReference;if(null==(t=null!=t?t:v(e)))throw new p;const s=e.constructor.fromJSON(n.G.flipVertical(e,t));return s.spatialReference=a,s}function H(e,t,a,s){return n.G.generalize(i.hydratedAdapter,o(e),e,t,a,s)}function J(e,t,a){return n.G.densify(i.hydratedAdapter,o(e),e,t,a)}function N(e,t,a,s=0){return n.G.geodesicDensify(i.hydratedAdapter,o(e),e,t,a,s)}function X(e,t){return n.G.planarArea(i.hydratedAdapter,o(e),e,t)}function Y(e,t){return n.G.planarLength(i.hydratedAdapter,o(e),e,t)}function F(e,t,a){return n.G.geodesicArea(i.hydratedAdapter,o(e),e,t,a)}function Q(e,t,a){return n.G.geodesicLength(i.hydratedAdapter,o(e),e,t,a)}function $(e,t){return n.G.intersectLinesToPoints(i.hydratedAdapter,o(e),e,t)}function k(e,t){n.G.changeDefaultSpatialReferenceTolerance(e,t)}function b(e){n.G.clearDefaultSpatialReferenceTolerance(e)}class p extends Error{constructor(){super("Illegal Argument Exception")}}}}]);