"use strict";var z=Object.defineProperty,X=Object.defineProperties,Y=Object.getOwnPropertyDescriptors,f=Object.getOwnPropertySymbols,w=Object.prototype.hasOwnProperty,k=Object.prototype.propertyIsEnumerable,m=(n,o,e)=>o in n?z(n,o,{enumerable:!0,configurable:!0,writable:!0,value:e}):n[o]=e,c=(n,o)=>{for(var e in o||(o={}))w.call(o,e)&&m(n,e,o[e]);if(f)for(var e of f(o))k.call(o,e)&&m(n,e,o[e]);return n},u=(n,o)=>X(n,Y(o));(self.webpackChunkexample_app=self.webpackChunkexample_app||[]).push([[9735],{59735:(n,o,e)=>{e.r(o),e.d(o,{default:()=>F});var a=e(17626),y=e(84792),E=e(26584),T=e(80542),P=e(62208),g=e(99959),S=e(10699),v=e(21726),_=e(77712),R=(e(85931),e(8314),e(66656)),L=e(68653),U=e(76898),I=e(99433),D=e(65234),W=e(44917),A=e(50085),j=e(5143),B=e(19027),K=e(65088),x=e(552),b=e(50107),N=e(49286),G=e(6647),J=e(30346),Z=e(99555),V=e(66120),O=e(38305),$=e(13812),H=e(39058);const C=["Canvas/World_Dark_Gray_Base","Canvas/World_Dark_Gray_Reference","Canvas/World_Light_Gray_Base","Canvas/World_Light_Gray_Reference","Elevation/World_Hillshade","Elevation/World_Hillshade_Dark","Ocean/World_Ocean_Base","Ocean/World_Ocean_Reference","Ocean_Basemap","Reference/World_Boundaries_and_Places","Reference/World_Boundaries_and_Places_Alternate","Reference/World_Transportation","World_Imagery","World_Street_Map","World_Topo_Map"];let s=class extends((0,x.h)((0,V.x)((0,Z.M)((0,N.q)((0,G.I)((0,j.Z)((0,B.O)((0,K.Y)((0,g.R)((0,T.p)((0,J.Q)((0,A.V)((0,b.N)(W.Z)))))))))))))){constructor(...r){super(...r),this.listMode="show",this.isReference=null,this.operationalLayerType="ArcGISTiledMapServiceLayer",this.resampling=!0,this.sourceJSON=null,this.spatialReference=null,this.path=null,this.sublayers=null,this.type="tile",this.url=null}normalizeCtorArgs(r,t){return"string"==typeof r?c({url:r},t):r}load(r){const t=(0,P.pC)(r)?r.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Map Service"]},r).catch(S.r9).then(()=>this._fetchService(t))),Promise.resolve(this)}get attributionDataUrl(){var t;const r=null==(t=this.parsedUrl)?void 0:t.path.toLowerCase();return r&&this._getDefaultAttribution(this._getMapName(r))}readSpatialReference(r,t){return(r=r||t.tileInfo&&t.tileInfo.spatialReference)&&D.Z.fromJSON(r)}writeSublayers(r,t,i,l){if(!this.loaded||!r)return;const d=r.slice().reverse().flatten(({sublayers:h})=>h&&h.toArray().reverse()).toArray(),p=[],M=c({writeSublayerStructure:!1},l);d.forEach(h=>{const Q=h.write({},M);p.push(Q)}),p.some(h=>Object.keys(h).length>1)&&(t.layers=p)}get tileServers(){return this._getDefaultTileServers(this.parsedUrl.path)}castTileServers(r){return Array.isArray(r)?r.map(t=>(0,v.mN)(t).path):null}fetchTile(r,t,i,l={}){const{signal:d}=l,p=this.getTileUrl(r,t,i),M={responseType:"image",signal:d,query:c({},this.refreshParameters)};return(0,y.default)(p,M).then(h=>h.data)}getTileUrl(r,t,i){const l=!this.tilemapCache&&this.supportsBlankTile,d=(0,v.B7)(u(c(u(c({},this.parsedUrl.query),{blankTile:!l&&null}),this.customParameters),{token:this.apiKey})),p=this.tileServers;return`${p&&p.length?p[t%p.length]:this.parsedUrl.path}/tile/${r}/${t}/${i}${d?"?"+d:""}`}_fetchService(r){return new Promise((t,i)=>{if(this.sourceJSON){if(null!=this.sourceJSON.bandCount&&null!=this.sourceJSON.pixelSizeX)throw new E.Z("tile-layer:unsupported-url","use ImageryTileLayer to open a tiled image service");return void t({data:this.sourceJSON})}if(!this.parsedUrl)throw new E.Z("tile-layer:undefined-url","layer's url is not defined");const l=(0,O.Qc)(this.parsedUrl.path);if((0,P.pC)(l)&&"ImageServer"===l.serverType)throw new E.Z("tile-layer:unsupported-url","use ImageryTileLayer to open a tiled image service");(0,y.default)(this.parsedUrl.path,{query:u(c(c({f:"json"},this.parsedUrl.query),this.customParameters),{token:this.apiKey}),responseType:"json",signal:r}).then(t,i)}).then(t=>{if(t.ssl&&(this.url=this.url.replace(/^http:/i,"https:")),this.sourceJSON=t.data,this.read(t.data,{origin:"service",url:this.parsedUrl}),10.1===this.version&&!(0,O.M8)(this.url))return this._fetchServerVersion(this.url,r).then(i=>{this.read({currentVersion:i})}).catch(()=>{})})}_fetchServerVersion(r,t){if(!(0,O.B5)(r))return Promise.reject();const i=r.replace(/(.*\/rest)\/.*/i,"$1")+"/info";return(0,y.default)(i,{query:u(c({f:"json"},this.customParameters),{token:this.apiKey}),responseType:"json",signal:t}).then(l=>{if(l.data&&l.data.currentVersion)return l.data.currentVersion;throw new E.Z("tile-layer:version-not-available")})}_getMapName(r){const t=r.match(/^(?:https?:)?\/\/(server\.arcgisonline\.com|services\.arcgisonline\.com|ibasemaps-api\.arcgis\.com)\/arcgis\/rest\/services\/([^\/]+(\/[^\/]+)*)\/mapserver/i);return t&&t[2]}_getDefaultAttribution(r){if(!r)return;let t;r=r.toLowerCase();for(let i=0,l=C.length;i<l;i++)if(t=C[i],t.toLowerCase().includes(r))return(0,v.hF)("//static.arcgis.com/attribution/"+t)}_getDefaultTileServers(r){const t=-1!==r.search(/^(?:https?:)?\/\/server\.arcgisonline\.com/i),i=-1!==r.search(/^(?:https?:)?\/\/services\.arcgisonline\.com/i);return t||i?[r,r.replace(t?/server\.arcgisonline/i:/services\.arcgisonline/i,t?"services.arcgisonline":"server.arcgisonline")]:[]}get hasOverriddenFetchTile(){return!this.fetchTile.__isDefault__}};(0,a._)([(0,_.Cb)({readOnly:!0})],s.prototype,"attributionDataUrl",null),(0,a._)([(0,_.Cb)({type:["show","hide","hide-children"]})],s.prototype,"listMode",void 0),(0,a._)([(0,_.Cb)({json:{read:!0,write:!0}})],s.prototype,"blendMode",void 0),(0,a._)([(0,_.Cb)({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],s.prototype,"isReference",void 0),(0,a._)([(0,_.Cb)({readOnly:!0,type:["ArcGISTiledMapServiceLayer"]})],s.prototype,"operationalLayerType",void 0),(0,a._)([(0,_.Cb)({type:Boolean})],s.prototype,"resampling",void 0),(0,a._)([(0,_.Cb)()],s.prototype,"sourceJSON",void 0),(0,a._)([(0,_.Cb)({type:D.Z})],s.prototype,"spatialReference",void 0),(0,a._)([(0,L.r)("spatialReference",["spatialReference","tileInfo"])],s.prototype,"readSpatialReference",null),(0,a._)([(0,_.Cb)({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],s.prototype,"path",void 0),(0,a._)([(0,_.Cb)({readOnly:!0})],s.prototype,"sublayers",void 0),(0,a._)([(0,I.c)("sublayers",{layers:{type:[H.Z]}})],s.prototype,"writeSublayers",null),(0,a._)([(0,_.Cb)({json:{read:!1,write:!1}})],s.prototype,"popupEnabled",void 0),(0,a._)([(0,_.Cb)()],s.prototype,"tileServers",null),(0,a._)([(0,R.p)("tileServers")],s.prototype,"castTileServers",null),(0,a._)([(0,_.Cb)({readOnly:!0,json:{read:!1}})],s.prototype,"type",void 0),(0,a._)([(0,_.Cb)($.HQ)],s.prototype,"url",void 0),s=(0,a._)([(0,U.j)("esri.layers.TileLayer")],s),s.prototype.fetchTile.__isDefault__=!0;const F=s}}]);