"use strict";(self.webpackChunkexample_app=self.webpackChunkexample_app||[]).push([[6240],{16240:(y,a,s)=>{s.r(a),s.d(a,{default:()=>c});var r=s(17626),p=s(26584),E=s(99959),d=s(50618),t=s(77712),u=(s(85931),s(8314),s(90912),s(76898)),i=s(44917),O=s(6647);let e=class extends((0,O.I)((0,E.R)(i.Z))){constructor(_){super(_),this.resourceInfo=null,this.type="unsupported"}initialize(){this.addResolvingPromise(new Promise((_,n)=>{(0,d.Os)(()=>{const o=this.resourceInfo&&(this.resourceInfo.layerType||this.resourceInfo.type);let l="Unsupported layer type";o&&(l+=" "+o),n(new p.Z("layer:unsupported-layer-type",l,{layerType:o}))})}))}read(_,n){const o={resourceInfo:_};null!=_.id&&(o.id=_.id),null!=_.title&&(o.title=_.title),super.read(o,n)}write(_){return Object.assign(_||{},this.resourceInfo,{id:this.id})}};(0,r._)([(0,t.Cb)({readOnly:!0})],e.prototype,"resourceInfo",void 0),(0,r._)([(0,t.Cb)({type:["show","hide"]})],e.prototype,"listMode",void 0),(0,r._)([(0,t.Cb)({json:{read:!1},readOnly:!0,value:"unsupported"})],e.prototype,"type",void 0),e=(0,r._)([(0,u.j)("esri.layers.UnsupportedLayer")],e);const c=e}}]);